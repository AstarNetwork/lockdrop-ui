{"version":3,"sources":["resources/quantstamp-logo.png","resources/plasm-logo.png","../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm/legacy lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","theme/themes.ts","components/SectionCard.tsx","components/DropdownOption.tsx","data/lockInfo.ts","components/LockdropForm.tsx","helpers/getWeb3.ts","data/affiliationProgram.ts","models/PlasmDrop.ts","helpers/lockdrop/EthereumLockdrop.ts","helpers/plasmUtils.ts","data/links.ts","components/Navbar.tsx","components/Footer.tsx","components/LockedEthList.tsx","components/LockdropCountdownPanel.tsx","components/LockdropResult.tsx","components/AffiliatorList.tsx","pages/EthLockdropPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","ThemeColors","SectionCard","maxWidth","children","classes","makeStyles","theme","paper","backgroundColor","padding","spacing","margin","useStyles","Container","Paper","elevation","className","DropdownOption","props","items","dataSets","x","key","indexOf","value","label","interface","onIonChange","onChoose","LockdropStart","moment","utc","LockdropEnd","durations","rates","LockdropForm","token","onSubmit","description","useState","BN","lockAmount","setAmount","lockDuration","setDuration","affAccount","setAff","createStyles","formRoot","txButton","formLabel","quantLogo","marginRight","maxHeight","height","verticalAlign","textBox","marginLeft","getTokenRate","filter","Typography","variant","component","align","Link","color","href","rel","target","src","quantstampLogo","alt","parse","position","placeholder","onIonInput","expand","onClick","inputs","duration","amount","affiliation","rate","handleSubmit","getWeb3","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","defaultAddress","validEthAddressList","isRegisteredEthAddress","introducer","includes","toLowerCase","PlmDrop","reciver","basePlm","introducerAndBonuses","affiliationRefsBonuses","locks","this","totalIntroBonuses","BigNumber","i","length","plus","affBonus","calculateAffBonus","toFixed","getTotal","toFormat","calculateIntroBonus","reduce","sum","bonus","totalAmountOfPLMsForLockdrop","times","div","generatePlmAddress","ethPubKey","compressedKey","polkadotUtil","EthCrypto","publicKey","compress","getPubKey","hash","eth","accounts","hashMessage","getAccounts","addresses","sign","slice","sig","res","fromRpcSig","bufferToHex","ecrecover","toBuffer","v","r","s","getAllLockEvents","instance","getPastEvents","fromBlock","ev","all","returnValues","getTransaction","transactionHash","eventHashes","blockHash","lockEvent","getBlock","blockNumber","transactionString","time","timestamp","toString","lock","blockNo","lockOwner","plmBaseIssueRatio","lockData","ethExchangeRate","bonusRate","Web3Utils","fromWei","totalPlmBaseIssuingRate","allLocks","plmBaseIssueAmountInLock","totalPlmsRate","currentIssue","calculateTotalPlm","address","receivingPlm","currentAddressLocks","totalPlmRate","issuingPlm","push","allRefs","results","refEvents","getAllAffReferences","getTotalLockVal","totalVal","currentEth","connectWeb3","net","getId","networkId","deployedNetwork","Lockdrop","networks","Contract","abi","contract","alert","error","Links","Community","link","icon","Company","Products","Collaboration","Blogs","grow","flexGrow","navbar","logoIcon","title","display","inputRoot","sectionDesktop","breakpoints","up","sectionMobile","listItem","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","Navbar","React","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","Boolean","renderMobileMenu","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","IconButton","aria-label","AppBar","Toolbar","edge","plasmLogo","noWrap","aria-controls","aria-haspopup","event","currentTarget","Copyright","Date","getFullYear","root","marginTop","socialIcon","paddingLeft","footer","footerHeader","siteMap","StickyFooter","Grid","container","justify","item","Divider","List","company","ListItem","button","ListItemText","primary","product","collaboration","blog","community","TabPanel","index","other","role","hidden","aria-labelledby","Box","p","a11yProps","LockState","listRoot","palette","background","overflow","listSection","ul","lockListPage","textAlign","tabMenu","LockedEthList","contractInstance","useTheme","setValue","Tabs","onChange","_event","newValue","indicatorColor","textColor","Tab","axis","direction","onChangeIndex","dir","GlobalLocks","lockEvents","setEvents","isLoadingComp","setLoadState","useEffect","interval","setInterval","clearInterval","CircularProgress","subheader","ListSubheader","eventItem","CurrentLocks","getUserLocks","lockInfo","UnlockInfo","getUnlockDate","useCallback","Number","calculateTimeLeft","tillEnd","now","days","Math","floor","hours","minutes","seconds","canUnlock","setLockState","tillUnlock","setUnlockDate","lockIsClaimed","setLockClaim","isLoading","setLoading","checkUnlock","today","lockedDay","unlockDate","getBalance","lockBalance","LinearProgress","ListItemSecondaryAction","sendTransaction","from","to","LockdropCountdownPanel","startTime","endTime","tillStart","valueOf","difference","diff","timeLeft","getLockState","notStart","start","end","setTimeLeft","lockState","totalLockVal","setTotalLockVal","getLockValue","err","PanelWrapper","LockdropResult","pageContent","header","claimButton","totalPlm","setTotalPlm","exRate","setExRate","showIntoRefPopover","setShowIntroRefPopover","showIntoPopover","setShowIntroPopover","totalIssue","countupTotalPlmVal","getTotalPlm","toNumber","decimals","separator","getAffBonus","isOpen","onDidDismiss","data","getIntroBonus","IntoRefItems","IntoAffItems","ClaimPlm","addressPanel","plmAddress","setPlmAddress","getPlasmAddress","pubKey","result","replace","message","size","IntroducerBonusesItems","lockResult","AffiliatorList","lockdropResult","setLockdropResult","sort","b","getAffliationResults","toast","configure","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","hasLockdropEnded","EthLockdropPage","timerInterval","componentDidMount","web3State","setState","on","handleAccountChange","state","getNetworkType","networkType","getLockData","componentWillUnmount","location","reload","allLockEvents","formInputVal","isProcessing","aff","utils","isAddress","amountToSend","toWei","methods","send","success","fetchingLockData","hasLockdropStarted","Component","App","path","exact","hostname","match","createMuiTheme","fontFamily","join","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8/8EAAAA,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,wC,gFCA3C,IAAIC,EAAM,CACT,2CAA4C,CAC3C,IACA,IAED,kCAAmC,CAClC,IACA,IAED,iCAAkC,CACjC,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,iCAAkC,CACjC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,gCAAiC,CAChC,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,qBAAsB,CACrB,IACA,IAED,uCAAwC,CACvC,IACA,IAED,sCAAuC,CACtC,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,mCAAoC,CACnC,IACA,IAED,kCAAmC,CAClC,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,kCAAmC,CAClC,IACA,IAED,iCAAkC,CACjC,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IAC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","file":"static/js/main.fea32fd6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/quantstamp-logo.a01ad5b8.png\";","module.exports = __webpack_public_path__ + \"static/media/plasm-logo.e814f1e5.png\";","var map = {\n\t\"./ion-action-sheet-controller_8.entry.js\": [\n\t\t839,\n\t\t43\n\t],\n\t\"./ion-action-sheet-ios.entry.js\": [\n\t\t840,\n\t\t44\n\t],\n\t\"./ion-action-sheet-md.entry.js\": [\n\t\t841,\n\t\t45\n\t],\n\t\"./ion-alert-ios.entry.js\": [\n\t\t842,\n\t\t24\n\t],\n\t\"./ion-alert-md.entry.js\": [\n\t\t843,\n\t\t25\n\t],\n\t\"./ion-app_8-ios.entry.js\": [\n\t\t844,\n\t\t11\n\t],\n\t\"./ion-app_8-md.entry.js\": [\n\t\t845,\n\t\t12\n\t],\n\t\"./ion-avatar_3-ios.entry.js\": [\n\t\t846,\n\t\t46\n\t],\n\t\"./ion-avatar_3-md.entry.js\": [\n\t\t847,\n\t\t47\n\t],\n\t\"./ion-back-button-ios.entry.js\": [\n\t\t848,\n\t\t48\n\t],\n\t\"./ion-back-button-md.entry.js\": [\n\t\t849,\n\t\t49\n\t],\n\t\"./ion-backdrop-ios.entry.js\": [\n\t\t850,\n\t\t81\n\t],\n\t\"./ion-backdrop-md.entry.js\": [\n\t\t851,\n\t\t82\n\t],\n\t\"./ion-button_2-ios.entry.js\": [\n\t\t852,\n\t\t50\n\t],\n\t\"./ion-button_2-md.entry.js\": [\n\t\t853,\n\t\t51\n\t],\n\t\"./ion-card_5-ios.entry.js\": [\n\t\t854,\n\t\t52\n\t],\n\t\"./ion-card_5-md.entry.js\": [\n\t\t855,\n\t\t53\n\t],\n\t\"./ion-checkbox-ios.entry.js\": [\n\t\t856,\n\t\t54\n\t],\n\t\"./ion-checkbox-md.entry.js\": [\n\t\t857,\n\t\t55\n\t],\n\t\"./ion-chip-ios.entry.js\": [\n\t\t858,\n\t\t56\n\t],\n\t\"./ion-chip-md.entry.js\": [\n\t\t859,\n\t\t57\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t860,\n\t\t83\n\t],\n\t\"./ion-datetime_3-ios.entry.js\": [\n\t\t861,\n\t\t20\n\t],\n\t\"./ion-datetime_3-md.entry.js\": [\n\t\t862,\n\t\t21\n\t],\n\t\"./ion-fab_3-ios.entry.js\": [\n\t\t863,\n\t\t58\n\t],\n\t\"./ion-fab_3-md.entry.js\": [\n\t\t864,\n\t\t59\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t865,\n\t\t84\n\t],\n\t\"./ion-infinite-scroll_2-ios.entry.js\": [\n\t\t866,\n\t\t39\n\t],\n\t\"./ion-infinite-scroll_2-md.entry.js\": [\n\t\t867,\n\t\t40\n\t],\n\t\"./ion-input-ios.entry.js\": [\n\t\t868,\n\t\t60\n\t],\n\t\"./ion-input-md.entry.js\": [\n\t\t869,\n\t\t61\n\t],\n\t\"./ion-item-option_3-ios.entry.js\": [\n\t\t870,\n\t\t62\n\t],\n\t\"./ion-item-option_3-md.entry.js\": [\n\t\t871,\n\t\t63\n\t],\n\t\"./ion-item_8-ios.entry.js\": [\n\t\t872,\n\t\t64\n\t],\n\t\"./ion-item_8-md.entry.js\": [\n\t\t873,\n\t\t65\n\t],\n\t\"./ion-loading-ios.entry.js\": [\n\t\t874,\n\t\t26\n\t],\n\t\"./ion-loading-md.entry.js\": [\n\t\t875,\n\t\t27\n\t],\n\t\"./ion-menu_4-ios.entry.js\": [\n\t\t876,\n\t\t18\n\t],\n\t\"./ion-menu_4-md.entry.js\": [\n\t\t877,\n\t\t19\n\t],\n\t\"./ion-modal-ios.entry.js\": [\n\t\t878,\n\t\t14\n\t],\n\t\"./ion-modal-md.entry.js\": [\n\t\t879,\n\t\t15\n\t],\n\t\"./ion-nav_5.entry.js\": [\n\t\t880,\n\t\t13\n\t],\n\t\"./ion-popover-ios.entry.js\": [\n\t\t881,\n\t\t16\n\t],\n\t\"./ion-popover-md.entry.js\": [\n\t\t882,\n\t\t17\n\t],\n\t\"./ion-progress-bar-ios.entry.js\": [\n\t\t883,\n\t\t66\n\t],\n\t\"./ion-progress-bar-md.entry.js\": [\n\t\t884,\n\t\t67\n\t],\n\t\"./ion-radio_2-ios.entry.js\": [\n\t\t885,\n\t\t32\n\t],\n\t\"./ion-radio_2-md.entry.js\": [\n\t\t886,\n\t\t33\n\t],\n\t\"./ion-range-ios.entry.js\": [\n\t\t887,\n\t\t68\n\t],\n\t\"./ion-range-md.entry.js\": [\n\t\t888,\n\t\t69\n\t],\n\t\"./ion-refresher_2-ios.entry.js\": [\n\t\t889,\n\t\t41\n\t],\n\t\"./ion-refresher_2-md.entry.js\": [\n\t\t890,\n\t\t42\n\t],\n\t\"./ion-reorder_2-ios.entry.js\": [\n\t\t891,\n\t\t37\n\t],\n\t\"./ion-reorder_2-md.entry.js\": [\n\t\t892,\n\t\t38\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t893,\n\t\t85\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t894,\n\t\t70\n\t],\n\t\"./ion-searchbar-ios.entry.js\": [\n\t\t895,\n\t\t28\n\t],\n\t\"./ion-searchbar-md.entry.js\": [\n\t\t896,\n\t\t29\n\t],\n\t\"./ion-segment_2-ios.entry.js\": [\n\t\t897,\n\t\t71\n\t],\n\t\"./ion-segment_2-md.entry.js\": [\n\t\t898,\n\t\t72\n\t],\n\t\"./ion-select_3-ios.entry.js\": [\n\t\t899,\n\t\t34\n\t],\n\t\"./ion-select_3-md.entry.js\": [\n\t\t900,\n\t\t35\n\t],\n\t\"./ion-slide_2-ios.entry.js\": [\n\t\t901,\n\t\t86\n\t],\n\t\"./ion-slide_2-md.entry.js\": [\n\t\t902,\n\t\t87\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t903,\n\t\t73\n\t],\n\t\"./ion-split-pane-ios.entry.js\": [\n\t\t904,\n\t\t88\n\t],\n\t\"./ion-split-pane-md.entry.js\": [\n\t\t905,\n\t\t89\n\t],\n\t\"./ion-tab-bar_2-ios.entry.js\": [\n\t\t906,\n\t\t74\n\t],\n\t\"./ion-tab-bar_2-md.entry.js\": [\n\t\t907,\n\t\t75\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t908,\n\t\t36\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t909,\n\t\t76\n\t],\n\t\"./ion-textarea-ios.entry.js\": [\n\t\t910,\n\t\t77\n\t],\n\t\"./ion-textarea-md.entry.js\": [\n\t\t911,\n\t\t78\n\t],\n\t\"./ion-toast-ios.entry.js\": [\n\t\t912,\n\t\t30\n\t],\n\t\"./ion-toast-md.entry.js\": [\n\t\t913,\n\t\t31\n\t],\n\t\"./ion-toggle-ios.entry.js\": [\n\t\t914,\n\t\t22\n\t],\n\t\"./ion-toggle-md.entry.js\": [\n\t\t915,\n\t\t23\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t916,\n\t\t90\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 405;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t920,\n\t\t98\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 407;\nmodule.exports = webpackAsyncContext;","export const ThemeColors = {\n    darkGrey: '#383838',\n    lightGrey: '#999999',\n    white: '#ffffff',\n    black: '#000000',\n    darkBlue: '#2C3E50',\n    orange: '#FF5838',\n    darkRed: '#5c0f0f',\n    blue: '#4C8DFF',\n};\n\nexport const ThemeFontFamily = {\n    logo: 'sans',\n    paragraph: 'not sans',\n};\n\nconst colors = {\n    transparent: 'rgba(0, 0, 0, 0)',\n    footerTransparent: 'rgba(0, 0, 0, 0.12)',\n    navy: '#1d417f',\n    ceruleanBlue: '#102e83',\n    blue: '#2179ee',\n    lightBlue: '#56ccf2',\n    periwinkle: '#D4D3E9',\n    teal: '#00FFD1',\n    green: '#28D24E',\n    crimson: '#DC143C',\n    red: '#D22828',\n    lightRed: '#ED0257',\n    coral: '#ff6759',\n    pink: '#FF17E8',\n    gold: '#f0b95b',\n    yellow: '#FFC700',\n    purple: '#7537ef',\n    lightPurple: '#56408B',\n    darkPurple: 'rgba(10, 7, 82, 0.75)',\n    softPurple: '#9795C5',\n    white: '#ffffff',\n    creamWhite: '#f4f5f7',\n    black: '#000000',\n    grey: '#333333',\n    lightGrey: 'grey',\n    softGrey: '#1D1B4D',\n    slaty: '#797992',\n    lavender: '#e5e5f8',\n    rat: '#cecddc',\n};\n\nconst secondaryColors = {\n    grey10: '#f3f4f8',\n    grey20: '#e1e5eb',\n    grey30: '#c2c6cc',\n    grey40: '#9ea2a8',\n    grey50: '#686c73',\n    grey60: '#30363d',\n    blue10: '#ade7ff',\n    blue20: '#61bcff',\n    blue30: '#2179ee',\n    blue40: '#1f4ab4',\n    blue50: '#1d2064',\n    green10: '#b5ffcb',\n    green20: '#5dffa3',\n    green30: '#00cc9a',\n    green40: '#219a8a',\n    green50: '#183f51',\n    purple10: '#dec7ff',\n    purple20: '#a673ff',\n    purple30: '#7537ef',\n    purple40: '#4e23b6',\n    purple50: '#2d1b64',\n    coral10: '#ffc6b3',\n    coral20: '#ff8e75',\n    coral30: '#ff6759',\n    coral40: '#eb312a',\n    coral50: '#7b1e30',\n    gold10: '#ffedc2',\n    gold20: '#ffda8b',\n    gold30: '#f0b95b',\n    gold40: '#e5a229',\n    gold50: '#6a4a24',\n};\n\nconst breakpoints = ['31.25em', '43.75em', '46.875em'];\nconst fontSizes = ['1.2rem', '1.4rem', '1.6rem', '1.8rem', '2.4rem', '2.8rem', '3.2rem', '4.0rem', '4.8rem', '6.4rem'];\nconst space = ['0', '.4rem', '.8rem', '1.2rem', '1.6rem', '2.0rem', '3.2rem', '4.8rem', '6.4rem', '9.6rem'];\n\nconst font =\n    'Work Sans, sans-serif, -apple-system, BlinkMacSystemFont,\"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\",\"Droid Sans\", \"Helvetica Neue\";-webkit-font-smoothing: antialiased;-moz-osx-font-smoothing: grayscale;';\n\nexport interface StyleClosetTheme {\n    breakpoints: string[];\n    fontSizes: string[];\n    space: string[];\n    colors: { [key in keyof typeof colors]: string };\n    secondaryColors: { [key in keyof typeof secondaryColors]: string };\n    font: string;\n}\n\nexport const theme: StyleClosetTheme = {\n    breakpoints,\n    fontSizes,\n    space,\n    colors,\n    secondaryColors,\n    font,\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { ThemeColors } from '../theme/themes';\n\ninterface Props {\n    maxWidth: false | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | undefined;\n}\n\nconst SectionCard: React.FC<Props> = ({ maxWidth, children }) => {\n    const useStyles = makeStyles(theme => ({\n        paper: {\n            backgroundColor: ThemeColors.white,\n            padding: theme.spacing(0, 0, 4),\n            margin: theme.spacing(1),\n        },\n    }));\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Container maxWidth={maxWidth}>\n                <Paper elevation={5} className={classes.paper}>\n                    {children}\n                </Paper>\n            </Container>\n        </>\n    );\n};\n\nexport default SectionCard;\n","import { IonSelect, IonSelectOption } from '@ionic/react';\nimport React from 'react';\nimport { OptionData } from '../models/LockdropModels';\n\n// react function component for making dropdown with the given items\nexport const DropdownOption = (props: OptionData) => {\n    const items = props.dataSets.map(x => {\n        return (\n            <IonSelectOption className=\"dropdown-item\" key={props.dataSets.indexOf(x)} value={x.value}>\n                {x.label}\n            </IonSelectOption>\n        );\n    });\n\n    return (\n        <IonSelect interface=\"popover\" onIonChange={e => props.onChoose(e)}>\n            {items}\n        </IonSelect>\n    );\n};\n","import { OptionItem } from '../models/LockdropModels';\nimport moment from 'moment';\n\n// the time zone is set to UTC as default\n//export const LockdropStart = moment.utc('2020-03-15 00:00:00');\n// lockdrop starts from 1584230400 epoch time\nexport const LockdropStart = moment.utc('2020-03-15 00:00:00');\n// the 1st lockdrop will last for 30 days\n// lockdrop ends in 1586822400\nexport const LockdropEnd = moment.utc('2020-04-14 00:00:00');\n\n// used to define the content of the dropdown menu\nexport const durations: OptionItem[] = [\n    { label: '30 Days', value: 30 },\n    { label: '100 Days', value: 100 },\n    { label: '300 Days', value: 300 },\n    { label: '1000 Days', value: 1000 },\n];\n\n//const txTypes: OptionItem[] = [{ label: 'Web3 Wallet', value: 'web3' }];\n\n// the token increase rate for lock durations\nexport const rates = [\n    { key: 30, value: 24 },\n    { key: 100, value: 100 },\n    { key: 300, value: 360 },\n    { key: 1000, value: 1600 },\n];\n","import { IonLabel, IonButton, IonItem, IonInput, IonCard, IonCardContent, IonChip } from '@ionic/react';\nimport React, { useState } from 'react';\nimport { LockInput } from '../models/LockdropModels';\nimport SectionCard from './SectionCard';\nimport { DropdownOption } from '../components/DropdownOption';\nimport Container from '@material-ui/core/Container';\nimport BN from 'bn.js';\nimport { Typography } from '@material-ui/core';\nimport quantstampLogo from '../resources/quantstamp-logo.png';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport parse from 'html-react-parser';\nimport { durations, rates } from '../data/lockInfo';\n\ntype InputProps = {\n    token: string;\n    onSubmit: Function;\n    description?: string;\n};\n// the main component function\nconst LockdropForm = ({ token, onSubmit, description }: InputProps) => {\n    // states used in this component\n    const [lockAmount, setAmount] = useState<BN>(new BN(0));\n    const [lockDuration, setDuration] = useState(0);\n    const [affAccount, setAff] = useState('');\n\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            formRoot: {\n                padding: theme.spacing(4, 3, 0),\n            },\n            txButton: {\n                margin: theme.spacing(3),\n            },\n            formLabel: {\n                margin: theme.spacing(2),\n            },\n            quantLogo: {\n                marginRight: theme.spacing(2),\n                maxHeight: 20,\n                height: '100%',\n                verticalAlign: 'middle',\n            },\n            textBox: {\n                marginLeft: 'auto',\n                marginRight: 'auto',\n            },\n        }),\n    );\n\n    const classes = useStyles();\n\n    function getTokenRate() {\n        if (lockDuration) {\n            return rates.filter(x => x.key === lockDuration)[0].value;\n        }\n        return 0;\n    }\n\n    // the submit button function\n    function handleSubmit() {\n        const inputs: LockInput = {\n            duration: lockDuration,\n            amount: lockAmount,\n            affiliation: affAccount,\n            rate: getTokenRate(),\n        };\n        onSubmit(inputs);\n    }\n\n    // main render JSX\n    return (\n        <>\n            <SectionCard maxWidth=\"lg\">\n                <div className={classes.formRoot}>\n                    <Typography variant=\"h4\" component=\"h1\" align=\"center\">\n                        Plasm Network Ethereum Lockdrop\n                    </Typography>\n                    <Typography variant=\"body2\" component=\"h2\" align=\"center\">\n                        Audited by{' '}\n                        <Link\n                            color=\"inherit\"\n                            href=\"https://github.com/staketechnologies/lockdrop-ui/blob/16a2d495d85f2d311957b9cf366204fbfabadeaa/audit/quantstamp-audit.pdf\"\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                        >\n                            <img src={quantstampLogo} alt=\"\" className={classes.quantLogo} />\n                        </Link>\n                    </Typography>\n                    {/* <IonLabel className={classes.formLabel}>About</IonLabel> */}\n                    {description ? (\n                        <IonCard className={classes.textBox}>\n                            <IonCardContent>{parse(description)}</IonCardContent>\n                        </IonCard>\n                    ) : (\n                        <div></div>\n                    )}\n\n                    <IonItem>\n                        <IonLabel position=\"floating\">Number of {token}</IonLabel>\n                        <IonInput\n                            placeholder={'ex: 0.64646 ' + token}\n                            onIonInput={e => setAmount(((e.target as HTMLInputElement).value as unknown) as BN)}\n                        ></IonInput>\n                    </IonItem>\n                    <IonLabel className={classes.formLabel}>Lock Duration</IonLabel>\n                    <IonItem>\n                        <DropdownOption\n                            dataSets={durations}\n                            onChoose={(e: React.ChangeEvent<HTMLInputElement>) =>\n                                setDuration((e.target.value as unknown) as number)\n                            }\n                        ></DropdownOption>\n                        <IonChip>\n                            <IonLabel>\n                                {lockDuration ? 'The rate is ' + getTokenRate() + 'x' : 'Please choose the duration'}\n                            </IonLabel>\n                        </IonChip>\n                    </IonItem>\n\n                    <IonItem>\n                        <IonCard className={classes.textBox}>\n                            <IonCardContent>\n                                If you have a friend who is also participating in the lockdrop and is part of our\n                                affiliation program, please input the address. Both parties will be able to receive a\n                                bonus rate of 1% of what the friend is receiving. Checkout this{' '}\n                                <a href=\"https://medium.com/stake-technologies/lockdrop-with-friends-the-plasm-network-affiliation-program-b385c1cd800d\">\n                                    article\n                                </a>{' '}\n                                for details.\n                            </IonCardContent>\n                        </IonCard>\n                        <IonLabel position=\"floating\">Affiliation (optional)</IonLabel>\n\n                        <IonInput\n                            placeholder={'ex: 0x324632...'}\n                            onIonInput={e => setAff((e.target as HTMLInputElement).value)}\n                        ></IonInput>\n                    </IonItem>\n                    <Container>\n                        <IonButton expand=\"block\" onClick={() => handleSubmit()} className={classes.txButton}>\n                            Submit Transaction\n                        </IonButton>\n                    </Container>\n                </div>\n            </SectionCard>\n        </>\n    );\n};\n\nexport default LockdropForm;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Web3 from 'web3';\n\nconst getWeb3: any = () =>\n    new Promise((resolve, reject) => {\n        // Wait for loading completion to avoid race conditions with web3 injection timing.\n        window.addEventListener('load', async () => {\n            // Modern dapp browsers...\n            if ((window as any).ethereum) {\n                const web3 = new Web3((window as any).ethereum);\n                try {\n                    // Request account access if needed\n                    await (window as any).ethereum.enable();\n                    console.log('Dapp browser detected');\n                    // Acccounts now exposed\n                    resolve(web3);\n                } catch (error) {\n                    reject(error);\n                }\n            }\n            // Legacy dapp browsers...\n            else if ((window as any).web3) {\n                // Use Mist/MetaMask's provider.\n                const web3 = (window as any).web3;\n                console.log('Injected web3 detected.');\n                resolve(web3);\n            }\n            // Fallback to localhost; use dev console port by default...\n            else {\n                const provider = new Web3.providers.HttpProvider('http://127.0.0.1:8545');\n                const web3 = new Web3(provider);\n                console.log('No web3 instance injected, using Local web3.');\n                resolve(web3);\n            }\n        });\n    });\n\nexport default getWeb3;\n","// the default introducer address when none is provided by the user\nexport const defaultAddress = '0x0000000000000000000000000000000000000000';\n\nexport const affiliationRate = 0.01;\n\nexport const validEthAddressList = [\n    '0xd8de1f6764e442b8763d313722e9eaee3779707e',\n    '0x1d32750e8a03443f008236f7c344fc84821cf690',\n    '0xa5a6d551ab33c3920848844b3fe3b27591df8f10',\n    '0xd8068f813c45c88cebb02cbc0f91f95626ec9a34',\n    '0x45ee0a0db0e775aecbebb300ccfc6486690b3287',\n    '0xd419d53817e1daa7b2f72e51707774f3ff0a54a3',\n    '0x1080355c93a1b4c0dd3c340eed4f7e514c583077',\n    '0x0013aa2fb5ec916660b38f1d53d4fc9bf8ef8a84',\n    '0x78ce6849d00c2f22aec93d29144fc68366cf0c62',\n    '0x60dc4b3d8e8d2c5449186270f385a56a21bb82c3',\n    '0x380566185c87ab93ca4edd474cf6998b5fc4153e',\n    '0x6a61dc52015945dfc6cd0c42f94a722d5022e3d1',\n    '0x520e74218a9fd5563855f11d204810281a833e0f',\n    '0x27c72e4bd23c910218d8f06c4a1742e06657c874',\n    '0xd307ff28710b7a4587200c5ba4c67648c1f24045',\n    '0x9498db340a3ecab7bb0973ee36e95e58c8e58a41',\n    '0xe552821ee85284249c71d4abfc4437992ed2fb93',\n    '0xc78a748dccbd806ae782eb3b8590ae7d162e5a90',\n    '0x20edd77ea8582f4a2400d3c0d53154a74a1ca887',\n    '0xeef2e4a5f6a01d5fb89f38211fb4e6a8702d33b6',\n    '0x531c2607862de00604f600cff6be9cb312467570',\n    '0xf22b286fda7369255376742f360ffcee4e1fbd42',\n    '0xb35e0bfec9facd8f2dcc0e43e68350d5e7baa82f',\n    '0x7b4d4ba1070c4562c568fed6280c800a68fa5427',\n    '0x81042f7f99a86d3981308e72feb36bd791c31920',\n    '0xb98df9f7cdc3a983081cefa1cd94aed4e936f1a9',\n    '0x5b6c1f8838b9abf16c0383b7e4f3c5a750707af2',\n    '0x711b3ca2cc9d5a827f83d5ceafcb0925f2fb82b3',\n    '0x8e7fcc7a17f00f0f5f85f2d5964a581d0813c8a6',\n    '0x6b5e2758bdb9ed798acbfd64104c1deaf09cd24b',\n    '0x55763d6db54736084c1b8d010aa1d99f0dc6d07c',\n    '0xfadf736b86f09f2d07d2b655cfc848fe215140d4',\n    '0x9f4f9e15a4a963a9a3885979cc64b326dcaa18a8',\n    '0x0def9b4811e4c4e9da5acf82d421c97b5e9c152f',\n\n    defaultAddress,\n];\n\nexport function isRegisteredEthAddress(introducer: string) {\n    return validEthAddressList.includes(introducer.toLowerCase());\n}\n","import BigNumber from 'bignumber.js';\nimport { LockEvent } from './LockdropModels';\n\nexport class PlmDrop {\n    reciver: string;\n    basePlm: BigNumber;\n    introducerAndBonuses: [string, BigNumber][];\n    affiliationRefsBonuses: [string, BigNumber][];\n    locks: LockEvent[];\n\n    constructor(\n        reciver: string,\n        basePlm: BigNumber,\n        introducerAndBonuses: [string, BigNumber][],\n        affiliationRefsBonuses: [string, BigNumber][],\n        locks: LockEvent[],\n    ) {\n        this.reciver = reciver;\n        this.basePlm = basePlm;\n        this.introducerAndBonuses = introducerAndBonuses;\n        this.affiliationRefsBonuses = affiliationRefsBonuses;\n        this.locks = locks;\n    }\n\n    getTotal() {\n        let totalIntroBonuses = new BigNumber(0);\n\n        for (let i = 0; i < this.introducerAndBonuses.length; i++) {\n            totalIntroBonuses = totalIntroBonuses.plus(this.introducerAndBonuses[i][1]);\n        }\n\n        const affBonus = this.calculateAffBonus();\n\n        return this.basePlm\n            .plus(totalIntroBonuses)\n            .plus(affBonus)\n            .toFixed();\n    }\n\n    getTotalPlm() {\n        return new BigNumber(this.getTotal()).toFixed();\n    }\n\n    getAffBonus() {\n        return new BigNumber(this.calculateAffBonus()).toFormat(2);\n    }\n\n    getIntroBonus() {\n        return new BigNumber(this.calculateIntroBonus()).toFormat(2);\n    }\n\n    // calculate the number of PLM you get for being affiliated\n    calculateAffBonus() {\n        return this.affiliationRefsBonuses.reduce(\n            (sum: BigNumber, bonus: [string, BigNumber]): BigNumber => sum.plus(bonus[1]),\n            new BigNumber(0),\n        );\n    }\n\n    // the number of PLM you get for referencing an affiliate\n    calculateIntroBonus() {\n        return this.introducerAndBonuses.reduce(\n            (sum: BigNumber, bonus: [string, BigNumber]): BigNumber => sum.plus(bonus[1]),\n            new BigNumber(0),\n        );\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n// This module is used for communicating with the Ethereum smart contract\nimport Lockdrop from '../../contracts/Lockdrop.json';\nimport getWeb3 from '../getWeb3';\nimport Web3 from 'web3';\nimport { Contract } from 'web3-eth-contract';\nimport { LockEvent } from '../../models/LockdropModels';\nimport BN from 'bn.js';\nimport BigNumber from 'bignumber.js';\nimport { isRegisteredEthAddress, defaultAddress, affiliationRate } from '../../data/affiliationProgram';\nimport { lockDurationToRate } from '../plasmUtils';\nimport { PlmDrop } from '../../models/PlasmDrop';\nimport Web3Utils from 'web3-utils';\nimport EthCrypto from 'eth-crypto';\nimport * as polkadotUtil from '@polkadot/util-crypto';\nimport { ecrecover, fromRpcSig, toBuffer, bufferToHex } from 'ethereumjs-util';\n\nconst ethMarketApi = 'https://api.coingecko.com/api/v3/coins/ethereum';\n// exchange rate at the start of April 14 UTC (at the end of the lockdrop)\n// historical data was obtained from here https://coinmarketcap.com/currencies/ethereum/historical-data/\nexport const ethFinalExRate = 156.36;\n\n// the total amount of issueing PLMs at 1st Lockdrop.\nconst totalAmountOfPLMs = new BigNumber('500000000.000000000000000');\nconst totalAmountOfPLMsForLockdrop = totalAmountOfPLMs.times(new BigNumber('17').div(new BigNumber('20')));\n\n// generates a Plasm address with the given public key\nexport function generatePlmAddress(ethPubKey: string) {\n    const compressedKey = polkadotUtil.blake2AsU8a(EthCrypto.publicKey.compress(ethPubKey), 256);\n\n    const plmAccountId = polkadotUtil.encodeAddress(compressedKey, 5);\n\n    return plmAccountId;\n}\n\nexport async function getPubKey(web3: Web3) {\n    const msg = 'claim_lockdrop';\n    const hash = web3.eth.accounts.hashMessage(msg);\n    try {\n        const addresses = await web3.eth.getAccounts();\n        const sig = '0x' + (await web3.eth.sign(hash, addresses[0])).slice(2);\n        const res = fromRpcSig(sig);\n\n        return bufferToHex(ecrecover(toBuffer(hash), res.v, res.r, res.s));\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n// returns an array of the entire list of locked events for the contract only once\nexport async function getAllLockEvents(web3: Web3, instance: Contract): Promise<LockEvent[]> {\n    // this value can be set as the block number of where the contract was deployed\n    const startBlock = 0;\n    try {\n        const ev = await instance.getPastEvents('Locked', {\n            fromBlock: startBlock,\n        });\n\n        const eventHashes = await Promise.all(\n            ev.map(async e => {\n                return Promise.all([Promise.resolve(e.returnValues), web3.eth.getTransaction(e.transactionHash)]);\n            }),\n        );\n\n        return Promise.all(\n            eventHashes.map(async e => {\n                // e[0] is lock event and e[1] is block hash\n                const blockHash = e[1];\n                const lockEvent = e[0];\n\n                const transactionString = await Promise.resolve(web3.eth.getBlock(blockHash.blockNumber));\n                const time = transactionString.timestamp.toString();\n                return {\n                    eth: lockEvent.eth as BN,\n                    duration: lockEvent.duration as number,\n                    lock: lockEvent.lock as string,\n                    introducer: lockEvent.introducer as string,\n                    blockNo: blockHash.blockNumber,\n                    timestamp: time,\n                    lockOwner: e[1]['from'],\n                    blockHash: blockHash,\n                } as LockEvent;\n            }),\n        );\n    } catch (error) {\n        console.log(error);\n        // return an empty array when failed\n        return [] as LockEvent[];\n    }\n}\n\nexport function defaultAffiliation(aff: string) {\n    // check if affiliation address is not empty and is not themselves\n    if (aff) {\n        // return itself when it is a valid address\n        return aff;\n    } else {\n        // if it is an invalid address, return the default affiliation address\n        return defaultAddress;\n    }\n}\n\nexport async function getCurrentUsdRate() {\n    let usdRate = 0;\n    try {\n        const res = await fetch(ethMarketApi);\n        const data = await res.json();\n        usdRate = data.market_data.current_price.usd;\n    } catch (error) {\n        console.log(error);\n    }\n    return usdRate;\n}\n\nfunction plmBaseIssueRatio(lockData: LockEvent, ethExchangeRate: BigNumber): BigNumber {\n    // get lockTimeBonus * ethExRate\n    const bonusRate = new BigNumber(lockDurationToRate(lockData.duration)).times(ethExchangeRate);\n\n    // calculate issuingPLMRate = lockedEth([ETH]) * lockBonusRate * ethExRate\n    const issuingRatio: BigNumber = new BigNumber(Web3Utils.fromWei(lockData.eth.toString(), 'ether')).times(\n        new BigNumber(bonusRate),\n    );\n    return issuingRatio;\n}\n\nfunction totalPlmBaseIssuingRate(allLocks: LockEvent[], ethExchangeRate: BigNumber): BigNumber {\n    return allLocks.reduce(\n        (sum: BigNumber, value: LockEvent): BigNumber => sum.plus(plmBaseIssueRatio(value, ethExchangeRate)),\n        new BigNumber(0),\n    );\n}\n\nfunction plmBaseIssueAmountInLock(lock: LockEvent, totalPlmsRate: BigNumber, ethExchangeRate: BigNumber): BigNumber {\n    const currentIssue = plmBaseIssueRatio(lock, ethExchangeRate);\n    return totalAmountOfPLMsForLockdrop.times(currentIssue).div(totalPlmsRate);\n}\n\n// returns an array of addresses that referenced the given address for the affiliation program\nfunction getAllAffReferences(address: string, lockData: LockEvent[]) {\n    // check if there is\n    const results: LockEvent[] = [];\n    const refEvents = lockData.filter(e => e.introducer.toLowerCase() === address.toLowerCase());\n\n    for (let i = 0; i < refEvents.length; i++) {\n        results.push(refEvents[i]);\n    }\n\n    return results;\n}\n\nexport function calculateNetworkAlpha(allLocks: LockEvent[]): BigNumber {\n    const ethExchangeRate = new BigNumber(ethFinalExRate);\n\n    const totalPlmRate = totalPlmBaseIssuingRate(allLocks, ethExchangeRate);\n\n    // alpha_1 = totalAmountOfPLMsForLockdrop /totalPlmRate\n    const alpha1 = totalAmountOfPLMsForLockdrop.div(totalPlmRate);\n\n    return alpha1;\n}\n\n// calculate the total receiving PLMs from the lockdrop including the affiliation program bonus\n// in this function, affiliation means the current address being referenced by others\n// and introducer means this address referencing other affiliated addresses\nexport function calculateTotalPlm(address: string, lockData: LockEvent[]): PlmDrop {\n    const receivingPlm = new PlmDrop(address, new BigNumber(0), [], [], []);\n\n    const currentAddressLocks = lockData.filter(i => i.lockOwner.toLowerCase() === address.toLowerCase());\n\n    receivingPlm.locks = currentAddressLocks;\n\n    const ethExchangeRate = new BigNumber(ethFinalExRate);\n\n    // get total plm rate for calculating actual issuing PLMs.\n    const totalPlmRate = totalPlmBaseIssuingRate(lockData, ethExchangeRate);\n\n    for (let i = 0; i < currentAddressLocks.length; i++) {\n        // calculate total base issuing PLM tokens\n        const issuingPlm = plmBaseIssueAmountInLock(currentAddressLocks[i], totalPlmRate, ethExchangeRate);\n\n        // add value to the total amount\n        receivingPlm.basePlm = receivingPlm.basePlm.plus(issuingPlm);\n\n        // self -> introducer : bonus getting PLMs.\n        // check if this address has an introducer\n        if (\n            isRegisteredEthAddress(currentAddressLocks[i].introducer) &&\n            currentAddressLocks[i].introducer !== defaultAddress\n        ) {\n            receivingPlm.introducerAndBonuses.push([\n                currentAddressLocks[i].introducer,\n                issuingPlm.times(new BigNumber(affiliationRate)),\n            ]);\n        }\n    }\n\n    // someone -> self(introducer) : bonus getting PLMs.\n    // calculate affiliation bonus for this address\n    if (isRegisteredEthAddress(address)) {\n        const allRefs = getAllAffReferences(address, lockData);\n\n        for (let i = 0; i < allRefs.length; i++) {\n            // reference amount * 0.01\n            receivingPlm.affiliationRefsBonuses.push([\n                allRefs[i].lock,\n                plmBaseIssueAmountInLock(allRefs[i], totalPlmRate, ethExchangeRate).times(\n                    new BigNumber(affiliationRate),\n                ),\n            ]);\n        }\n    }\n    return receivingPlm;\n}\n\nexport function getTotalLockVal(locks: LockEvent[]): string {\n    let totalVal = new BigNumber(0);\n    if (locks.length > 0) {\n        for (let i = 0; i < locks.length; i++) {\n            const currentEth = new BigNumber(locks[i].eth.toString());\n            totalVal = totalVal.plus(currentEth);\n        }\n    }\n    return Web3Utils.fromWei(totalVal.toFixed(), 'ether');\n}\n\n// this function will authenticate if the client has metamask installed and can communicate with the blockchain\nexport async function connectWeb3() {\n    try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3();\n        //const web3 = getEthInst();\n\n        if (web3 instanceof Web3) {\n            // Use web3 to get the user's accounts.\n            const accounts = await web3.eth.getAccounts();\n\n            // Get the contract instance.\n            const networkId = await web3.eth.net.getId();\n            const deployedNetwork = (Lockdrop as any).networks[networkId];\n            const instance = new web3.eth.Contract(\n                Lockdrop.abi as any,\n                deployedNetwork && deployedNetwork.address,\n            ) as Contract;\n\n            // assign current web3 instance to window global var\n            window.web3 = web3;\n            window.contract = instance;\n\n            return {\n                web3: web3,\n                accounts: accounts,\n                contract: instance,\n            };\n        }\n    } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert('Failed to load web3, accounts, or contract. Check console for details.');\n        console.error(error);\n    }\n    // return an empty value\n    return {\n        web3: {} as Web3,\n        accounts: [''],\n        contract: {} as Contract,\n    };\n}\n","import BigNumber from 'bignumber.js';\n\nexport function femtoToPlm(femto: BigNumber) {\n    const plmDenominator = new BigNumber(10).pow(-15);\n    return femto.times(plmDenominator);\n}\n\nexport function lockDurationToRate(duration: number) {\n    if (duration < 30) {\n        return 0;\n    } else if (duration < 100) {\n        return 24;\n    } else if (duration < 300) {\n        return 100;\n    } else if (duration < 1000) {\n        return 360;\n    } else {\n        return 1600;\n    }\n}\n","export const Links = {\n    docs: 'https://docs.plasmnet.io',\n    blog: 'https://medium.com/stake-technologies',\n    twitter: 'https://twitter.com/Plasm_Network',\n    github: 'https://github.com/staketechnologies/Plasm',\n    telegram: 'https://t.me/PlasmOfficial',\n    discord: 'https://discordapp.com/invite/Dnfn5eT',\n    email: 'info@stake.co.jp',\n    home: 'https://stake.co.jp/',\n    plasmHome: 'https://plasmnet.io/',\n};\n\nexport const SponsorLinks = {\n    cryptoEconomicsLab: 'https://www.cryptoeconomicslab.com/',\n    parityTechnologies: 'https://www.parity.io/',\n    web3Foundation: 'https://web3.foundation/',\n    longhash: 'https://longhash.co.jp/en/',\n    universityOfTokyo: 'https://www.u-tokyo.ac.jp/en/index.html',\n    connect: 'https://www.blockchain.t.u-tokyo.ac.jp/',\n    parityBuilders: 'https://builders.parity.io/',\n    acala: 'https://acala.network/',\n};\n\nexport const BlogLinks = {\n    lockdropIntroduction: 'https://medium.com/stake-technologies/plasm-lockdrop-introduction-54614592a13',\n};\n\nexport const AppLinks = {\n    plasmnetIo: 'https://apps.plasmnet.io/',\n    polkadotNetwork: 'https://telemetry.polkadot.io/#list/Plasm%20Testnet%20v3',\n    joinLockdrop: 'https://lockdrop.plasmnet.io',\n    inkPlayground: 'https://ink-playground.com/',\n};\n\nexport const Whitepaper = [\n    {\n        description: 'English',\n        link: 'https://github.com/stakedtechnologies/plasmdocs/blob/master/wp/en.pdf',\n        icon: `sticky note outline`,\n    },\n    {\n        description: 'Japanese',\n        link: 'https://github.com/stakedtechnologies/plasmdocs/blob/master/wp/jp.pdf',\n        icon: `sticky note outline`,\n    },\n];\n\nexport const Community = [\n    {\n        description: 'Discord',\n        link: Links.discord,\n        icon: 'discord',\n    },\n    {\n        description: 'Telegram',\n        link: Links.telegram,\n        icon: 'telegram',\n    },\n];\n\nexport const Company = [\n    {\n        description: 'Home',\n        link: Links.home,\n    },\n    {\n        description: 'Contact us',\n        link: `mailto:${Links.email}`,\n    },\n];\n\nexport const Products = [\n    {\n        description: 'Plasm',\n        link: 'https://github.com/staketechnologies/Plasm',\n    },\n    {\n        description: 'Plasm Portal Sites',\n        link: 'https://github.com/staketechnologies/apps',\n    },\n    {\n        description: 'Plasm Lockdrop',\n        link: 'https://github.com/staketechnologies/lockdrop-ui',\n    },\n    {\n        description: 'Plasm documentations',\n        link: 'https://github.com/staketechnologies/plasmdocs',\n    },\n    {\n        description: 'Plasm homepage',\n        link: 'https://github.com/staketechnologies/plasmnet.io',\n    },\n];\n\nexport const Collaboration = [\n    {\n        description: 'Substrate Builders Program',\n        link: 'https://builders.parity.io/',\n    },\n    {\n        description: 'Web3 foundation grants program',\n        link: 'https://web3.foundation/',\n    },\n];\n\nexport const Blogs = [\n    {\n        description: 'Medium',\n        link: Links.blog,\n    },\n];\n\nexport const Discussions = [\n    {\n        link: Links.discord,\n        className: 'discord',\n    },\n    {\n        link: Links.telegram,\n        className: 'telegram',\n    },\n    {\n        link: Links.twitter,\n        className: 'twitter',\n    },\n    {\n        link: Links.github,\n        className: 'github',\n    },\n];\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport plasmLogo from '../resources/plasm-logo.png';\nimport { Links } from '../data/links';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        grow: {\n            flexGrow: 1,\n        },\n        navbar: {\n            backgroundColor: 'black',\n        },\n        logoIcon: {\n            marginRight: theme.spacing(2),\n            maxHeight: 46,\n        },\n        title: {\n            display: 'block',\n        },\n        inputRoot: {\n            color: 'inherit',\n        },\n        sectionDesktop: {\n            display: 'none',\n            [theme.breakpoints.up('md')]: {\n                display: 'flex',\n            },\n        },\n        sectionMobile: {\n            display: 'flex',\n            [theme.breakpoints.up('md')]: {\n                display: 'none',\n            },\n        },\n        listItem: {\n            width: '100%',\n        },\n        heading: {\n            fontSize: theme.typography.pxToRem(15),\n            fontWeight: theme.typography.fontWeightRegular,\n        },\n    }),\n);\n\nexport default function Navbar() {\n    const classes = useStyles();\n    //const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState<null | HTMLElement>(null);\n\n    //const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    // const handleMenuClose = () => {\n    //     setAnchorEl(null);\n    //     handleMobileMenuClose();\n    // };\n\n    const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n\n    const mobileMenuId = 'primary-see-menu-mobile';\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    color=\"inherit\"\n                    href={Links.twitter}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                >\n                    <TwitterIcon />\n                </IconButton>\n            </MenuItem>\n            <MenuItem>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    color=\"inherit\"\n                    href={Links.github}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                >\n                    <GitHubIcon />\n                </IconButton>\n            </MenuItem>\n        </Menu>\n    );\n\n    return (\n        <div className={classes.grow}>\n            <AppBar position=\"static\" className={classes.navbar}>\n                <Toolbar>\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"open homepage\" href={Links.plasmHome}>\n                        <img className={classes.logoIcon} src={plasmLogo} alt=\"\" />\n                    </IconButton>\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                        Plasm Network\n                    </Typography>\n\n                    <div className={classes.grow} />\n                    <div className={classes.sectionDesktop}>\n                        <IconButton\n                            aria-label=\"show twitter\"\n                            color=\"inherit\"\n                            href={Links.twitter}\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                        >\n                            <TwitterIcon />\n                        </IconButton>\n                        <IconButton\n                            aria-label=\"show github\"\n                            color=\"inherit\"\n                            href={Links.github}\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                        >\n                            <GitHubIcon />\n                        </IconButton>\n                    </div>\n                    <div className={classes.sectionMobile}>\n                        <IconButton\n                            aria-label=\"show more\"\n                            aria-controls={mobileMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleMobileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <MoreIcon />\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            {renderMobileMenu}\n        </div>\n    );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport { Company, Products, Collaboration, Blogs, Community } from '../data/links';\nimport Divider from '@material-ui/core/Divider';\nimport { ThemeColors } from '../theme/themes';\n\nfunction Copyright() {\n    return (\n        <>\n            <Typography variant=\"body2\">\n                {'© 2019-' + new Date().getFullYear() + ' '}\n                <Link color=\"inherit\" href=\"https://stake.co.jp/\" rel=\"noopener noreferrer\" target=\"_blank\">\n                    Stake Technologies, Inc.\n                </Link>{' '}\n                {'All Rights Reserved.'}\n            </Typography>\n        </>\n    );\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop: theme.spacing(10),\n    },\n    socialIcon: {\n        color: 'white',\n        fontSize: 60,\n        paddingLeft: theme.spacing(1),\n    },\n    footer: {\n        padding: theme.spacing(2),\n        backgroundColor: 'white',\n        color: 'black',\n    },\n    footerHeader: {\n        color: ThemeColors.darkBlue,\n    },\n    siteMap: {},\n}));\n\nexport default function StickyFooter() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <footer className={classes.footer}>\n                <Container maxWidth=\"lg\">\n                    <Grid container spacing={4} justify=\"center\" className={classes.siteMap}>\n                        <Grid item>\n                            <Typography variant=\"body1\" component=\"h1\" align=\"center\" className={classes.footerHeader}>\n                                Company\n                            </Typography>\n                            <Divider />\n\n                            <List component=\"nav\">\n                                {Company.map(company => (\n                                    <Link\n                                        color=\"inherit\"\n                                        href={company.link}\n                                        key={company.description}\n                                        rel=\"noopener noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        <ListItem button>\n                                            <ListItemText primary={company.description} />\n                                        </ListItem>\n                                    </Link>\n                                ))}\n                            </List>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"body1\" component=\"h1\" align=\"center\" className={classes.footerHeader}>\n                                Repositories\n                            </Typography>\n                            <Divider />\n                            <List component=\"nav\">\n                                {Products.map(product => (\n                                    <Link\n                                        color=\"inherit\"\n                                        href={product.link}\n                                        key={product.description}\n                                        rel=\"noopener noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        <ListItem button>\n                                            <ListItemText primary={product.description} />\n                                        </ListItem>\n                                    </Link>\n                                ))}\n                            </List>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"body1\" component=\"h1\" align=\"center\" className={classes.footerHeader}>\n                                Collaboration\n                            </Typography>\n                            <Divider />\n                            <List component=\"nav\">\n                                {Collaboration.map(collaboration => (\n                                    <Link\n                                        color=\"inherit\"\n                                        href={collaboration.link}\n                                        key={collaboration.description}\n                                        rel=\"noopener noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        <ListItem button>\n                                            <ListItemText primary={collaboration.description} />\n                                        </ListItem>\n                                    </Link>\n                                ))}\n                            </List>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"body1\" component=\"h1\" align=\"center\" className={classes.footerHeader}>\n                                Blog\n                            </Typography>\n                            <Divider />\n                            <List component=\"nav\">\n                                {Blogs.map(blog => (\n                                    <Link\n                                        color=\"inherit\"\n                                        href={blog.link}\n                                        key={blog.description}\n                                        rel=\"noopener noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        <ListItem button>\n                                            <ListItemText primary={blog.description} />\n                                        </ListItem>\n                                    </Link>\n                                ))}\n                            </List>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"body1\" component=\"h1\" align=\"center\" className={classes.footerHeader}>\n                                Community\n                            </Typography>\n                            <Divider />\n                            <List component=\"nav\">\n                                {Community.map(community => (\n                                    <Link\n                                        color=\"inherit\"\n                                        href={community.link}\n                                        key={community.description}\n                                        rel=\"noopener noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        <ListItem button>\n                                            <ListItemText primary={community.description} />\n                                        </ListItem>\n                                    </Link>\n                                ))}\n                            </List>\n                        </Grid>\n                    </Grid>\n                </Container>\n\n                <Container maxWidth=\"sm\">\n                    <Typography variant=\"body1\" component=\"h1\" align=\"center\" className={classes.footerHeader}>\n                        <Copyright />\n                    </Typography>\n                </Container>\n            </footer>\n        </div>\n    );\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { getTotalLockVal } from '../helpers/lockdrop/EthereumLockdrop';\n//import * as ethAddress from 'ethereum-address';\nimport Web3 from 'web3';\nimport { Contract } from 'web3-eth-contract';\nimport SectionCard from '../components/SectionCard';\nimport { LockEvent, TimeFormat } from '../models/LockdropModels';\nimport { createStyles, Theme, makeStyles, useTheme } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { Divider, Grid, ListItemSecondaryAction, IconButton, LinearProgress } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SwipeableViews from 'react-swipeable-views';\nimport LockIcon from '@material-ui/icons/Lock';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { defaultAddress } from '../data/affiliationProgram';\nimport Web3Utils from 'web3-utils';\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    dir?: string;\n    index: any;\n    value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nfunction a11yProps(index: any) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        listRoot: {\n            width: '100%',\n            maxWidth: 'auto',\n            backgroundColor: theme.palette.background.paper,\n            position: 'relative',\n            overflow: 'auto',\n            maxHeight: 360,\n        },\n        listSection: {\n            backgroundColor: 'inherit',\n        },\n        ul: {\n            backgroundColor: 'inherit',\n            padding: 0,\n        },\n        lockListPage: {\n            textAlign: 'center',\n        },\n        tabMenu: {\n            backgroundColor: theme.palette.background.paper,\n            width: 'auto',\n        },\n    }),\n);\n\ninterface LockHistoryProps {\n    web3: Web3;\n    contractInstance: Contract;\n    accounts: string[]; // this will be used to get locks for a certain account\n    lockData: LockEvent[];\n}\n// component that displays the number of tokens and the duration for the lock via Web3\nconst LockedEthList: React.FC<LockHistoryProps> = ({ web3, contractInstance, accounts, lockData }) => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (_event: React.ChangeEvent<{}>, newValue: number) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = (index: number) => {\n        setValue(index);\n    };\n\n    return (\n        <>\n            <SectionCard maxWidth=\"lg\">\n                <div className={classes.tabMenu}>\n                    <AppBar position=\"static\" color=\"inherit\">\n                        <Tabs\n                            value={value}\n                            onChange={handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"fullWidth\"\n                            aria-label=\"full width tabs\"\n                        >\n                            <Tab label=\"Locked Tokens\" {...a11yProps(0)} />\n                            <Tab label=\"Unlock Tokens\" {...a11yProps(1)} />\n                        </Tabs>\n                    </AppBar>\n                    <SwipeableViews\n                        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                        index={value}\n                        onChangeIndex={handleChangeIndex}\n                    >\n                        <TabPanel value={value} index={0} dir={theme.direction}>\n                            <GlobalLocks\n                                web3={web3}\n                                contractInstance={contractInstance}\n                                accounts={accounts}\n                                lockData={lockData}\n                            />\n                        </TabPanel>\n                        <TabPanel value={value} index={1} dir={theme.direction}>\n                            <CurrentLocks\n                                web3={web3}\n                                contractInstance={contractInstance}\n                                accounts={accounts}\n                                lockData={lockData}\n                            />\n                        </TabPanel>\n                    </SwipeableViews>\n                </div>\n            </SectionCard>\n        </>\n    );\n};\n\nexport default LockedEthList;\n\nconst GlobalLocks: React.FC<LockHistoryProps> = ({ lockData }) => {\n    const classes = useStyles();\n    const [lockEvents, setEvents] = useState<LockEvent[]>([]);\n    const [isLoadingComp, setLoadState] = useState(true);\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setEvents(lockData);\n        }, 1000);\n        // cleanup hook\n        return () => {\n            clearInterval(interval);\n        };\n    }, [lockData]);\n\n    useEffect(() => {\n        setEvents(lockData);\n        setLoadState(false);\n    }, [lockData]);\n\n    return (\n        <div className={classes.lockListPage}>\n            {isLoadingComp ? (\n                <CircularProgress />\n            ) : (\n                <>\n                    {lockEvents.length > 0 ? (\n                        <>\n                            <h1>Global Locks</h1>\n                            <h3>{getTotalLockVal(lockEvents)} ETH locked</h3>\n                            <List className={classes.listRoot} subheader={<li />}>\n                                <li className={classes.listSection}>\n                                    <ul className={classes.ul}>\n                                        <ListSubheader>There are {lockEvents.length} locks</ListSubheader>\n                                        <Divider />\n                                        {lockEvents.map(eventItem => (\n                                            <>\n                                                <ListItem key={eventItem.lock}>\n                                                    <ListItemText>\n                                                        <h4>Lock address: {eventItem.lock}</h4>\n                                                        <h5>Locked in block no. {eventItem.blockNo}</h5>\n                                                        <p>\n                                                            Locked {Web3Utils.fromWei(eventItem.eth, 'ether')} ETH for{' '}\n                                                            {eventItem.duration} days\n                                                        </p>\n                                                        {eventItem.introducer !== defaultAddress ? (\n                                                            <p>Introducer: {eventItem.introducer}</p>\n                                                        ) : (\n                                                            <p>No introducer</p>\n                                                        )}\n                                                    </ListItemText>\n                                                </ListItem>\n                                                <Divider />\n                                            </>\n                                        ))}\n                                    </ul>\n                                </li>\n                            </List>\n                        </>\n                    ) : (\n                        <>\n                            <h1>No Locks</h1>\n                            <h4>Please lock some ETH!</h4>\n                        </>\n                    )}\n                </>\n            )}\n        </div>\n    );\n};\n\nconst CurrentLocks: React.FC<LockHistoryProps> = ({ web3, accounts, lockData }) => {\n    const classes = useStyles();\n    const [lockEvents, setEvents] = useState<LockEvent[]>([]);\n    const [isLoadingComp, setLoadState] = useState(true);\n\n    const getUserLocks = () => {\n        return lockData.filter(i => i.lockOwner === accounts[0]);\n    };\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setEvents(getUserLocks);\n            setLoadState(false);\n        }, 1000);\n        // cleanup hook\n        return () => {\n            clearInterval(interval);\n        };\n    });\n\n    return (\n        <div className={classes.lockListPage}>\n            {isLoadingComp ? (\n                <CircularProgress />\n            ) : (\n                <>\n                    {lockEvents.length > 0 ? (\n                        <>\n                            <h1>Your Locks</h1>\n                            <h3>{getTotalLockVal(lockEvents)} ETH locked</h3>\n                            <List className={classes.listRoot} subheader={<li />}>\n                                <li className={classes.listSection}>\n                                    <ul className={classes.ul}>\n                                        <ListSubheader>You have {lockEvents.length} locks</ListSubheader>\n                                        <Divider />\n                                        {lockEvents.map(eventItem => (\n                                            <>\n                                                <UnlockInfo lockInfo={eventItem} web3={web3} address={accounts[0]} />\n                                                <Divider />\n                                            </>\n                                        ))}\n                                    </ul>\n                                </li>\n                            </List>\n                        </>\n                    ) : (\n                        <>\n                            <h1>No Locks</h1>\n                            <h4>Please lock some ETH!</h4>\n                        </>\n                    )}\n                </>\n            )}\n        </div>\n    );\n};\n\ninterface UnlockInfoProps {\n    lockInfo: LockEvent;\n    web3: Web3;\n    address: string;\n}\n\nconst UnlockInfo: React.FC<UnlockInfoProps> = ({ lockInfo, web3, address }) => {\n    // 24 hours in epoch date\n    const epochDayMil = 86400000;\n\n    const getUnlockDate = useCallback(() => {\n        // Ethereum timestamp is in seconds while JS Date is ms\n        const lockedDay = Number(lockInfo.timestamp) * 1000;\n\n        const unlockDate = lockedDay + lockInfo.duration * epochDayMil;\n\n        return unlockDate;\n    }, [lockInfo]);\n\n    const calculateTimeLeft = useCallback(() => {\n        // milliseconds left till unlock\n        const tillEnd = getUnlockDate() - +Date.now();\n        return {\n            days: Math.floor(tillEnd / (1000 * 60 * 60 * 24)),\n            hours: Math.floor((tillEnd / (1000 * 60 * 60)) % 24),\n            minutes: Math.floor((tillEnd / 1000 / 60) % 60),\n            seconds: Math.floor((tillEnd / 1000) % 60),\n        };\n    }, [getUnlockDate]);\n\n    const [canUnlock, setLockState] = useState(false);\n    const [tillUnlock, setUnlockDate] = useState<TimeFormat>(calculateTimeLeft());\n    const [lockIsClaimed, setLockClaim] = useState(false);\n    const [isLoading, setLoading] = useState(false);\n\n    const checkUnlock = useCallback(async () => {\n        // get today in UTC epoch seconds (js default is ms)\n        const today = Date.now();\n\n        // Ethereum timestamp is in seconds while JS Date is ms\n        const lockedDay = Number(lockInfo.timestamp) * 1000;\n\n        const unlockDate = lockedDay + lockInfo.duration * epochDayMil;\n\n        // get contract balance\n        const lockBalance = await web3.eth.getBalance(lockInfo.lock);\n        // check if the balance is 0 or not\n        const lockClaimState = lockBalance === '0';\n        // console.log(lockBalance);\n        setLockClaim(lockClaimState);\n        // manually change the loading state\n        setLoading(false);\n        return today > unlockDate;\n    }, [lockInfo, web3]);\n\n    // update time value every second\n    useEffect(() => {\n        //const abortController = new AbortController();\n\n        const interval = setInterval(async () => {\n            setUnlockDate(calculateTimeLeft());\n            setLockState(await checkUnlock());\n        }, 1000);\n        // cleanup async hook\n        return () => {\n            clearInterval(interval);\n        };\n    }, [calculateTimeLeft, checkUnlock]);\n\n    // initial update\n    useEffect(() => {\n        setUnlockDate(calculateTimeLeft());\n        checkUnlock().then(setLockState);\n    }, [calculateTimeLeft, checkUnlock]);\n\n    const handleClick = () => {\n        setLoading(true);\n        web3.eth\n            .sendTransaction({\n                from: address,\n                to: lockInfo.lock,\n                value: '0',\n            })\n            .then(\n                () => {\n                    setLoading(false);\n                },\n                error => {\n                    console.log(error);\n                    setLoading(false);\n                },\n            );\n    };\n\n    return (\n        <>\n            <ListItem key={lockInfo.lock}>\n                <ListItemText>\n                    <h4>Lock address: {lockInfo.lock}</h4>\n                    <h5>Locked in block no. {lockInfo.blockNo}</h5>\n                    <p>\n                        Locked {Web3Utils.fromWei(lockInfo.eth, 'ether')} ETH for {lockInfo.duration} days\n                    </p>\n                    {lockInfo.introducer !== defaultAddress ? (\n                        <p>Introducer: {lockInfo.introducer}</p>\n                    ) : (\n                        <p>No introducer</p>\n                    )}\n                    {isLoading ? (\n                        <>\n                            <LinearProgress />\n                        </>\n                    ) : (\n                        <>\n                            {!canUnlock ? (\n                                <Grid container spacing={1}>\n                                    <Grid item>\n                                        <p>{tillUnlock.days} Days </p>\n                                    </Grid>\n                                    <Grid item>\n                                        <p>{tillUnlock.hours} Hours </p>\n                                    </Grid>\n                                    <Grid item>\n                                        <p>{tillUnlock.minutes} Minutes </p>\n                                    </Grid>\n                                    <Grid item>\n                                        <p>{tillUnlock.seconds} Seconds </p>\n                                    </Grid>\n                                    <Grid item>\n                                        <p>Left</p>\n                                    </Grid>\n                                </Grid>\n                            ) : lockIsClaimed ? (\n                                <p>Lock already claimed!</p>\n                            ) : (\n                                <p>You can claim your lock!</p>\n                            )}\n                        </>\n                    )}\n                </ListItemText>\n\n                <ListItemSecondaryAction>\n                    {lockIsClaimed ? (\n                        <LockOpenIcon color=\"disabled\" />\n                    ) : canUnlock ? (\n                        <IconButton edge=\"end\" aria-label=\"unlock\" onClick={() => handleClick()} color=\"primary\">\n                            <LockOpenIcon />\n                        </IconButton>\n                    ) : (\n                        <LockIcon color=\"inherit\" />\n                    )}\n                </ListItemSecondaryAction>\n            </ListItem>\n        </>\n    );\n};\n","/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { TimeFormat, LockEvent } from '../models/LockdropModels';\nimport moment, { Moment, duration } from 'moment';\nimport { getTotalLockVal } from '../helpers/lockdrop/EthereumLockdrop';\n\ninterface Props {\n    startTime: Moment;\n    endTime: Moment;\n    lockData: LockEvent[];\n}\n\nenum LockState {\n    notStart,\n    start,\n    end,\n}\n\nconst LockdropCountdownPanel: React.FC<Props> = ({ startTime, endTime, lockData }) => {\n    const now = moment().utc();\n\n    const calculateTimeLeft = (): TimeFormat => {\n        const tillStart = moment(startTime).valueOf() - now.valueOf();\n\n        //let difference = tillStart;\n        let difference = duration(startTime.diff(now));\n\n        // if the lockdrop has already started\n        if (tillStart < 0) {\n            difference = duration(endTime.diff(now));\n        }\n\n        let timeLeft: TimeFormat = {\n            days: 0,\n            hours: 0,\n            minutes: 0,\n            seconds: 0,\n        };\n\n        const tillEnd = moment(endTime).valueOf() - now.valueOf();\n        // check if the duration has ended\n        if (tillEnd > 0) {\n            timeLeft = {\n                days: difference.days(),\n                hours: difference.hours(),\n                minutes: difference.minutes(),\n                seconds: difference.seconds(),\n            };\n        }\n        return timeLeft;\n    };\n\n    const getLockState = (): LockState => {\n        const tillStart = moment(startTime).valueOf() - now.valueOf();\n        if (tillStart > 0) {\n            return LockState.notStart;\n        } else if (tillStart <= 0 && !(moment(endTime).valueOf() - now.valueOf() < 0)) {\n            return LockState.start;\n        } else {\n            return LockState.end;\n        }\n    };\n\n    const [timeLeft, setTimeLeft] = useState<TimeFormat>(calculateTimeLeft());\n    const [lockState, setLockState] = useState(getLockState());\n    const [totalLockVal, setTotalLockVal] = useState('0');\n\n    const getLockValue = async (): Promise<void> => {\n        try {\n            const totalLockVal = getTotalLockVal(lockData);\n            setTotalLockVal(totalLockVal);\n        } catch (err) {\n            console.error(err);\n        }\n    };\n    // update time value every second\n    // useEffect(() => {\n    //     setTimeout(() => {\n    //         setTimeLeft(calculateTimeLeft());\n    //         setLockState(getLockState());\n    //     }, 1000);\n\n    //     setTimeout(async () => {\n    //         await getLockValue();\n    //     }, 1000);\n    // });\n\n    useEffect(() => {\n        const interval = setInterval(async () => {\n            setTimeLeft(calculateTimeLeft());\n            setLockState(getLockState());\n            await getLockValue();\n        }, 1000);\n        // cleanup hook\n        return () => {\n            clearInterval(interval);\n        };\n    });\n\n    if (lockState !== LockState.end) {\n        return (\n            <>\n                <PanelWrapper>\n                    <div className=\"time\">\n                        <Grid container spacing={2} justify=\"center\">\n                            <Grid item>\n                                {lockState === LockState.notStart ? (\n                                    <Typography variant=\"h4\" component=\"h2\">\n                                        Main Network Lockdrop Starting in:\n                                    </Typography>\n                                ) : (\n                                    <Typography variant=\"h4\" component=\"h2\">\n                                        Lockdrop Ending in:\n                                    </Typography>\n                                )}\n                            </Grid>\n                            <Grid item>\n                                <h3>{timeLeft.days}</h3>\n                                <p>Days</p>\n                            </Grid>\n                            <Grid item>\n                                <h3>{timeLeft.hours}</h3>\n                                <p>Hours</p>\n                            </Grid>\n                            <Grid item>\n                                <h3>{timeLeft.minutes}</h3>\n                                <p>Minutes</p>\n                            </Grid>\n                            <Grid item>\n                                <h3>{timeLeft.seconds}</h3>\n                                <p>Seconds</p>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </PanelWrapper>\n            </>\n        );\n    } else {\n        return (\n            <>\n                <PanelWrapper>\n                    <Typography variant=\"h2\" component=\"h1\" align=\"center\">\n                        Main Network Lockdrop has ended\n                    </Typography>\n                    <Typography variant=\"h3\" component=\"h3\" align=\"center\">\n                        Total Locked Value: {totalLockVal} ETH\n                    </Typography>\n                </PanelWrapper>\n            </>\n        );\n    }\n};\n\nexport default LockdropCountdownPanel;\n\nconst PanelWrapper: React.FC = ({ children }) => {\n    const useStyles = makeStyles(theme => ({\n        container: {\n            padding: theme.spacing(5, 2, 0),\n            margin: theme.spacing(1),\n        },\n    }));\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Container maxWidth=\"lg\" className={classes.container}>\n                {children}\n            </Container>\n        </>\n    );\n};\n","/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles, createStyles, Theme, CircularProgress, Divider } from '@material-ui/core';\nimport { calculateTotalPlm, ethFinalExRate, getPubKey, generatePlmAddress } from '../helpers/lockdrop/EthereumLockdrop';\nimport { PlmDrop } from '../models/PlasmDrop';\nimport BigNumber from 'bignumber.js';\nimport CountUp from 'react-countup';\nimport { ThemeColors } from '../theme/themes';\nimport { IonPopover, IonList, IonListHeader, IonItem, IonLabel, IonChip, IonButton, IonLoading } from '@ionic/react';\nimport { LockEvent } from '../models/LockdropModels';\nimport Web3 from 'web3';\nimport SectionCard from './SectionCard';\n\nconst etherScanSearch = 'https://etherscan.io/address/';\n\ninterface ResultProps {\n    lockData: LockEvent[];\n    web3: Web3;\n}\n\nconst LockdropResult: React.FC<ResultProps> = ({ lockData, web3 }) => {\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            pageContent: {\n                textAlign: 'center',\n                padding: theme.spacing(4, 2, 0),\n            },\n            header: {\n                color: ThemeColors.blue,\n            },\n            claimButton: {\n                padding: theme.spacing(4, 2, 0),\n            },\n        }),\n    );\n\n    const classes = useStyles();\n    const [totalPlm, setTotalPlm] = useState<PlmDrop>(new PlmDrop('', new BigNumber(0), [], [], []));\n    const [exRate, setExRate] = useState(0);\n    const [isLoading, setLoadState] = useState(true);\n    const [showIntoRefPopover, setShowIntroRefPopover] = useState(false);\n    const [showIntoPopover, setShowIntroPopover] = useState(false);\n\n    useEffect(() => {\n        const interval = setInterval(async () => {\n            setExRate(ethFinalExRate);\n            const accounts = await web3.eth.getAccounts();\n            const totalIssue = calculateTotalPlm(accounts[0], lockData);\n            setTotalPlm(totalIssue);\n\n            setLoadState(false);\n        }, 1000);\n        // cleanup hook\n        return () => {\n            clearInterval(interval);\n        };\n    });\n\n    const countupTotalPlmVal: JSX.Element = (\n        <CountUp\n            start={0}\n            end={new BigNumber(totalPlm.getTotalPlm()).toNumber()}\n            decimals={2}\n            duration={1}\n            separator=\",\"\n        />\n    );\n\n    return (\n        <div className={classes.pageContent}>\n            <h1>Lockdrop Result</h1>\n            {isLoading ? (\n                <>\n                    <CircularProgress />\n                </>\n            ) : totalPlm.locks.length > 0 ? (\n                <>\n                    <h2 className={classes.header}>{countupTotalPlmVal} PLM in total</h2>\n                    <p>You have locked {totalPlm.locks.length} time(s)</p>\n                    <p>ETH exchange rate at the end of the lockdrop: {exRate} USD</p>\n                    <p>You have received around {totalPlm.basePlm.toFormat(2)} PLM from locking</p>\n                    <Divider />\n                    <h2>Affiliation Program</h2>\n                    <IonChip color=\"primary\" onClick={() => setShowIntroRefPopover(true)}>\n                        <IonLabel>{totalPlm.affiliationRefsBonuses.length} locks</IonLabel>\n                    </IonChip>\n                    <IonLabel>referenced your address as a introducer: {totalPlm.getAffBonus()} PLM</IonLabel>\n\n                    <IonPopover isOpen={showIntoRefPopover} onDidDismiss={() => setShowIntroRefPopover(false)}>\n                        <IntoRefItems data={totalPlm} />\n                    </IonPopover>\n                    <br />\n                    <IonLabel>You have referenced </IonLabel>\n                    <IonChip color=\"primary\" onClick={() => setShowIntroPopover(true)}>\n                        <IonLabel>{totalPlm.introducerAndBonuses.length} introducers</IonLabel>\n                    </IonChip>\n                    <IonLabel>: {totalPlm.getIntroBonus()} PLM</IonLabel>\n\n                    <IonPopover isOpen={showIntoPopover} onDidDismiss={() => setShowIntroPopover(false)}>\n                        <IntoAffItems data={totalPlm} />\n                    </IonPopover>\n                    <br />\n                    <ClaimPlm web3={web3} />\n                </>\n            ) : (\n                <h2 className={classes.header}>No Locks found for your address!</h2>\n            )}\n        </div>\n    );\n};\n\nexport default LockdropResult;\n\ninterface IntroRefProps {\n    data: PlmDrop;\n}\nconst IntoRefItems: React.FC<IntroRefProps> = ({ data }) => {\n    return (\n        <>\n            <IonList>\n                {data.affiliationRefsBonuses.length > 0 ? (\n                    <>\n                        <IonListHeader>References</IonListHeader>\n                        {data.affiliationRefsBonuses.map((i: [string, BigNumber]) => (\n                            <IonItem key={i[0]} href={etherScanSearch + i[0]} rel=\"noopener noreferrer\" target=\"_blank\">\n                                {i[0]}\n                            </IonItem>\n                        ))}\n                    </>\n                ) : (\n                    <IonListHeader>No References</IonListHeader>\n                )}\n            </IonList>\n        </>\n    );\n};\n\nconst IntoAffItems: React.FC<IntroRefProps> = ({ data }) => {\n    return (\n        <>\n            <IonList>\n                {data.introducerAndBonuses.length > 0 ? (\n                    <>\n                        <IonListHeader>Introducers</IonListHeader>\n                        {data.introducerAndBonuses.map((i: [string, BigNumber]) => (\n                            <IonItem key={i[0]} href={etherScanSearch + i[0]} rel=\"noopener noreferrer\" target=\"_blank\">\n                                {i[0]}\n                            </IonItem>\n                        ))}\n                    </>\n                ) : (\n                    <IonListHeader>No Introducers</IonListHeader>\n                )}\n            </IonList>\n        </>\n    );\n};\n\ninterface ClaimProps {\n    web3: Web3;\n}\nconst ClaimPlm: React.FC<ClaimProps> = ({ web3 }) => {\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            header: {\n                color: ThemeColors.blue,\n            },\n            claimButton: {\n                margin: theme.spacing(4, 2, 0),\n            },\n            addressPanel: {\n                padding: theme.spacing(3, 3, 0),\n            },\n        }),\n    );\n\n    const [isLoading, setLoadState] = useState(false);\n    const [plmAddress, setPlmAddress] = useState('');\n\n    const getPlasmAddress = async () => {\n        const pubKey = await getPubKey(web3);\n        let result = '';\n        if (typeof pubKey === 'string') {\n            // remove the 0x prefix before passing the value\n            const plmAddress = generatePlmAddress(pubKey.replace('0x', ''));\n            result = plmAddress;\n        }\n        setLoadState(false);\n        return result;\n    };\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <IonLoading isOpen={isLoading} message={'Verifying user...'} />\n            <IonButton\n                color=\"primary\"\n                size=\"large\"\n                className={classes.claimButton}\n                onClick={async () => {\n                    setLoadState(true);\n                    setPlmAddress(await getPlasmAddress());\n                }}\n            >\n                Check Lockdrop Plasm Address\n            </IonButton>\n            {plmAddress ? (\n                <>\n                    <SectionCard maxWidth=\"md\">\n                        <div className={classes.addressPanel}>\n                            <p>Your Plasm Network address with the lockdrop rewards:</p>\n                            <h2 className={classes.header}>{plmAddress}</h2>\n                        </div>\n                    </SectionCard>\n                </>\n            ) : (\n                <></>\n            )}\n        </>\n    );\n};\n","/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport { validEthAddressList, defaultAddress } from '../data/affiliationProgram';\nimport { LockEvent } from '../models/LockdropModels';\nimport { PlmDrop } from '../models/PlasmDrop';\nimport { calculateTotalPlm } from '../helpers/lockdrop/EthereumLockdrop';\nimport {\n    List,\n    ListItemText,\n    ListSubheader,\n    Divider,\n    ListItem,\n    makeStyles,\n    createStyles,\n    Theme,\n    Typography,\n} from '@material-ui/core';\nimport SectionCard from './SectionCard';\n\ninterface Props {\n    lockData: LockEvent[];\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        listRoot: {\n            width: '100%',\n            maxWidth: 'auto',\n            backgroundColor: theme.palette.background.paper,\n            position: 'relative',\n            overflow: 'auto',\n            maxHeight: 360,\n        },\n        listSection: {\n            backgroundColor: 'inherit',\n        },\n        ul: {\n            backgroundColor: 'inherit',\n            padding: 0,\n        },\n        title: {\n            textAlign: 'center',\n            padding: theme.spacing(4, 2, 0),\n        },\n    }),\n);\n\nconst AffiliatorList: React.FC<Props> = ({ lockData }) => {\n    const classes = useStyles();\n    const [lockdropResult, setLockdropResult] = useState<PlmDrop[]>([]);\n\n    function getAffliationResults(lockData: LockEvent[]) {\n        // filter out the 0x00 address from the list\n        const validAddresses = validEthAddressList.filter(address => address !== defaultAddress);\n\n        // get the lockdrop result infromation\n        const lockResults = validAddresses.map(i => {\n            return calculateTotalPlm(i, lockData);\n        });\n\n        // sort the array by the number of referencers\n        return lockResults.sort((a, b) =>\n            a.affiliationRefsBonuses.length > b.affiliationRefsBonuses.length\n                ? -1\n                : a.affiliationRefsBonuses.length < b.affiliationRefsBonuses.length\n                ? 1\n                : 0,\n        );\n    }\n\n    useEffect(() => {\n        setLockdropResult(getAffliationResults(lockData));\n    }, [lockData]);\n\n    return (\n        <>\n            <SectionCard maxWidth=\"lg\">\n                <Typography className={classes.title} variant=\"h3\">\n                    Affiliation Leaderboard\n                </Typography>\n                <List component=\"nav\" className={classes.listRoot} subheader={<li />}>\n                    <li className={classes.listSection}>\n                        <ul className={classes.ul}>\n                            <ListSubheader>There are {validEthAddressList.length - 1} affiliators</ListSubheader>\n                            <Divider />\n                            {lockdropResult.map(i => (\n                                <IntroducerBonusesItems key={i.reciver} lockResult={i} />\n                            ))}\n                        </ul>\n                    </li>\n                </List>\n            </SectionCard>\n        </>\n    );\n};\n\ninterface IntroducerPlanelProps {\n    lockResult: PlmDrop;\n}\n\nconst IntroducerBonusesItems: React.FC<IntroducerPlanelProps> = ({ lockResult }) => {\n    return (\n        <>\n            <ListItem>\n                <ListItemText>\n                    <h2>{lockResult.reciver}</h2>\n                    <p>{lockResult.affiliationRefsBonuses.length} lock(s) referenced this address</p>\n                    <p>{lockResult.getAffBonus()} PLMs gained from this</p>\n                </ListItemText>\n            </ListItem>\n            <Divider />\n        </>\n    );\n};\n\nexport default AffiliatorList;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable react/prop-types */\nimport { IonContent, IonPage, IonLoading } from '@ionic/react';\nimport React from 'react';\nimport LockdropForm from '../components/LockdropForm';\nimport { connectWeb3, defaultAffiliation, getAllLockEvents } from '../helpers/lockdrop/EthereumLockdrop';\nimport Web3 from 'web3';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport { Contract } from 'web3-eth-contract';\nimport { LockInput, LockEvent } from '../models/LockdropModels';\nimport LockedEthList from '../components/LockedEthList';\nimport { toast } from 'react-toastify';\nimport { isRegisteredEthAddress } from '../data/affiliationProgram';\nimport 'react-toastify/dist/ReactToastify.css';\nimport SectionCard from '../components/SectionCard';\nimport LockdropCountdownPanel from '../components/LockdropCountdownPanel';\nimport { LockdropEnd, LockdropStart } from '../data/lockInfo';\nimport BN from 'bn.js';\nimport moment from 'moment';\nimport LockdropResult from '../components/LockdropResult';\nimport { Divider } from '@material-ui/core';\nimport AffiliatorList from '../components/AffiliatorList';\n\nconst formInfo = `This is the lockdrop form for Ethereum.\nThis uses Web3 injection so you must have Metamask (or other Web3-enabled wallet) installed in order for this to work properly.\nIf you find any errors or find issues with this form, please contact the Plasm team.\nRegarding the audit by Quantstamp, click <a\n                            color=\"inherit\"\n                            href=\"https://github.com/staketechnologies/lockdrop-ui/blob/16a2d495d85f2d311957b9cf366204fbfabadeaa/audit/quantstamp-audit.pdf\"\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                        >\n                            here\n                        </a> to see the details`;\n\ninterface PageStates {\n    web3: Web3;\n    accounts: string[];\n    contract: Contract;\n    isLoading: boolean;\n    networkType: string;\n    isProcessing: boolean;\n    allLockEvents: LockEvent[];\n    error: null;\n    fetchingLockData: boolean;\n}\n\n// need an empty interface to use states (React's generic positioning)\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface PageProps {}\n\ntoast.configure({\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n});\n\nconst hasLockdropStarted = () => {\n    const now = moment()\n        .utc()\n        .valueOf();\n    const start = LockdropStart.valueOf();\n    //const end = LockdropEnd.valueOf();\n    return start <= now;\n};\n\nconst hasLockdropEnded = () => {\n    const now = moment()\n        .utc()\n        .valueOf();\n    const end = LockdropEnd.valueOf();\n    //const end = LockdropEnd.valueOf();\n    return end <= now;\n};\n\nclass EthLockdropPage extends React.Component<PageProps, PageStates> {\n    constructor(props: PageProps) {\n        super(props);\n        // initialize with null values\n        this.state = {\n            web3: {} as Web3,\n            accounts: [''],\n            contract: {} as Contract,\n            isLoading: true,\n            networkType: '',\n            isProcessing: false,\n            allLockEvents: [],\n            error: null,\n            fetchingLockData: true,\n        };\n    }\n\n    timerInterval: any;\n\n    // get and set the web3 state when the component is mounted\n    componentDidMount = async () => {\n        const web3State = await connectWeb3();\n        this.setState(web3State);\n\n        // checks if account has changed in MetaMask\n        if ((window as any).ethereum.on) {\n            (window as any).ethereum.on('accountsChanged', this.handleAccountChange);\n        }\n\n        this.state.web3.eth.net.getNetworkType().then(i => this.setState({ networkType: i }));\n\n        this.timerInterval = setInterval(() => {\n            this.getLockData().then(() => {\n                this.setState({ isLoading: false });\n            });\n        }, 1000);\n    };\n\n    componentWillUnmount = () => {\n        clearInterval(this.timerInterval);\n    };\n\n    // called when the user changes MetaMask account\n    handleAccountChange = () => {\n        // refresh the page\n        window.location.reload(false);\n    };\n\n    getLockData = async () => {\n        try {\n            // get all the lock events from the chain\n            const allLocks = await getAllLockEvents(this.state.web3, this.state.contract);\n\n            this.setState({ allLockEvents: allLocks });\n        } catch (error) {\n            this.setState({ error });\n        }\n    };\n\n    handleSubmit = async (formInputVal: LockInput) => {\n        // checks user input\n        if (formInputVal.amount > new BN(0) && formInputVal.duration) {\n            this.setState({ isProcessing: true });\n            //console.log(formInputVal);\n            // return a default address if user input is empty\n            const introducer = defaultAffiliation(formInputVal.affiliation).toLowerCase();\n            const { accounts, contract } = this.state;\n            try {\n                // check user input\n                if (introducer === accounts[0]) {\n                    toast.error('You cannot affiliate yourself');\n                } else if (introducer && !Web3.utils.isAddress(introducer)) {\n                    toast.error('Please input a valid Ethereum address');\n                } else if (!isRegisteredEthAddress(introducer)) {\n                    toast.error('The given introducer is not registered in the affiliation program!');\n                } else {\n                    // convert user input to Wei\n                    const amountToSend = Web3.utils.toWei(formInputVal.amount, 'ether');\n\n                    // communicate with the smart contract\n                    await contract.methods.lock(formInputVal.duration, introducer).send({\n                        from: accounts[0],\n                        value: amountToSend,\n                    });\n\n                    toast.success(`Successfully locked ${formInputVal.amount} ETH for ${formInputVal.duration} days!`);\n                }\n            } catch (error) {\n                toast.error('error!\\n' + error.message);\n            }\n        } else {\n            toast.error('You are missing an input!');\n        }\n        this.setState({ isProcessing: false });\n    };\n\n    render() {\n        return (\n            <IonPage>\n                <IonContent>\n                    <Navbar />\n                    {hasLockdropStarted() ? (\n                        this.state.isLoading ? (\n                            <IonLoading isOpen={true} message={'Connecting to Wallet and fetching chain data...'} />\n                        ) : (\n                            <>\n                                {this.state.isProcessing ? (\n                                    <IonLoading\n                                        isOpen={this.state.isProcessing}\n                                        message={'Processing Transaction...'}\n                                    />\n                                ) : (\n                                    <></>\n                                )}\n\n                                <SectionCard maxWidth=\"lg\">\n                                    <LockdropCountdownPanel\n                                        endTime={LockdropEnd}\n                                        startTime={LockdropStart}\n                                        lockData={this.state.allLockEvents}\n                                    />\n                                    {hasLockdropEnded() ? (\n                                        <>\n                                            <Divider />\n                                            <LockdropResult\n                                                lockData={this.state.allLockEvents}\n                                                web3={this.state.web3}\n                                            />\n                                        </>\n                                    ) : (\n                                        <></>\n                                    )}\n                                </SectionCard>\n                                <AffiliatorList lockData={this.state.allLockEvents} />\n                                {hasLockdropEnded() ? (\n                                    <></>\n                                ) : (\n                                    <LockdropForm token=\"ETH\" onSubmit={this.handleSubmit} description={formInfo} />\n                                )}\n\n                                <LockedEthList\n                                    web3={this.state.web3}\n                                    contractInstance={this.state.contract}\n                                    accounts={this.state.accounts}\n                                    lockData={this.state.allLockEvents}\n                                />\n                            </>\n                        )\n                    ) : (\n                        <>\n                            <SectionCard maxWidth=\"lg\">\n                                <LockdropCountdownPanel\n                                    endTime={LockdropEnd}\n                                    startTime={LockdropStart}\n                                    lockData={this.state.allLockEvents}\n                                />\n                            </SectionCard>\n                        </>\n                    )}\n                    <Footer />\n                </IonContent>\n            </IonPage>\n        );\n    }\n}\nexport default EthLockdropPage;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { IonApp, IonRouterOutlet } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\n//import LandingPage from './pages/LandingPage';\nimport EthLockdropPage from './pages/EthLockdropPage';\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\nconst App: React.FC = () => (\n    <IonApp>\n        <IonReactRouter>\n            <IonRouterOutlet>\n                {/* <Route path=\"/welcome\" component={LandingPage} exact={true} /> */}\n                <Route path=\"/\" component={EthLockdropPage} exact={true} />\n                {/* <Route path=\"/\" render={() => <Redirect to={'/eth-lockdrop'} />} exact={true} /> */}\n            </IonRouterOutlet>\n        </IonReactRouter>\n    </IonApp>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n/* eslint-disable-line  no-use-before-define */\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport Web3 from 'web3';\nimport { Contract } from 'web3-eth-contract';\n\n// define web3 instance as a global variable\ndeclare global {\n    interface Window {\n        web3: Web3;\n        contract: Contract;\n    }\n}\nwindow.contract = window.contract || {};\nwindow.web3 = window.web3 || {};\n\nconst theme = createMuiTheme({\n    typography: {\n        fontFamily: [\n            'Work Sans',\n            '-apple-system',\n            'BlinkMacSystemFont',\n            'Segoe UI',\n            'Roboto',\n            'Oxygen',\n            'Ubuntu',\n            'Cantarell',\n            'Fira Sans',\n            'Droid Sans',\n            'Helvetica Neue',\n        ].join(','),\n    },\n});\n\nReactDOM.render(\n    <MuiThemeProvider theme={theme}>\n        <App />\n    </MuiThemeProvider>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}