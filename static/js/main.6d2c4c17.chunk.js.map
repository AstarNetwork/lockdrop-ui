{"version":3,"sources":["resources/ethereum_logo.svg","components/Navbar.tsx","data/links.ts","theme/themes.ts","components/Footer.tsx","components/SectionCard.tsx","data/lockInfo.ts","pages/LandingPage.tsx","components/DropdownOption.tsx","components/EthLock/LockdropForm.tsx","helpers/getWeb3.ts","models/LockdropModels.ts","data/affiliationProgram.ts","models/PlasmDrop.ts","helpers/lockdrop/EthereumLockdrop.ts","helpers/plasmUtils.ts","components/EthLock/LockedEthList.tsx","components/LockdropCountdownPanel.tsx","components/EthLock/LockdropResult.tsx","components/AffiliationList.tsx","pages/EthLockdropPage.tsx","pages/DustyEthLockPage.tsx","pages/DustyBtcLockPage.tsx","components/SideMenu.tsx","App.tsx","serviceWorker.ts","index.tsx","resources/bitcoin_logo.svg","resources/quantstamp-logo.png","resources/plasm-logo.png","resources/ld_logo_a.png","resources/ld_logo_b.png","resources/trezor_logo.svg","resources/ledger_logo.svg","helpers/lockdrop/BitcoinLockdrop.ts","resources/home-outline.svg","resources/logo-twitter.svg","resources/logo-discord.svg","resources/logo-telegram.svg","resources/logo-github.svg","../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm/legacy lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object"],"names":["module","exports","useStyles","makeStyles","theme","createStyles","grow","flexGrow","navbar","backgroundColor","logoIcon","margin","spacing","maxHeight","height","verticalAlign","title","color","inputRoot","sectionDesktop","display","breakpoints","up","sectionMobile","listItem","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","Navbar","classes","className","slot","src","plasmLogo","alt","Links","Community","description","link","icon","Company","Products","Collaboration","Blogs","ThemeColors","Copyright","Typography","variant","Date","getFullYear","Link","href","rel","target","root","marginTop","socialIcon","paddingLeft","footer","padding","footerHeader","siteMap","StickyFooter","Container","maxWidth","Grid","container","justify","item","component","align","Divider","List","map","company","key","ListItem","button","ListItemText","primary","product","collaboration","blog","community","SectionCard","children","paper","Paper","elevation","firstLockdropStart","moment","utc","firstLockdropEnd","secondLockdropStart","secondLockdropEnd","durations","label","value","rates","firstLock","uri","ethLogo","startDate","endDate","secondLock","btcLogo","dustyLock","disabled","lockdropLogo","Math","floor","random","lockdropLogoA","lockdropLogoB","logoImg","marginLeft","marginRight","LandingPage","fill","routerLink","format","toString","DropdownOption","props","items","dataSets","x","indexOf","interface","onIonChange","e","onChoose","LockdropForm","token","onSubmit","dusty","useState","BN","lockAmount","setAmount","lockDuration","setDuration","affAccount","setAff","formRoot","txButton","formLabel","quantLogo","textBox","getTokenRate","filter","quantstampLogo","parse","position","placeholder","onIonInput","expand","onClick","inputs","duration","amount","affiliation","rate","handleSubmit","web3Listener","a","window","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","BtcWalletType","LockSeason","removeWeb3Event","Promise","resolve","reject","removeEventListener","error","getWeb3","document","readyState","location","reload","addEventListener","defaultAddress","validEthAddressList","isRegisteredEthAddress","introducer","includes","toLowerCase","PlmDrop","reciver","basePlm","introducerAndBonuses","affiliationRefsBonuses","locks","this","totalIntroBonuses","BigNumber","i","length","plus","affBonus","calculateAffBonus","toFixed","getTotal","toFormat","calculateIntroBonus","reduce","sum","bonus","totalAmountOfPLMsForLockdrop","times","div","generatePlmAddress","ethPubKey","compressedPubKey","EthCrypto","publicKey","compress","plasmPubKey","polkadotUtil","hexString","result","push","parseInt","substr","Uint8Array","toByteArray","getPubKey","msg","hash","eth","accounts","hashMessage","getAccounts","addresses","personal","sign","slice","sig","res","fromRpcSig","bufferToHex","ecrecover","toBuffer","v","r","s","getAllLockEvents","instance","getPastEvents","fromBlock","ev","all","returnValues","getTransaction","transactionHash","eventHashes","blockHash","lockEvent","getBlock","blockNumber","transactionString","time","timestamp","lock","blockNo","lockOwner","defaultAffiliation","aff","plmBaseIssueRatio","lockData","ethExchangeRate","bonusRate","Web3Utils","fromWei","totalPlmBaseIssuingRate","allLocks","plmBaseIssueAmountInLock","totalPlmsRate","currentIssue","calculateTotalPlm","address","receivingPlm","currentAddressLocks","totalPlmRate","issuingPlm","allRefs","results","refEvents","getAllAffReferences","getTotalLockVal","totalVal","currentEth","connectWeb3","lockSeason","net","getId","networkId","deployedNetwork","Lockdrop","networks","Contract","abi","First","Second","SecondLockdrop","contract","alert","submitLockTx","txInput","messageToast","utils","isAddress","amountToSend","toWei","methods","send","from","success","message","TabPanel","index","other","role","hidden","id","aria-labelledby","Box","p","a11yProps","LockState","listRoot","palette","background","overflow","listSection","ul","lockListPage","textAlign","tabMenu","LockedEthList","contractInstance","useTheme","React","setValue","AppBar","Tabs","onChange","_event","newValue","indicatorColor","textColor","aria-label","Tab","axis","direction","onChangeIndex","dir","GlobalLocks","lockEvents","setEvents","isLoadingComp","setLoadState","useEffect","interval","setInterval","clearInterval","CircularProgress","subheader","ListSubheader","eventItem","CurrentLocks","getUserLocks","lockInfo","UnlockInfo","getUnlockDate","useCallback","Number","calculateTimeLeft","tillEnd","now","days","hours","minutes","seconds","canUnlock","setLockState","tillUnlock","setUnlockDate","lockIsClaimed","setLockClaim","isLoading","setLoading","checkUnlock","today","lockedDay","unlockDate","getBalance","lockBalance","then","LinearProgress","ListItemSecondaryAction","IconButton","edge","sendTransaction","to","LockdropCountdownPanel","startTime","endTime","tillStart","valueOf","difference","diff","timeLeft","getLockState","notStart","start","end","setTimeLeft","lockState","totalLockVal","setTotalLockVal","getLockValue","err","PanelWrapper","LockdropResult","pageContent","header","claimButton","totalPlm","setTotalPlm","exRate","setExRate","showIntoRefPopover","setShowIntroRefPopover","showIntoPopover","setShowIntroPopover","totalIssue","countupTotalPlmVal","getTotalPlm","toNumber","decimals","separator","getAffBonus","isOpen","onDidDismiss","data","getIntroBonus","IntoRefItems","IntoAffItems","ClaimPlm","paddingTop","addressPanel","alignContent","nested","plmAddress","setPlmAddress","ethPubkey","setEthPubkey","open","setOpen","getPlasmAddress","pubKey","replace","size","ListItemIcon","Collapse","in","timeout","unmountOnExit","IntroducerBonusesItems","lockResult","AffiliationList","lockdropResult","setLockdropResult","sort","b","getAffliationResults","toast","configure","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","hasFirstLockdropEnded","EthLockdropPage","timerInterval","componentDidMount","web3State","setState","on","handleAccountChange","state","getNetworkType","networkType","getLockData","componentWillUnmount","allLockEvents","formInputVal","isProcessing","fetchingLockData","hasFirstLockdropStarted","Component","DustyEthLockPage","isMainnet","DustyBtcLockPage","None","walletType","setWalletType","handleTrezor","initTrezor","TrezorConnect","getAddress","path","Trezor","trezorLogo","Ledger","ledgerLogo","Raw","warning","SideMenu","contentId","detail","homeIcon","discord","telegram","twitter","github","App","when","animated","exact","render","Boolean","hostname","match","createMuiTheme","fontFamily","join","main","light","dark","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","init","manifest","email","appUrl","debug","webpackAsyncContext","req","__webpack_require__","o","Error","code","ids","keys","Object"],"mappings":"+IAAAA,EAAOC,QAAU,IAA0B,2C,oLCKrCC,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,KAAM,CACFC,SAAU,GAEdC,OAAQ,CACJC,gBAAiB,SAErBC,SAAU,CACNC,OAAQP,EAAMQ,QAAQ,GACtBC,UAAW,GACXC,OAAQ,OACRC,cAAe,UAEnBC,MAAO,CACHC,MAAO,SAEXC,UAAW,CACPD,MAAO,WAEXE,eAAe,aACXC,QAAS,QACRhB,EAAMiB,YAAYC,GAAG,MAAQ,CAC1BF,QAAS,SAGjBG,cAAc,aACVH,QAAS,QACRhB,EAAMiB,YAAYC,GAAG,MAAQ,CAC1BF,QAAS,SAGjBI,SAAU,CACNC,MAAO,QAEXC,QAAS,CACLC,SAAUvB,EAAMwB,WAAWC,QAAQ,IACnCC,WAAY1B,EAAMwB,WAAWG,wBAK1B,SAASC,IACpB,IAAMC,EAAU/B,IAEhB,OACI,oCACI,kBAAC,IAAD,CAAWgC,UAAWD,EAAQzB,QAC1B,kBAAC,IAAD,CAAYS,MAAM,SACd,kBAAC,IAAD,CAAYkB,KAAK,SACb,kBAAC,IAAD,CAAeD,UAAWD,EAAQjB,QAClC,yBAAKkB,UAAWD,EAAQvB,SAAU0B,IAAKC,IAAWC,IAAI,MAE1D,kBAAC,IAAD,CAAUJ,UAAWD,EAAQjB,OAA7B,oB,yEC1DPuB,EAEH,wCAFGA,EAGA,oCAHAA,EAID,6CAJCA,EAKC,6BALDA,EAMA,wCAyCAC,EAAY,CACrB,CACIC,YAAa,UACbC,KAAMH,EACNI,KAAM,WAEV,CACIF,YAAa,WACbC,KAAMH,EACNI,KAAM,aAIDC,EAAU,CACnB,CACIH,YAAa,OACbC,KAvDE,wBAyDN,CACID,YAAa,aACbC,KAAK,UAAD,OA5DD,sBAgEEG,EAAW,CACpB,CACIJ,YAAa,QACbC,KAAM,8CAEV,CACID,YAAa,qBACbC,KAAM,6CAEV,CACID,YAAa,iBACbC,KAAM,oDAEV,CACID,YAAa,uBACbC,KAAM,kDAEV,CACID,YAAa,iBACbC,KAAM,qDAIDI,EAAgB,CACzB,CACIL,YAAa,6BACbC,KAAM,+BAEV,CACID,YAAa,iCACbC,KAAM,6BAIDK,EAAQ,CACjB,CACIN,YAAa,SACbC,KAAMH,I,UC5GDS,EAGF,UAHEA,EAKC,UALDA,EAQH,UCKV,SAASC,IACL,OACI,oCACI,kBAACC,EAAA,EAAD,CAAYC,QAAQ,SACf,cAAY,IAAIC,MAAOC,cAAgB,IACxC,kBAACC,EAAA,EAAD,CAAMrC,MAAM,UAAUsC,KAAK,uBAAuBC,IAAI,sBAAsBC,OAAO,UAAnF,4BAEQ,IACP,yBAMjB,IAAMvD,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCsD,KAAM,CACFC,UAAWvD,EAAMQ,QAAQ,KAE7BgD,WAAY,CACR3C,MAAO,QACPU,SAAU,GACVkC,YAAazD,EAAMQ,QAAQ,IAE/BkD,OAAQ,CACJC,QAAS3D,EAAMQ,QAAQ,GACvBH,gBAAiB,QACjBQ,MAAO,SAEX+C,aAAc,CACV/C,MAAO+B,GAEXiB,QAAS,OAGE,SAASC,IACpB,IAAMjC,EAAU/B,IAEhB,OACI,yBAAKgC,UAAWD,EAAQyB,MACpB,4BAAQxB,UAAWD,EAAQ6B,QACvB,kBAACK,EAAA,EAAD,CAAWC,SAAS,MAChB,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAAC1D,QAAS,EAAG2D,QAAQ,SAASrC,UAAWD,EAAQgC,SAC5D,kBAACI,EAAA,EAAD,CAAMG,MAAI,GACN,kBAACtB,EAAA,EAAD,CAAYC,QAAQ,QAAQsB,UAAU,KAAKC,MAAM,SAASxC,UAAWD,EAAQ+B,cAA7E,WAGA,kBAACW,EAAA,EAAD,MAEA,kBAACC,EAAA,EAAD,CAAMH,UAAU,OACX7B,EAAQiC,KAAI,SAAAC,GAAO,OAChB,kBAACxB,EAAA,EAAD,CACIrC,MAAM,UACNsC,KAAMuB,EAAQpC,KACdqC,IAAKD,EAAQrC,YACbe,IAAI,sBACJC,OAAO,UAEP,kBAACuB,EAAA,EAAD,CAAUC,QAAM,GACZ,kBAACC,EAAA,EAAD,CAAcC,QAASL,EAAQrC,qBAMnD,kBAAC4B,EAAA,EAAD,CAAMG,MAAI,GACN,kBAACtB,EAAA,EAAD,CAAYC,QAAQ,QAAQsB,UAAU,KAAKC,MAAM,SAASxC,UAAWD,EAAQ+B,cAA7E,gBAGA,kBAACW,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAMH,UAAU,OACX5B,EAASgC,KAAI,SAAAO,GAAO,OACjB,kBAAC9B,EAAA,EAAD,CACIrC,MAAM,UACNsC,KAAM6B,EAAQ1C,KACdqC,IAAKK,EAAQ3C,YACbe,IAAI,sBACJC,OAAO,UAEP,kBAACuB,EAAA,EAAD,CAAUC,QAAM,GACZ,kBAACC,EAAA,EAAD,CAAcC,QAASC,EAAQ3C,qBAMnD,kBAAC4B,EAAA,EAAD,CAAMG,MAAI,GACN,kBAACtB,EAAA,EAAD,CAAYC,QAAQ,QAAQsB,UAAU,KAAKC,MAAM,SAASxC,UAAWD,EAAQ+B,cAA7E,iBAGA,kBAACW,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAMH,UAAU,OACX3B,EAAc+B,KAAI,SAAAQ,GAAa,OAC5B,kBAAC/B,EAAA,EAAD,CACIrC,MAAM,UACNsC,KAAM8B,EAAc3C,KACpBqC,IAAKM,EAAc5C,YACnBe,IAAI,sBACJC,OAAO,UAEP,kBAACuB,EAAA,EAAD,CAAUC,QAAM,GACZ,kBAACC,EAAA,EAAD,CAAcC,QAASE,EAAc5C,qBAMzD,kBAAC4B,EAAA,EAAD,CAAMG,MAAI,GACN,kBAACtB,EAAA,EAAD,CAAYC,QAAQ,QAAQsB,UAAU,KAAKC,MAAM,SAASxC,UAAWD,EAAQ+B,cAA7E,QAGA,kBAACW,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAMH,UAAU,OACX1B,EAAM8B,KAAI,SAAAS,GAAI,OACX,kBAAChC,EAAA,EAAD,CACIrC,MAAM,UACNsC,KAAM+B,EAAK5C,KACXqC,IAAKO,EAAK7C,YACVe,IAAI,sBACJC,OAAO,UAEP,kBAACuB,EAAA,EAAD,CAAUC,QAAM,GACZ,kBAACC,EAAA,EAAD,CAAcC,QAASG,EAAK7C,qBAMhD,kBAAC4B,EAAA,EAAD,CAAMG,MAAI,GACN,kBAACtB,EAAA,EAAD,CAAYC,QAAQ,QAAQsB,UAAU,KAAKC,MAAM,SAASxC,UAAWD,EAAQ+B,cAA7E,aAGA,kBAACW,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAMH,UAAU,OACXjC,EAAUqC,KAAI,SAAAU,GAAS,OACpB,kBAACjC,EAAA,EAAD,CACIrC,MAAM,UACNsC,KAAMgC,EAAU7C,KAChBqC,IAAKQ,EAAU9C,YACfe,IAAI,sBACJC,OAAO,UAEP,kBAACuB,EAAA,EAAD,CAAUC,QAAM,GACZ,kBAACC,EAAA,EAAD,CAAcC,QAASI,EAAU9C,uBAS7D,kBAAC0B,EAAA,EAAD,CAAWC,SAAS,MAChB,kBAAClB,EAAA,EAAD,CAAYC,QAAQ,QAAQsB,UAAU,KAAKC,MAAM,SAASxC,UAAWD,EAAQ+B,cACzE,kBAACf,EAAD,U,cCrITuC,EAtBsB,SAAC,GAA4B,IAA1BpB,EAAyB,EAAzBA,SAAUqB,EAAe,EAAfA,SASxCxD,EARY9B,aAAW,SAAAC,GAAK,MAAK,CACnCsF,MAAO,CACHjF,gBAAiBuC,EACjBe,QAAS3D,EAAMQ,QAAQ,EAAG,EAAG,GAC7BD,OAAQP,EAAMQ,QAAQ,OAIdV,GAEhB,OACI,oCACI,kBAACiE,EAAA,EAAD,CAAWC,SAAUA,GACjB,kBAACuB,EAAA,EAAD,CAAOC,UAAW,EAAG1D,UAAWD,EAAQyD,OACnCD,M,yFCnBRI,EAAqBC,IAAOC,IAAI,uBAGhCC,GAAmBF,IAAOC,IAAI,uBAG9BE,GAAsBH,IAAOC,IAAI,uBAEjCG,GAAoBJ,IAAOC,IAAI,uBAG/BI,GAA0B,CACnC,CAAEC,MAAO,UAAWC,MAAO,IAC3B,CAAED,MAAO,WAAYC,MAAO,KAC5B,CAAED,MAAO,WAAYC,MAAO,KAC5B,CAAED,MAAO,YAAaC,MAAO,MAIpBC,GAAQ,CACjB,CAAEvB,IAAK,GAAIsB,MAAO,IAClB,CAAEtB,IAAK,IAAKsB,MAAO,KACnB,CAAEtB,IAAK,IAAKsB,MAAO,KACnB,CAAEtB,IAAK,IAAMsB,MAAO,OAGXE,GAAwB,CACjC,CACIvF,MAAO,WACPwF,IAAK,mBACL7D,KAAM8D,IACNC,UAAWb,EACXc,QAASX,KAIJY,GAAyB,CAClC,CACI5F,MAAO,WACPwF,IAAK,mBACL7D,KAAM8D,IACNC,UAAWT,GACXU,QAAST,IAEb,CACIlF,MAAO,WACPwF,IAAK,mBACL7D,KAAMkE,IACNH,UAAWT,GACXU,QAAST,KAIJY,GAAwB,CACjC,CACI9F,MAAO,WACPwF,IAAK,uBACL7D,KAAM8D,IACNC,UAAWb,EACXc,QAASX,GACTe,UAAU,GAEd,CACI/F,MAAO,WACPwF,IAAK,uBACL7D,KAAMkE,IACNH,UAAWb,EACXc,QAASX,GACTe,UAAU,ICjDZC,GAAeC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,EAAIC,IAAgBC,IAEpEnH,GAAYC,aAAW,iBAAO,CAChCmH,QAAS,CACLlG,QAAS,QACTgD,SAAU,OACV3C,MAAO,QACPX,OAAQ,OACRyG,WAAY,OACZC,YAAa,YA0GNC,GArGsB,WACjC,IAAMxF,EAAU/B,KAEhB,OACI,kBAAC,IAAD,KACI,kBAAC8B,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,EAAD,CAAaoC,SAAS,MAClB,yBAAKhC,IAAK4E,GAAc1E,IAAI,GAAGJ,UAAWD,EAAQqF,UAClD,kBAAC,IAAD,KACI,kBAAC,IAAD,+CACA,kBAAC,IAAD,gCAEJ,kBAAC,IAAD,wIAEsC,IAClC,uBACIrG,MAAM,UACNsC,KAAK,2HACLC,IAAI,sBACJC,OAAO,UAJX,QAOK,IAVT,aAeJ,kBAAC,EAAD,CAAaW,SAAS,MAClB,kBAAC,IAAD,KACI,kBAAC,IAAD,wBAEJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAShC,IAAKqE,IAAStE,KAAK,UAC5B,kBAAC,IAAD,uBAEA,kBAAC,IAAD,CAAWuF,KAAK,UAAUvF,KAAK,OAC3B,kBAAC,IAAD,CAAewF,WAAW,oBAA1B,UAIR,kBAAC,IAAD,oBACiB9B,EAAmB+B,OAAO,oBAAoBC,WAD/D,OAEI,6BAFJ,aAGe7B,GAAiB4B,OAAO,oBAAoBC,WAH3D,SAOJ,kBAAC,EAAD,CAAazD,SAAS,MAClB,kBAAC,IAAD,KACI,kBAAC,IAAD,yBAEJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAShC,IAAKqE,IAAStE,KAAK,UAC5B,kBAAC,IAAD,uBACA,kBAAC,IAAD,CAAWuF,KAAK,UAAUvF,KAAK,MAAM4E,UAAU,GAA/C,SAKJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAS3E,IAAKyE,IAAS1E,KAAK,UAC5B,kBAAC,IAAD,uBACA,kBAAC,IAAD,CAAWuF,KAAK,UAAUvF,KAAK,MAAM4E,UAAU,GAA/C,SAIJ,kBAAC,IAAD,uBAEI,6BAFJ,kBAOJ,kBAAC,EAAD,CAAa3C,SAAS,MAClB,kBAAC,IAAD,KACI,kBAAC,IAAD,wBAEJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAShC,IAAKqE,IAAStE,KAAK,UAC5B,kBAAC,IAAD,uBAEA,kBAAC,IAAD,CAAWuF,KAAK,UAAUvF,KAAK,MAAM4E,UAAQ,GACzC,kBAAC,IAAD,CAAeY,WAAW,wBAA1B,UAGR,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASvF,IAAKyE,IAAS1E,KAAK,UAC5B,kBAAC,IAAD,uBAEA,kBAAC,IAAD,CAAWuF,KAAK,UAAUvF,KAAK,MAAM4E,UAAQ,GACzC,kBAAC,IAAD,CAAeY,WAAW,wBAA1B,WAIZ,kBAAC,EAAD,S,uEClIHG,GAAiB,SAACC,GAC3B,IAAMC,EAAQD,EAAME,SAASpD,KAAI,SAAAqD,GAC7B,OACI,kBAAC,IAAD,CAAiBhG,UAAU,gBAAgB6C,IAAKgD,EAAME,SAASE,QAAQD,GAAI7B,MAAO6B,EAAE7B,OAC/E6B,EAAE9B,UAKf,OACI,kBAAC,IAAD,CAAWgC,UAAU,UAAUC,YAAa,SAAAC,GAAC,OAAIP,EAAMQ,SAASD,KAC3DN,I,8DCuIEQ,GAlIM,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,MAAOC,EAA+C,EAA/CA,SAAUjG,EAAqC,EAArCA,YAAakG,EAAwB,EAAxBA,MAAwB,EAE1CC,mBAAa,IAAIC,KAAG,IAFsB,oBAEnEC,EAFmE,KAEvDC,EAFuD,OAGtCH,mBAAS,GAH6B,oBAGnEI,EAHmE,KAGrDC,EAHqD,OAI7CL,mBAAS,IAJoC,oBAInEM,EAJmE,KAIvDC,EAJuD,KA8BpElH,EAxBY9B,aAAW,SAACC,GAAD,OACzBC,YAAa,CACT+I,SAAU,CACNrF,QAAS3D,EAAMQ,QAAQ,EAAG,EAAG,IAEjCyI,SAAU,CACN1I,OAAQP,EAAMQ,QAAQ,IAE1B0I,UAAW,CACP3I,OAAQP,EAAMQ,QAAQ,IAE1B2I,UAAW,CACP/B,YAAapH,EAAMQ,QAAQ,GAC3BC,UAAW,GACXC,OAAQ,OACRC,cAAe,UAEnByI,QAAS,CACLjC,WAAY,OACZC,YAAa,YAKTtH,GAEhB,SAASuJ,IACL,OAAIT,EACO1C,GAAMoD,QAAO,SAAAxB,GAAC,OAAIA,EAAEnD,MAAQiE,KAAc,GAAG3C,MAEjD,EAeX,OACI,oCACI,kBAAC,EAAD,CAAajC,SAAS,MAClB,yBAAKlC,UAAWD,EAAQmH,UACpB,kBAAClG,EAAA,EAAD,CAAYC,QAAQ,KAAKsB,UAAU,KAAKC,MAAM,UACzCiE,EAAQ,cAAgB,aAD7B,8BAGA,kBAACzF,EAAA,EAAD,CAAYC,QAAQ,QAAQsB,UAAU,KAAKC,MAAM,UAAjD,aACe,IACX,kBAACpB,EAAA,EAAD,CACIrC,MAAM,UACNsC,KAAK,4HACLC,IAAI,sBACJC,OAAO,UAEP,yBAAKrB,IAAKuH,KAAgBrH,IAAI,GAAGJ,UAAWD,EAAQsH,cAI3D9G,EACG,kBAAC,IAAD,CAASP,UAAWD,EAAQuH,SACxB,kBAAC,IAAD,KAAiBI,KAAMnH,KAG3B,8BAGJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUoH,SAAS,YAAnB,aAAyCpB,GACzC,kBAAC,IAAD,CACIqB,YAAa,eAAiBrB,EAC9BsB,WAAY,SAAAzB,GAAC,OAAIS,EAAYT,EAAE7E,OAA4B4C,WAGnE,kBAAC,IAAD,CAAUnE,UAAWD,EAAQqH,WAA7B,iBACA,kBAAC,IAAD,KACI,kBAAC,GAAD,CACIrB,SAAU9B,GACVoC,SAAU,SAACD,GAAD,OACNW,EAAaX,EAAE7E,OAAO4C,UAG9B,kBAAC,IAAD,KACI,kBAAC,IAAD,KACK2C,EAAe,eAAiBS,IAAiB,IAAM,gCAKpE,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASvH,UAAWD,EAAQuH,SACxB,kBAAC,IAAD,+OAGoE,IAChE,uBAAGjG,KAAK,kHAAR,WAEK,IANT,iBAUJ,kBAAC,IAAD,CAAUsG,SAAS,YAAnB,0BAEA,kBAAC,IAAD,CACIC,YAAa,kBACbC,WAAY,SAAAzB,GAAC,OAAIa,EAAQb,EAAE7E,OAA4B4C,WAG/D,kBAAClC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAW6F,OAAO,QAAQC,QAAS,kBAhFvD,WACI,IAAMC,EAAoB,CACtBC,SAAUnB,EACVoB,OAAQtB,EACRuB,YAAanB,EACboB,KAAMb,KAEVf,EAASwB,GAyEgDK,IAAgBrI,UAAWD,EAAQoH,UAA5E,2B,wCC1ITmB,K,gFAAf,mCAAAC,EAAA,0DAESC,OAAeC,SAFxB,wBAGcC,EAAO,IAAIC,KAAMH,OAAeC,UAH9C,kBAMmBD,OAAeC,SAASG,SAN3C,cAOYC,QAAQC,IAAI,yBAPxB,kBASmBJ,GATnB,mGAecF,OAAeE,KAf7B,wBAiBcA,EAAQF,OAAeE,KAC7BG,QAAQC,IAAI,2BAlBpB,kBAmBeJ,GAnBf,eAuBcK,EAAW,IAAIJ,KAAKK,UAAUC,aAAa,yBAC3CP,EAAO,IAAIC,KAAKI,GACtBF,QAAQC,IAAI,gDAzBpB,kBA0BeJ,GA1Bf,0D,sBAgEO,ICzDKQ,GA+BAC,GD0BCC,GAAkB,WAC3B,IAAIC,SAAQ,SAACC,EAASC,GAClB,IACIf,OAAOgB,oBAAoB,QAAQ,kBAAMF,EAAQhB,SACnD,MAAOmB,GACLF,EAAOE,QAqBJC,GAhBC,kBACZ,IAAIL,SAAQ,SAACC,EAASC,GAEU,aAAxBI,SAASC,YAETpB,OAAOqB,SAASC,SAIpB,IACItB,OAAOuB,iBAAiB,QAAQ,kBAAMT,EAAQhB,SAChD,MAAOmB,GACLF,EAAOE,S,SC/EPP,O,mBAAAA,I,mBAAAA,I,aAAAA,I,gBAAAA,Q,cA+BAC,O,iBAAAA,I,oBAAAA,Q,6BCxCCa,GAAiB,6CA2CjBC,GAAmB,UAvCL,CACvB,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,8CAGwB,CAAC,0BAEG,CAAmDD,KAE5E,SAASE,GAAuBC,GACnC,OAAOF,GAAoBG,SAASD,EAAWE,eC5C5C,IAAMC,GAAb,WAOI,WACIC,EACAC,EACAC,EACAC,EACAC,GACD,0BAZHJ,aAYE,OAXFC,aAWE,OAVFC,0BAUE,OATFC,4BASE,OARFC,WAQE,EACEC,KAAKL,QAAUA,EACfK,KAAKJ,QAAUA,EACfI,KAAKH,qBAAuBA,EAC5BG,KAAKF,uBAAyBA,EAC9BE,KAAKD,MAAQA,EAlBrB,wDAwBQ,IAFA,IAAIE,EAAoB,IAAIC,KAAU,GAE7BC,EAAI,EAAGA,EAAIH,KAAKH,qBAAqBO,OAAQD,IAClDF,EAAoBA,EAAkBI,KAAKL,KAAKH,qBAAqBM,GAAG,IAG5E,IAAMG,EAAWN,KAAKO,oBAEtB,OAAOP,KAAKJ,QACPS,KAAKJ,GACLI,KAAKC,GACLE,YAjCb,oCAqCQ,OAAO,IAAIN,KAAUF,KAAKS,YAAYD,YArC9C,oCAyCQ,OAAO,IAAIN,KAAUF,KAAKO,qBAAqBG,SAAS,KAzChE,sCA6CQ,OAAO,IAAIR,KAAUF,KAAKW,uBAAuBD,SAAS,KA7ClE,0CAkDQ,OAAOV,KAAKF,uBAAuBc,QAC/B,SAACC,EAAgBC,GAAjB,OAA2DD,EAAIR,KAAKS,EAAM,MAC1E,IAAIZ,KAAU,MApD1B,4CA0DQ,OAAOF,KAAKH,qBAAqBe,QAC7B,SAACC,EAAgBC,GAAjB,OAA2DD,EAAIR,KAAKS,EAAM,MAC1E,IAAIZ,KAAU,QA5D1B,K,iDCuBMa,GADoB,IAAIb,KAAU,6BACec,MAAM,IAAId,KAAU,MAAMe,IAAI,IAAIf,KAAU,QAG5F,SAASgB,GAAmBC,GAE/B,IASMC,EAAmBC,KAAUC,UAAUC,SAASJ,GAEhDK,EAAcC,eAXA,SAACC,GAEjB,IADA,IAAMC,EAAS,GACNxB,EAAI,EAAGA,EAAIuB,EAAUtB,OAAQD,GAAK,EACvCwB,EAAOC,KAAKC,SAASH,EAAUI,OAAO3B,EAAG,GAAI,KAEjD,OAAO,IAAI4B,WAAWJ,GAMmBK,CAAYZ,GAAmB,KAG5E,OADqBK,iBAA2BD,EAAa,GAI1D,SAAeS,GAAtB,mC,gDAAO,WAAyBnE,GAAzB,wBAAAH,EAAA,6DACGuE,EAAM,6DACNC,EAAOrE,EAAKsE,IAAIC,SAASC,YAAYJ,GAFxC,kBAIyBpE,EAAKsE,IAAIG,cAJlC,cAIOC,EAJP,gBAM2B1E,EAAKsE,IAAIK,SAASC,KAAKR,EAAKM,EAAU,GAAI,kBANrE,0BAMwFG,MAAM,GAAvFC,EAAM,KANb,KAOOC,EAAMC,sBAAWF,GAPxB,kBASQG,uBAAYC,qBAAUC,oBAASd,GAAOU,EAAIK,EAAGL,EAAIM,EAAGN,EAAIO,KAThE,kCAWCnF,QAAQC,IAAR,MAXD,2D,sBAgBA,SAAemF,GAAtB,qC,gDAAO,WAAgCvF,EAAYwF,GAA5C,kBAAA3F,EAAA,6DAEuB,EAFvB,kBAIkB2F,EAASC,cAAc,SAAU,CAC9CC,UAHkB,IAFvB,cAIOC,EAJP,gBAQ2BhF,QAAQiF,IAC9BD,EAAG1L,IAAH,yCAAO,WAAMyD,GAAN,UAAAmC,EAAA,+EACIc,QAAQiF,IAAI,CAACjF,QAAQC,QAAQlD,EAAEmI,cAAe7F,EAAKsE,IAAIwB,eAAepI,EAAEqI,oBAD5E,2CAAP,wDATL,cAQOC,EARP,yBAcQrF,QAAQiF,IACXI,EAAY/L,IAAZ,yCAAgB,WAAMyD,GAAN,sBAAAmC,EAAA,6DAENoG,EAAYvI,EAAE,GACdwI,EAAYxI,EAAE,GAHR,SAKoBiD,QAAQC,QACpCZ,EAAKsE,IAAI6B,SAAUF,EAAUG,YAAuBnJ,aAN5C,cAKNoJ,EALM,OAQNC,EAAOD,EAAkBE,UAAUtJ,WAR7B,kBASL,CACHqH,IAAK4B,EAAU5B,IACf/E,SAAU2G,EAAU3G,SACpBiH,KAAMN,EAAUM,KAChB/E,WAAYyE,EAAUzE,WACtBgF,QAASR,EAAUG,YACnBG,UAAWD,EACXI,UAAWhJ,EAAE,GAAF,OAhBH,2CAAhB,yDAfL,yCAoCCyC,QAAQC,IAAR,MApCD,kBAsCQ,IAtCR,2D,sBA0CA,SAASuG,GAAmBC,GAE/B,OAAIA,GAKOtF,GAkBf,SAASuF,GAAkBC,EAAqBC,GAE5C,IC9H+BxH,ED8HzByH,EAAY,IAAI5E,MC9HS7C,ED8HoBuH,EAASvH,SC7HxDA,EAAW,GACJ,EACAA,EAAW,IACX,GACAA,EAAW,IACX,IACAA,EAAW,IACX,IAEA,ODoH4D2D,MAAM6D,GAM7E,OAHgC,IAAI3E,KAAU6E,KAAUC,QAAQJ,EAASxC,IAAIrH,WAAY,UAAUiG,MAC/F,IAAId,KAAU4E,IAKtB,SAASG,GAAwBC,EAAuBL,GACpD,OAAOK,EAAStE,QACZ,SAACC,EAAgBtH,GAAjB,OAAiDsH,EAAIR,KAAKsE,GAAkBpL,EAAOsL,MACnF,IAAI3E,KAAU,IAItB,SAASiF,GAAyBb,EAAiBc,EAA0BP,GACzE,IAAMQ,EAAeV,GAAkBL,EAAMO,GAC7C,OAAO9D,GAA6BC,MAAMqE,GAAcpE,IAAImE,GA8BzD,SAASE,GAAkBC,EAAiBX,GAC/C,IAAMY,EAAe,IAAI9F,GAAQ6F,EAAS,IAAIrF,KAAU,GAAI,GAAI,GAAI,IAE9DuF,EAAsBb,EAAShI,QAAO,SAAAuD,GAAC,OAAIA,EAAEqE,UAAU/E,gBAAkB8F,EAAQ9F,iBAEvF+F,EAAazF,MAAQ0F,EAOrB,IALA,IAAMZ,EAAkB,IAAI3E,KAtKF,QAyKpBwF,EAAeT,GAAwBL,EAAUC,GAE9C1E,EAAI,EAAGA,EAAIsF,EAAoBrF,OAAQD,IAAK,CAEjD,IAAMwF,EAAaR,GAAyBM,EAAoBtF,GAAIuF,EAAcb,GAGlFW,EAAa5F,QAAU4F,EAAa5F,QAAQS,KAAKsF,GAK7CrG,GAAuBmG,EAAoBtF,GAAGZ,aAC9CkG,EAAoBtF,GAAGZ,aAAeH,IAEtCoG,EAAa3F,qBAAqB+B,KAAK,CACnC6D,EAAoBtF,GAAGZ,WACvBoG,EAAW3E,MAAM,IAAId,KF7MN,QEoN3B,GAAIZ,GAAuBiG,GAGvB,IAFA,IAAMK,EA7Dd,SAA6BL,EAAiBX,GAK1C,IAHA,IAAMiB,EAAuB,GACvBC,EAAYlB,EAAShI,QAAO,SAAApB,GAAC,OAAIA,EAAE+D,WAAWE,gBAAkB8F,EAAQ9F,iBAErEU,EAAI,EAAGA,EAAI2F,EAAU1F,OAAQD,IAClC0F,EAAQjE,KAAKkE,EAAU3F,IAG3B,OAAO0F,EAoDaE,CAAoBR,EAASX,GAEpCzE,EAAI,EAAGA,EAAIyF,EAAQxF,OAAQD,IAEhCqF,EAAa1F,uBAAuB8B,KAAK,CACrCgE,EAAQzF,GAAGmE,KACXa,GAAyBS,EAAQzF,GAAIuF,EAAcb,GAAiB7D,MAChE,IAAId,KF5NO,QEiO3B,OAAOsF,EAGJ,SAASQ,GAAgBjG,GAC5B,IAAIkG,EAAW,IAAI/F,KAAU,GAC7B,GAAIH,EAAMK,OAAS,EACf,IAAK,IAAID,EAAI,EAAGA,EAAIJ,EAAMK,OAAQD,IAAK,CACnC,IAAM+F,EAAa,IAAIhG,KAAUH,EAAMI,GAAGiC,IAAIrH,YAC9CkL,EAAWA,EAAS5F,KAAK6F,GAGjC,OAAOnB,KAAUC,QAAQiB,EAASzF,UAAW,SAI1C,SAAe2F,GAAtB,mC,gDAAO,WAA2BC,GAA3B,wBAAAzI,EAAA,+EAGoBmB,KAHpB,aAGOhB,EAHP,kBAMqBC,MANrB,iCAQ4BD,EAAKsE,IAAIG,cARrC,cAQWF,EARX,iBAW6BvE,EAAKsE,IAAIiE,IAAIC,QAX1C,QAWWC,EAXX,OAYWC,EAAmBC,GAAiBC,SAASH,GAG/CjD,EAAW,IAAIxF,EAAKsE,IAAIuE,SACxBF,GAASG,IACTJ,GAAmBA,EAAgBjB,SAjB5C,KAsBaa,EAtBb,cAuBc7H,GAAWsI,MAvBzB,UA6BctI,GAAWuI,OA7BzB,mCA8BaxD,EAAW,IAAIxF,EAAKsE,IAAIuE,SACpBI,GAAeH,IACfJ,GAAmBA,EAAgBjB,SAhCpD,sDAyCY,CACHzH,KAAMA,EACNuE,SAAUA,EACV2E,SAAU1D,IA5CnB,0DAiDC2D,MAAM,0EACNhJ,QAAQY,MAAR,MAlDD,iCAqDI,CACHf,KAAM,GACNuE,SAAU,CAAC,IACX2E,SAAU,KAxDX,2D,sBA4DA,SAAeE,GAAtB,yC,gDAAO,WAA4BC,EAAoB5B,EAAiByB,EAAoBI,GAArF,kBAAAzJ,EAAA,2DAECwJ,EAAQ7J,OAAS,IAAIvB,KAAG,IAAMoL,EAAQ9J,UAFvC,oBAKOkC,EAAakF,GAAmB0C,EAAQ5J,aAAakC,cAL5D,SAQSF,IAAegG,EARxB,gBASS6B,EAAavI,MAAM,iCAT5B,2BAUgBU,GAAexB,KAAKsJ,MAAMC,UAAU/H,GAVpD,iBAWS6H,EAAavI,MAAM,yCAX5B,2BAYiBS,GAAuBC,GAZxC,iBAaS6H,EAAavI,MAAM,sEAb5B,+BAgBe0I,EAAexJ,KAAKsJ,MAAMG,MAAML,EAAQ7J,OAAQ,SAhB/D,UAmBe0J,EAASS,QAAQnD,KAAK6C,EAAQ9J,SAAUkC,GAAYmI,KAAK,CAC3DC,KAAMpC,EACNhM,MAAOgO,IArBpB,eAwBSH,EAAaQ,QAAb,8BAA4CT,EAAQ7J,OAApD,oBAAsE6J,EAAQ9J,SAA9E,WAxBT,mBAyBgB,GAzBhB,0DA4BK+J,EAAavI,MAAM,WAAa,KAAMgJ,SA5B3C,gCA+BCT,EAAavI,MAAM,6BA/BpB,kCAiCI,GAjCJ,2D,gNE7QP,SAASiJ,GAAS7M,GAAuB,IAC7BtC,EAAqCsC,EAArCtC,SAAUY,EAA2B0B,EAA3B1B,MAAOwO,EAAoB9M,EAApB8M,MAAUC,EADC,aACS/M,EADT,8BAGpC,OACI,kBAAC7E,EAAA,EAAD,eACIuB,UAAU,MACVsQ,KAAK,WACLC,OAAQ3O,IAAUwO,EAClBI,GAAE,8BAAyBJ,GAC3BK,kBAAA,yBAAmCL,IAC/BC,GAEHzO,IAAUwO,GAAS,kBAACM,GAAA,EAAD,CAAKC,EAAG,GAAI3P,IAK5C,SAAS4P,GAAUR,GACf,MAAO,CACHI,GAAG,kBAAD,OAAoBJ,GACtB,gBAAgB,uBAAhB,OAAwCA,IAIhD,IC1CKS,GD0CCpV,GAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTkV,SAAU,CACN9T,MAAO,OACP2C,SAAU,OACV3D,gBAAiBL,EAAMoV,QAAQC,WAAW/P,MAC1CmE,SAAU,WACV6L,SAAU,OACV7U,UAAW,KAEf8U,YAAa,CACTlV,gBAAiB,WAErBmV,GAAI,CACAnV,gBAAiB,UACjBsD,QAAS,GAEb8R,aAAc,CACVC,UAAW,UAEfC,QAAS,CACLtV,gBAAiBL,EAAMoV,QAAQC,WAAW/P,MAC1CjE,MAAO,aAsEJuU,GA1DmC,SAAC,GAAoD,IAAlDpL,EAAiD,EAAjDA,KAAMqL,EAA2C,EAA3CA,iBAAkB9G,EAAyB,EAAzBA,SAAUuC,EAAe,EAAfA,SAC7EzP,EAAU/B,KACVE,EAAQ8V,eAFoF,EAGxEC,IAAMvN,SAAS,GAHyD,oBAG3FvC,EAH2F,KAGpF+P,EAHoF,KAalG,OACI,oCACI,kBAAC,EAAD,CAAahS,SAAS,MAClB,yBAAKlC,UAAWD,EAAQ8T,SACpB,kBAACM,GAAA,EAAD,CAAQxM,SAAS,SAAS5I,MAAM,WAC5B,kBAACqV,GAAA,EAAD,CACIjQ,MAAOA,EACPkQ,SAfH,SAACC,EAA+BC,GACjDL,EAASK,IAeWC,eAAe,UACfC,UAAU,UACVxT,QAAQ,YACRyT,aAAW,mBAEX,kBAACC,GAAA,EAAD,eAAKzQ,MAAM,iBAAoBiP,GAAU,KACzC,kBAACwB,GAAA,EAAD,eAAKzQ,MAAM,iBAAoBiP,GAAU,OAGjD,kBAAC,KAAD,CACIyB,KAA0B,QAApB1W,EAAM2W,UAAsB,YAAc,IAChDlC,MAAOxO,EACP2Q,cAxBM,SAACnC,GACvBuB,EAASvB,KAyBO,kBAACD,GAAD,CAAUvO,MAAOA,EAAOwO,MAAO,EAAGoC,IAAK7W,EAAM2W,WACzC,kBAAC,GAAD,CACInM,KAAMA,EACNqL,iBAAkBA,EAClB9G,SAAUA,EACVuC,SAAUA,KAGlB,kBAACkD,GAAD,CAAUvO,MAAOA,EAAOwO,MAAO,EAAGoC,IAAK7W,EAAM2W,WACzC,kBAAC,GAAD,CACInM,KAAMA,EACNqL,iBAAkBA,EAClB9G,SAAUA,EACVuC,SAAUA,UAYpCwF,GAA0C,SAAC,GAAkB,IAAhBxF,EAAe,EAAfA,SACzCzP,EAAU/B,KAD8C,EAE9B0I,mBAAsB,IAFQ,oBAEvDuO,EAFuD,KAE3CC,EAF2C,OAGxBxO,oBAAS,GAHe,oBAGvDyO,EAHuD,KAGxCC,EAHwC,KAoB9D,OAfAC,qBAAU,WACN,IAAMC,EAAWC,aAAY,WACzBL,EAAU1F,KACX,KAEH,OAAO,WACHgG,cAAcF,MAEnB,CAAC9F,IAEJ6F,qBAAU,WACNH,EAAU1F,GACV4F,GAAa,KACd,CAAC5F,IAGA,yBAAKxP,UAAWD,EAAQ4T,cACnBwB,EACG,kBAACM,GAAA,EAAD,MAEA,oCACKR,EAAWjK,OAAS,EACjB,oCACI,4CACA,4BAAK4F,GAAgBqE,GAArB,eACA,kBAACvS,EAAA,EAAD,CAAM1C,UAAWD,EAAQsT,SAAUqC,UAAW,8BAC1C,wBAAI1V,UAAWD,EAAQ0T,aACnB,wBAAIzT,UAAWD,EAAQ2T,IACnB,kBAACiC,GAAA,EAAD,kBAA0BV,EAAWjK,OAArC,UACA,kBAACvI,EAAA,EAAD,MACCwS,EAAWtS,KAAI,SAAAiT,GAAS,OACrB,oCACI,kBAAC9S,EAAA,EAAD,CAAUD,IAAK+S,EAAU1G,MACrB,kBAAClM,EAAA,EAAD,KACI,6CAAmB4S,EAAU1G,MAC7B,mDAAyB0G,EAAUzG,SACnC,qCACYQ,KAAUC,QAAQgG,EAAU5I,IAAK,SAD7C,WAC+D,IAC1D4I,EAAU3N,SAFf,SAIC2N,EAAUzL,aAAeH,GACtB,0CAAgB4L,EAAUzL,YAE1B,8CAIZ,kBAAC1H,EAAA,EAAD,cAQxB,oCACI,wCACA,yDAStBoT,GAA2C,SAAC,GAAkC,IAAhCnN,EAA+B,EAA/BA,KAAMuE,EAAyB,EAAzBA,SAAUuC,EAAe,EAAfA,SAC1DzP,EAAU/B,KAD+D,EAE/C0I,mBAAsB,IAFyB,oBAExEuO,EAFwE,KAE5DC,EAF4D,OAGzCxO,oBAAS,GAHgC,oBAGxEyO,EAHwE,KAGzDC,EAHyD,KAKzEU,EAAe,WACjB,OAAOtG,EAAShI,QAAO,SAAAuD,GAAC,OAAIA,EAAEqE,YAAcnC,EAAS,OAczD,OAXAoI,qBAAU,WACN,IAAMC,EAAWC,aAAY,WACzBL,EAAUY,GACVV,GAAa,KACd,KAEH,OAAO,WACHI,cAAcF,OAKlB,yBAAKtV,UAAWD,EAAQ4T,cACnBwB,EACG,kBAACM,GAAA,EAAD,MAEA,oCACKR,EAAWjK,OAAS,EACjB,oCACI,0CACA,4BAAK4F,GAAgBqE,GAArB,eACA,kBAACvS,EAAA,EAAD,CAAM1C,UAAWD,EAAQsT,SAAUqC,UAAW,8BAC1C,wBAAI1V,UAAWD,EAAQ0T,aACnB,wBAAIzT,UAAWD,EAAQ2T,IACnB,kBAACiC,GAAA,EAAD,iBAAyBV,EAAWjK,OAApC,UACA,kBAACvI,EAAA,EAAD,MACCwS,EAAWtS,KAAI,SAAAiT,GAAS,OACrB,oCACI,kBAAC,GAAD,CAAYG,SAAUH,EAAWlN,KAAMA,EAAMyH,QAASlD,EAAS,KAC/D,kBAACxK,EAAA,EAAD,cAQxB,oCACI,wCACA,yDAetBuT,GAAwC,SAAC,GAAiC,IAA/BD,EAA8B,EAA9BA,SAAUrN,EAAoB,EAApBA,KAAMyH,EAAc,EAAdA,QAIvD8F,EAAgBC,uBAAY,WAM9B,OAJ+C,IAA7BC,OAAOJ,EAAS9G,WAJlB,MAMe8G,EAAS9N,WAGzC,CAAC8N,IAEEK,EAAoBF,uBAAY,WAElC,IAAMG,EAAUJ,KAAmB/U,KAAKoV,MACxC,MAAO,CACHC,KAAMxR,KAAKC,MAAMqR,EAAO,OACxBG,MAAOzR,KAAKC,MAAOqR,EAAO,KAAuB,IACjDI,QAAS1R,KAAKC,MAAOqR,EAAU,IAAO,GAAM,IAC5CK,QAAS3R,KAAKC,MAAOqR,EAAU,IAAQ,OAE5C,CAACJ,IAtBuE,EAwBzCvP,oBAAS,GAxBgC,oBAwBpEiQ,EAxBoE,KAwBzDC,EAxByD,OAyBvClQ,mBAAqB0P,KAzBkB,oBAyBpES,EAzBoE,KAyBxDC,EAzBwD,OA0BrCpQ,oBAAS,GA1B4B,oBA0BpEqQ,EA1BoE,KA0BrDC,EA1BqD,OA2B3CtQ,oBAAS,GA3BkC,oBA2BpEuQ,EA3BoE,KA2BzDC,EA3ByD,KA6BrEC,EAAcjB,sBAAW,wBAAC,mCAAA3N,EAAA,6DAEtB6O,EAAQlW,KAAKoV,MAGbe,EAAyC,IAA7BlB,OAAOJ,EAAS9G,WAE5BqI,EAAaD,EAlCH,MAkCetB,EAAS9N,SAPZ,SAUFS,EAAKsE,IAAIuK,WAAWxB,EAAS7G,MAV3B,cAUtBsI,EAVsB,OAc5BR,EAFuC,MAAhBQ,GAIvBN,GAAW,GAhBiB,kBAiBrBE,EAAQE,GAjBa,4CAkB7B,CAACvB,EAAUrN,IAGd2M,qBAAU,WAGN,IAAMC,EAAWC,YAAW,wBAAC,uBAAAhN,EAAA,6DACzBuO,EAAcV,KADW,KAEzBQ,EAFyB,SAENO,IAFM,6EAG1B,KAEH,OAAO,WACH3B,cAAcF,MAEnB,CAACc,EAAmBe,IAGvB9B,qBAAU,WACNyB,EAAcV,KACde,IAAcM,KAAKb,KACpB,CAACR,EAAmBe,IAqBvB,OACI,oCACI,kBAACrU,EAAA,EAAD,CAAUD,IAAKkT,EAAS7G,MACpB,kBAAClM,EAAA,EAAD,KACI,6CAAmB+S,EAAS7G,MAC5B,mDAAyB6G,EAAS5G,SAClC,qCACYQ,KAAUC,QAAQmG,EAAS/I,IAAK,SAD5C,YAC+D+I,EAAS9N,SADxE,SAGC8N,EAAS5L,aAAeH,GACrB,0CAAgB+L,EAAS5L,YAEzB,4CAEH8M,EACG,oCACI,kBAACS,GAAA,EAAD,OAGJ,oCACMf,EAkBEI,EACA,oDAEA,uDApBA,kBAAC5U,EAAA,EAAD,CAAMC,WAAS,EAAC1D,QAAS,GACrB,kBAACyD,EAAA,EAAD,CAAMG,MAAI,GACN,2BAAIuU,EAAWN,KAAf,WAEJ,kBAACpU,EAAA,EAAD,CAAMG,MAAI,GACN,2BAAIuU,EAAWL,MAAf,YAEJ,kBAACrU,EAAA,EAAD,CAAMG,MAAI,GACN,2BAAIuU,EAAWJ,QAAf,cAEJ,kBAACtU,EAAA,EAAD,CAAMG,MAAI,GACN,2BAAIuU,EAAWH,QAAf,cAEJ,kBAACvU,EAAA,EAAD,CAAMG,MAAI,GACN,uCAYxB,kBAACqV,GAAA,EAAD,KACKZ,EACG,kBAAC,KAAD,CAAchY,MAAM,aACpB4X,EACA,kBAACiB,GAAA,EAAD,CAAYC,KAAK,MAAMnD,aAAW,SAAS3M,QAAS,kBArEpEmP,GAAW,QACXxO,EAAKsE,IACA8K,gBAAgB,CACbvF,KAAMpC,EACN4H,GAAIhC,EAAS7G,KACb/K,MAAO,MAEVsT,MACG,WACIP,GAAW,MAEf,SAAAzN,GACIZ,QAAQC,IAAIW,GACZyN,GAAW,OAwDkEnY,MAAM,WAC3E,kBAAC,KAAD,OAGJ,kBAAC,KAAD,CAAUA,MAAM,gB,2BC7ZnCqU,O,uBAAAA,I,iBAAAA,I,cAAAA,Q,KAML,IAuIe4E,GAvIiC,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,QAAS1I,EAAe,EAAfA,SAC7D8G,EAAM1S,MAASC,MAEfuS,EAAoB,WACtB,IAAM+B,EAAYvU,IAAOqU,GAAWG,UAAY9B,EAAI8B,UAGhDC,EAAapQ,mBAASgQ,EAAUK,KAAKhC,IAGrC6B,EAAY,IACZE,EAAapQ,mBAASiQ,EAAQI,KAAKhC,KAGvC,IAAIiC,EAAuB,CACvBhC,KAAM,EACNC,MAAO,EACPC,QAAS,EACTC,QAAS,GAab,OAVgB9S,IAAOsU,GAASE,UAAY9B,EAAI8B,UAElC,IACVG,EAAW,CACPhC,KAAM8B,EAAW9B,OACjBC,MAAO6B,EAAW7B,QAClBC,QAAS4B,EAAW5B,UACpBC,QAAS2B,EAAW3B,YAGrB6B,GAGLC,EAAe,WACjB,IAAML,EAAYvU,IAAOqU,GAAWG,UAAY9B,EAAI8B,UACpD,OAAID,EAAY,EACL/E,GAAUqF,SACVN,GAAa,KAAOvU,IAAOsU,GAASE,UAAY9B,EAAI8B,UAAY,GAChEhF,GAAUsF,MAEVtF,GAAUuF,KAzCyD,EA6ClDjS,mBAAqB0P,KA7C6B,oBA6C3EmC,EA7C2E,KA6CjEK,EA7CiE,OA8ChDlS,mBAAS8R,KA9CuC,oBA8C3EK,EA9C2E,KA8ChEjC,EA9CgE,OA+C1ClQ,mBAAS,KA/CiC,oBA+C3EoS,EA/C2E,KA+C7DC,EA/C6D,KAiD5EC,EAAY,yCAAG,6BAAAzQ,EAAA,sDACjB,IACUuQ,EAAelI,GAAgBpB,GACrCuJ,EAAgBD,GAClB,MAAOG,GACLpQ,QAAQY,MAAMwP,GALD,2CAAH,qDAgClB,OAZA5D,qBAAU,WACN,IAAMC,EAAWC,YAAW,wBAAC,uBAAAhN,EAAA,6DACzBqQ,EAAYxC,KACZQ,EAAa4B,KAFY,SAGnBQ,IAHmB,2CAI1B,KAEH,OAAO,WACHxD,cAAcF,OAIlBuD,IAAczF,GAAUuF,IAEpB,oCACI,kBAAC,GAAD,KACI,yBAAK3Y,UAAU,QACX,kBAACmC,EAAA,EAAD,CAAMC,WAAS,EAAC1D,QAAS,EAAG2D,QAAQ,UAChC,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACLuW,IAAczF,GAAUqF,SACrB,kBAACzX,EAAA,EAAD,CAAYC,QAAQ,KAAKsB,UAAU,MAAnC,sCAIA,kBAACvB,EAAA,EAAD,CAAYC,QAAQ,KAAKsB,UAAU,MAAnC,wBAKR,kBAACJ,EAAA,EAAD,CAAMG,MAAI,GACN,4BAAKiW,EAAShC,MACd,oCAEJ,kBAACpU,EAAA,EAAD,CAAMG,MAAI,GACN,4BAAKiW,EAAS/B,OACd,qCAEJ,kBAACrU,EAAA,EAAD,CAAMG,MAAI,GACN,4BAAKiW,EAAS9B,SACd,uCAEJ,kBAACtU,EAAA,EAAD,CAAMG,MAAI,GACN,4BAAKiW,EAAS7B,SACd,2CASpB,oCACI,kBAAC,GAAD,KACI,kBAAC1V,EAAA,EAAD,CAAYC,QAAQ,KAAKsB,UAAU,KAAKC,MAAM,UAA9C,mCAGA,kBAACxB,EAAA,EAAD,CAAYC,QAAQ,KAAKsB,UAAU,KAAKC,MAAM,UAA9C,uBACyBsW,EADzB,WAWdI,GAAyB,SAAC,GAAkB,IAAhB3V,EAAe,EAAfA,SAQxBxD,EAPY9B,aAAW,SAAAC,GAAK,MAAK,CACnCkE,UAAW,CACPP,QAAS3D,EAAMQ,QAAQ,EAAG,EAAG,GAC7BD,OAAQP,EAAMQ,QAAQ,OAIdV,GAEhB,OACI,oCACI,kBAACiE,EAAA,EAAD,CAAWC,SAAS,KAAKlC,UAAWD,EAAQqC,WACvCmB,K,0GClCF4V,GAjG+B,SAAC,GAAwB,IAAtB3J,EAAqB,EAArBA,SAAU9G,EAAW,EAAXA,KAgBjD3I,EAfY9B,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTib,YAAa,CACTxF,UAAW,SACX/R,QAAS3D,EAAMQ,QAAQ,EAAG,EAAG,IAEjC2a,OAAQ,CACJta,MAAO+B,GAEXwY,YAAa,CACTzX,QAAS3D,EAAMQ,QAAQ,EAAG,EAAG,QAKzBV,GAhBkD,EAiBlC0I,mBAAkB,IAAI4D,GAAQ,GAAI,IAAIQ,KAAU,GAAI,GAAI,GAAI,KAjB1B,oBAiB3DyO,EAjB2D,KAiBjDC,EAjBiD,OAkBtC9S,mBAAS,GAlB6B,oBAkB3D+S,EAlB2D,KAkBnDC,EAlBmD,OAmBhChT,oBAAS,GAnBuB,oBAmB3DuQ,EAnB2D,KAmBhD7B,EAnBgD,OAoBb1O,oBAAS,GApBI,oBAoB3DiT,EApB2D,KAoBvCC,EApBuC,OAqBnBlT,oBAAS,GArBU,oBAqB3DmT,EArB2D,KAqB1CC,EArB0C,KAuBlEzE,qBAAU,WACN,IAAMC,EAAWC,YAAW,wBAAC,+BAAAhN,EAAA,6DACzBmR,EJ5CkB,QI2CO,SAEFhR,EAAKsE,IAAIG,cAFP,OAEnBF,EAFmB,OAGnB8M,EAAa7J,GAAkBjD,EAAS,GAAIuC,GAClDgK,EAAYO,GAEZ3E,GAAa,GANY,2CAO1B,KAEH,OAAO,WACHI,cAAcF,OAItB,IAAM0E,EACF,kBAAC,KAAD,CACItB,MAAO,EACPC,IAAK,IAAI7N,KAAUyO,EAASU,eAAeC,WAC3CC,SAAU,EACVlS,SAAU,EACVmS,UAAU,MAIlB,OACI,yBAAKpa,UAAWD,EAAQqZ,aACpB,+CACCnC,EACG,oCACI,kBAACxB,GAAA,EAAD,OAEJ8D,EAAS5O,MAAMK,OAAS,GAAKuO,EAAS7O,uBAAuBM,OAAS,EACtE,oCACI,wBAAIhL,UAAWD,EAAQsZ,QAASW,EAAhC,iBACA,8CAAoBT,EAAS5O,MAAMK,OAAnC,YACA,4EACmDyO,EADnD,QAEI,uBAAGpY,KAAK,8FAAR,OAFJ,KAOA,uDAA6BkY,EAAS/O,QAAQc,SAAS,GAAvD,qBACA,kBAAC7I,EAAA,EAAD,MACA,mDACA,kBAAC,IAAD,CAAS1D,MAAM,UAAUgJ,QAAS,kBAAM6R,GAAuB,KAC3D,kBAAC,IAAD,KAAWL,EAAS7O,uBAAuBM,OAA3C,WAEJ,kBAAC,IAAD,iDAAoDuO,EAASc,cAA7D,QAEA,kBAAC,IAAD,CAAYC,OAAQX,EAAoBY,aAAc,kBAAMX,GAAuB,KAC/E,kBAAC,GAAD,CAAcY,KAAMjB,KAExB,6BACA,kBAAC,IAAD,6BACA,kBAAC,IAAD,CAASxa,MAAM,UAAUgJ,QAAS,kBAAM+R,GAAoB,KACxD,kBAAC,IAAD,KAAWP,EAAS9O,qBAAqBO,OAAzC,iBAEJ,kBAAC,IAAD,UAAauO,EAASkB,gBAAtB,QAEA,kBAAC,IAAD,CAAYH,OAAQT,EAAiBU,aAAc,kBAAMT,GAAoB,KACzE,kBAAC,GAAD,CAAcU,KAAMjB,KAExB,6BACA,kBAAC,GAAD,CAAU7Q,KAAMA,KAGpB,wBAAI1I,UAAWD,EAAQsZ,QAAvB,sCAWVqB,GAAwC,SAAC,GAAc,IAAZF,EAAW,EAAXA,KAC7C,OACI,oCACI,kBAAC,IAAD,KACKA,EAAK9P,uBAAuBM,OAAS,EAClC,oCACI,kBAAC,IAAD,mBACCwP,EAAK9P,uBAAuB/H,KAAI,SAACoI,GAAD,OAC7B,kBAAC,IAAD,CAASlI,IAAKkI,EAAE,GAAI1J,KArHxB,gCAqHgD0J,EAAE,GAAIzJ,IAAI,sBAAsBC,OAAO,UAC9EwJ,EAAE,QAKf,kBAAC,IAAD,yBAOd4P,GAAwC,SAAC,GAAc,IAAZH,EAAW,EAAXA,KAC7C,OACI,oCACI,kBAAC,IAAD,KACKA,EAAK/P,qBAAqBO,OAAS,EAChC,oCACI,kBAAC,IAAD,oBACCwP,EAAK/P,qBAAqB9H,KAAI,SAACoI,GAAD,OAC3B,kBAAC,IAAD,CAASlI,IAAKkI,EAAE,GAAI1J,KA1IxB,gCA0IgD0J,EAAE,GAAIzJ,IAAI,sBAAsBC,OAAO,UAC9EwJ,EAAE,QAKf,kBAAC,IAAD,0BAUd6P,GAAiC,SAAC,GAAc,IAAZlS,EAAW,EAAXA,KAChC1K,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTkb,OAAQ,CACJta,MAAO+B,GAEXwY,YAAa,CACTuB,WAAY3c,EAAMQ,QAAQ,GAC1B2G,WAAY,OACZC,YAAa,OACbpD,SAAU,QAEd4Y,aAAc,CACVjZ,QAAS3D,EAAMQ,QAAQ,EAAG,EAAG,IAEjC8C,KAAM,CACFjC,MAAO,OACPwb,aAAc,SACdxc,gBAAiBL,EAAMoV,QAAQC,WAAW/P,OAE9CwX,OAAQ,CACJrZ,YAAazD,EAAMQ,QAAQ,SArBU,EA0BfgI,oBAAS,GA1BM,oBA0B1CuQ,EA1B0C,KA0B/B7B,EA1B+B,OA2Bb1O,mBAAS,IA3BI,oBA2B1CuU,EA3B0C,KA2B9BC,EA3B8B,OA4BfxU,mBAAS,IA5BM,oBA4B1CyU,EA5B0C,KA4B/BC,EA5B+B,OA6BzB1U,oBAAS,GA7BgB,oBA6B1C2U,EA7B0C,KA6BpCC,EA7BoC,KA+B3CC,EAAe,yCAAG,iCAAAhT,EAAA,sEACCsE,GAAUnE,GADX,cACd8S,EADc,OAEhBjP,EAAS,GACS,kBAAXiP,IACPJ,EAAaI,GAEPP,EAAanP,GAAmB0P,EAAOC,QAAQ,KAAM,KAC3DlP,EAAS0O,GAEb7F,GAAa,GATO,kBAUb7I,GAVa,2CAAH,qDAgBfxM,EAAU/B,IAEhB,OACI,oCACI,kBAAC,IAAD,CAAYsc,OAAQrD,EAAWxE,QAAS,sBACxC,kBAAC,IAAD,CACI1T,MAAM,UACN2c,KAAK,QACL1b,UAAWD,EAAQuZ,YACnBvR,QAAO,wBAAE,uBAAAQ,EAAA,6DACL6M,GAAa,GADR,KAEL8F,EAFK,SAEeK,IAFf,8EAJb,qBAWCN,EACG,oCACI,kBAAC,EAAD,CAAa/Y,SAAS,MAClB,yBAAKlC,UAAWD,EAAQ+a,cACpB,oFACA,kBAAC1Z,EAAA,EAAD,CACIrC,MAAM,UACNsC,KAAM,oCAAsC4Z,EAC5C3Z,IAAI,sBACJC,OAAO,UAEP,wBAAIvB,UAAWD,EAAQsZ,QAAS4B,IAEpC,kBAACvY,EAAA,EAAD,CAAMH,UAAU,MAAMvC,UAAWD,EAAQyB,MACrC,kBAACsB,EAAA,EAAD,CAAUC,QAAM,EAACgF,QAlC1B,WACfuT,GAASD,KAkCmB,kBAACM,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAAC3Y,EAAA,EAAD,CAAcC,QAAQ,wBACrBoY,EAAO,kBAAC,KAAD,MAAiB,kBAAC,KAAD,OAE7B,kBAACO,GAAA,EAAD,CAAUC,GAAIR,EAAMS,QAAQ,OAAOC,eAAa,GAC5C,kBAAC/a,EAAA,EAAD,CAAYhB,UAAWD,EAAQsZ,QAAS8B,QAO5D,uCCjQVnd,GAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTkV,SAAU,CACN9T,MAAO,OACP2C,SAAU,OACV3D,gBAAiBL,EAAMoV,QAAQC,WAAW/P,MAC1CmE,SAAU,WACV6L,SAAU,OACV7U,UAAW,KAEf8U,YAAa,CACTlV,gBAAiB,WAErBmV,GAAI,CACAnV,gBAAiB,UACjBsD,QAAS,GAEb/C,MAAO,CACH8U,UAAW,SACX/R,QAAS3D,EAAMQ,QAAQ,EAAG,EAAG,SA0DnCsd,GAA0D,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAC/D,OACI,oCACI,kBAACnZ,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,KACI,4BAAKiZ,EAAW1R,SAChB,2BAAI0R,EAAWvR,uBAAuBM,OAAtC,oCACA,2BAAIiR,EAAW5B,cAAf,4BAGR,kBAAC5X,EAAA,EAAD,QAKGyZ,GApE0B,SAAC,GAAkB,IAAhB1M,EAAe,EAAfA,SAClCzP,EAAU/B,KADuC,EAEX0I,mBAAoB,IAFT,oBAEhDyV,EAFgD,KAEhCC,EAFgC,KA2BvD,OAJA/G,qBAAU,WACN+G,EApBJ,SAA8B5M,GAU1B,OARuBvF,GAAoBzC,QAAO,SAAA2I,GAAO,OAAIA,IAAYnG,MAGtCrH,KAAI,SAAAoI,GACnC,OAAOmF,GAAkBnF,EAAGyE,MAIb6M,MAAK,SAAC9T,EAAG+T,GAAJ,OACpB/T,EAAEmC,uBAAuBM,OAASsR,EAAE5R,uBAAuBM,QACpD,EACDzC,EAAEmC,uBAAuBM,OAASsR,EAAE5R,uBAAuBM,OAC3D,EACA,KAKQuR,CAAqB/M,MACxC,CAACA,IAGA,oCACI,kBAAC,EAAD,CAAatN,SAAS,MAClB,kBAAClB,EAAA,EAAD,CAAYhB,UAAWD,EAAQjB,MAAOmC,QAAQ,MAA9C,2BAGA,kBAACyB,EAAA,EAAD,CAAMH,UAAU,MAAMvC,UAAWD,EAAQsT,SAAUqC,UAAW,8BAC1D,wBAAI1V,UAAWD,EAAQ0T,aACnB,wBAAIzT,UAAWD,EAAQ2T,IACnB,kBAACiC,GAAA,EAAD,kBAA0B1L,GAAoBe,OAAS,EAAvD,gBACA,kBAACvI,EAAA,EAAD,MACC0Z,EAAexZ,KAAI,SAAAoI,GAAC,OACjB,kBAAC,GAAD,CAAwBlI,IAAKkI,EAAER,QAAS0R,WAAYlR,aCnCpFyR,KAAMC,UAAU,CACZ9U,SAAU,YACV+U,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,IAGf,IASMC,GAAwB,WAC1B,IAAMzG,EAAM1S,MACPC,MACAuU,UAEL,OADYtU,GAAiBsU,WACf9B,GA8IH0G,G,oDA1IX,WAAYnX,GAAmB,IAAD,+BAC1B,cAAMA,IAeVoX,mBAhB8B,IAmB9BC,kBAnB8B,wBAmBV,6BAAA3U,EAAA,sEACQwI,GAAY5H,GAAWsI,OAD/B,cACV0L,EADU,OAEhB,EAAKC,SAASD,GAGT3U,OAAeC,SAAS4U,IACxB7U,OAAeC,SAAS4U,GAAG,kBAAmB,EAAKC,qBANxC,gBASmB,EAAKC,MAAM7U,KAAKsE,IAAIiE,IAAIuM,iBAT3C,yBASAC,YATA,WASXL,SATW,gBAahB,EAAKH,cAAgB1H,aAAY,WAC7B,EAAKmI,cAAcjG,MAAK,WACpB,EAAK2F,SAAS,CAAEnG,WAAW,SAEhC,KAjBa,4CAnBU,EAuC9B0G,qBAAuB,WACnBnI,cAAc,EAAKyH,eACnB7T,MAzC0B,EA6C9BkU,oBAAsB,WAElB9U,OAAOqB,SAASC,QAAO,IA/CG,EAkD9B4T,YAlD8B,wBAkDhB,6BAAAnV,EAAA,+EAGiB0F,GAAiB,EAAKsP,MAAM7U,KAAM,EAAK6U,MAAM3L,UAH9D,OAGA9B,EAHA,OAKN,EAAKsN,SAAS,CAAEQ,cAAe9N,IALzB,gDAON,EAAKsN,SAAS,CAAE3T,MAAK,OAPf,yDAlDgB,EA6D9BpB,aA7D8B,yCA6Df,WAAOwV,GAAP,UAAAtV,EAAA,6DACX,EAAK6U,SAAS,CAAEU,cAAc,IADnB,SAGLhM,GAAa+L,EAAc,EAAKN,MAAMtQ,SAAS,GAAI,EAAKsQ,MAAM3L,SAAU4K,MAHnE,OAKX,EAAKY,SAAS,CAAEU,cAAc,IALnB,2CA7De,sDAG1B,EAAKP,MAAQ,CACT7U,KAAM,GACNuE,SAAU,CAAC,IACX2E,SAAU,GACVqF,WAAW,EACXwG,YAAa,GACbK,cAAc,EACdF,cAAe,GACfnU,MAAO,KACPsU,kBAAkB,GAZI,E,sDAsE1B,OACI,kBAAC,IAAD,KACI,kBAACje,EAAD,MACA,kBAAC,IAAD,KA3FgB,WAC5B,IAAMwW,EAAM1S,MACPC,MACAuU,UAGL,OAFczU,EAAmByU,WAEjB9B,EAsFC0H,GACGpT,KAAK2S,MAAMtG,UACP,kBAAC,IAAD,CAAYqD,QAAQ,EAAM7H,QAAS,oDAEnC,oCACK7H,KAAK2S,MAAMO,aACR,kBAAC,IAAD,CACIxD,OAAQ1P,KAAK2S,MAAMO,aACnBrL,QAAS,8BAGb,qCAGJ,kBAAC,EAAD,CAAavQ,SAAS,MAClB,kBAAC,GAAD,CACIgW,QAASpU,GACTmU,UAAWtU,EACX6L,SAAU5E,KAAK2S,MAAMK,gBAExBb,KACG,oCACI,kBAACta,EAAA,EAAD,MACA,kBAAC,GAAD,CACI+M,SAAU5E,KAAK2S,MAAMK,cACrBlV,KAAMkC,KAAK2S,MAAM7U,QAIzB,sCAGR,kBAAC,GAAD,CAAiB8G,SAAU5E,KAAK2S,MAAMK,gBACrCb,KACG,qCAEA,kBAAC,GAAD,CAAcxW,MAAM,MAAMC,SAAUoE,KAAKvC,aAAc9H,YArK7E,2sBAwKkB,kBAAC,GAAD,CACImI,KAAMkC,KAAK2S,MAAM7U,KACjBqL,iBAAkBnJ,KAAK2S,MAAM3L,SAC7B3E,SAAUrC,KAAK2S,MAAMtQ,SACrBuC,SAAU5E,KAAK2S,MAAMK,iBAKjC,oCACI,kBAAC,EAAD,CAAa1b,SAAS,MAClB,kBAAC,GAAD,CACIgW,QAASpU,GACTmU,UAAWtU,EACX6L,SAAU5E,KAAK2S,MAAMK,kBAKrC,kBAAC,EAAD,Y,GArIU3J,IAAMgK,WC/BpCzB,KAAMC,UAAU,CACZ9U,SAAU,YACV+U,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,I,IAmIAoB,G,oDA/HX,WAAYrY,GAAmB,IAAD,+BAC1B,cAAMA,IAgBVoX,mBAjB8B,IAoB9BC,kBApB8B,wBAoBV,6BAAA3U,EAAA,sEACQwI,GAAY5H,GAAWsI,OAD/B,cACV0L,EADU,OAEhB,EAAKC,SAASD,GAGT3U,OAAeC,SAAS4U,IACxB7U,OAAeC,SAAS4U,GAAG,kBAAmB,EAAKC,qBANxC,gBASmB,EAAKC,MAAM7U,KAAKsE,IAAIiE,IAAIuM,iBAT3C,yBASAC,YATA,WASXL,SATW,gBAWhB,EAAKH,cAAgB1H,aAAY,WAC7B,EAAKmI,cAAcjG,MAAK,WACpB,EAAK2F,SAAS,CAAEnG,WAAW,SAEhC,KAfa,4CApBU,EAsC9BkH,UAAY,WACR,MAAkC,SAA3B,EAAKZ,MAAME,aAvCQ,EA0C9BE,qBAAuB,WACnBnI,cAAc,EAAKyH,eACnB7T,MA5C0B,EAgD9BkU,oBAAsB,WAElB9U,OAAOqB,SAASC,QAAO,IAlDG,EAqD9B4T,YArD8B,wBAqDhB,6BAAAnV,EAAA,+EAGiB0F,GAAiB,EAAKsP,MAAM7U,KAAM,EAAK6U,MAAM3L,UAH9D,OAGA9B,EAHA,OAKN,EAAKsN,SAAS,CAAEQ,cAAe9N,IALzB,gDAON,EAAKsN,SAAS,CAAE3T,MAAK,OAPf,yDArDgB,EAgE9BpB,aAhE8B,yCAgEf,WAAOwV,GAAP,UAAAtV,EAAA,6DACX,EAAK6U,SAAS,CAAEU,cAAc,IADnB,SAGLhM,GAAa+L,EAAc,EAAKN,MAAMtQ,SAAS,GAAI,EAAKsQ,MAAM3L,SAAU4K,MAHnE,OAKX,EAAKY,SAAS,CAAEU,cAAc,IALnB,2CAhEe,sDAG1B,EAAKP,MAAQ,CACT7U,KAAM,GACNuE,SAAU,CAAC,IACX2E,SAAU,GACVqF,WAAW,EACXwG,YAAa,GACbK,cAAc,EACdF,cAAe,GACfnU,MAAO,KACPsU,kBAAkB,GAZI,E,sDAyE1B,OACI,kBAAC,IAAD,KACI,kBAACje,EAAD,MACA,kBAAC,IAAD,KACI,oCACK8K,KAAK2S,MAAMtG,UACR,kBAAC,IAAD,CAAYqD,QAAQ,EAAM7H,QAAS,oDAEnC,oCACK7H,KAAK2S,MAAMO,aACR,kBAAC,IAAD,CACIxD,OAAQ1P,KAAK2S,MAAMO,aACnBrL,QAAS,8BAGb,qCAGJ,oCACK7H,KAAKuT,YACF,oCACI,kBAAC,EAAD,CAAajc,SAAS,MAClB,kBAAClB,EAAA,EAAD,CAAYC,QAAQ,KAAKsB,UAAU,KAAKC,MAAM,UAA9C,4DAMR,oCACI,kBAAC,GAAD,CACI+D,MAAM,MACNC,SAAUoE,KAAKvC,aACf9H,YA/IlC,ysBAgJkCkG,OAAK,IAGT,kBAAC,GAAD,CACIiC,KAAMkC,KAAK2S,MAAM7U,KACjBqL,iBAAkBnJ,KAAK2S,MAAM3L,SAC7B3E,SAAUrC,KAAK2S,MAAMtQ,SACrBuC,SAAU5E,KAAK2S,MAAMK,oBAQjD,kBAAC,EAAD,Y,GA1HW3J,IAAMgK,W,oFC9B/BjgB,GAAYC,aAAW,SAAAC,GAAK,OAC9BC,YAAa,CACT+I,SAAU,CACNrF,QAAS3D,EAAMQ,QAAQ,EAAG,EAAG,IAEjCyI,SAAU,CACN1I,OAAQP,EAAMQ,QAAQ,IAE1B0I,UAAW,CACP3I,OAAQP,EAAMQ,QAAQ,IAE1B2I,UAAW,CACP/B,YAAapH,EAAMQ,QAAQ,GAC3BC,UAAW,GACXC,OAAQ,OACRC,cAAe,UAEnByI,QAAS,CACLjC,WAAY,OACZC,YAAa,aAKV,SAAS8Y,KACpB,IAAMre,EAAU/B,KADuB,EAGH0I,mBAAwBwC,GAAcmV,MAHnC,oBAGhCC,EAHgC,KAGpBC,EAHoB,KAKjCC,EAAY,yCAAG,6BAAAjW,EAAA,0DACbkW,eADa,gCAESC,KAAcC,WAAW,CAAEC,KAAM,gBAF1C,OAEPzO,EAFO,OAGbtH,QAAQC,IAAI,uBAAyBqH,EAAQqC,QAAU8L,GACvDC,EAAcrV,GAAc2V,QAJf,sBAMbhW,QAAQC,IAAI,6BANC,2CAAH,qDAkBlB,OACI,oCACI,kBAAC,IAAD,KACI,kBAAChJ,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,EAAD,CAAaoC,SAAS,MAClB,6BACI,kBAAClB,EAAA,EAAD,CAAYC,QAAQ,KAAKsB,UAAU,KAAKC,MAAM,UAA9C,oCAGA,kBAACxB,EAAA,EAAD,CAAYC,QAAQ,QAAQsB,UAAU,KAAKC,MAAM,UAAjD,aACe,IACX,kBAACpB,EAAA,EAAD,CACIrC,MAAM,UACNsC,KAAK,4HACLC,IAAI,sBACJC,OAAO,UAEP,yBAAKrB,IAAKuH,KAAgBrH,IAAI,GAAGJ,UAAWD,EAAQsH,eAKhE,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,2CACA,kBAAC,IAAD,iBAGJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAStE,QAAM,EAACgF,QAAS,kBAAMyW,KAAgB3Z,UAAQ,GACnD,kBAAC,IAAD,CAASpE,KAAMqe,KAAY7e,KAAK,UAChC,kBAAC,IAAD,6BAGJ,kBAAC,IAAD,CAAS8C,QAAM,EAACgF,QAAS,kBA3CjDc,QAAQC,IAAI,6BACZyV,EAAcrV,GAAc6V,SA0C2Cla,UAAQ,GACnD,kBAAC,IAAD,CAASpE,KAAMue,KAAY/e,KAAK,UAChC,kBAAC,IAAD,6BAGJ,kBAAC,IAAD,CAAS8C,QAAM,EAACgF,QAAS,kBA5CjDc,QAAQC,IAAI,sCACZyV,EAAcrV,GAAc+V,OA4CA,kBAAC,IAAD,CAASxe,KAAMye,KAASjf,KAAK,UAC7B,kBAAC,IAAD,mCAKhB,kBAAC,EAAD,S,qMCtBLkf,GAvFY,WACvB,OACI,oCACI,kBAAC,IAAD,CAASC,UAAU,QACf,kBAAC,IAAD,gBACA,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAe3Z,WAAW,cACtB,kBAAC,IAAD,CAAS1C,QAAM,EAACsc,QAAM,GAClB,kBAAC,IAAD,CAASnf,IAAKof,KAAUrf,KAAK,UAC7B,kBAAC,IAAD,gBAIZ,kBAAC,IAAD,KACI,kBAAC,IAAD,uBACCoE,GAAU1B,KAAI,SAACoI,EAAG4H,GAAJ,OACX,kBAAC,IAAD,CAAelN,WAAYsF,EAAEzG,IAAKzB,IAAK8P,GACnC,kBAAC,IAAD,CAAS5P,QAAM,EAACsc,QAAM,GAClB,kBAAC,IAAD,CAASnf,IAAK6K,EAAEtK,KAAMR,KAAK,UAC3B,kBAAC,IAAD,KAAW8K,EAAEjM,aAK7B,kBAAC,IAAD,KACI,kBAAC,IAAD,wBACC4F,GAAW/B,KAAI,SAACoI,EAAG4H,GAAJ,OACZ,kBAAC,IAAD,CAAelN,WAAYsF,EAAEzG,IAAKzB,IAAK8P,GACnC,kBAAC,IAAD,CAAS5P,QAAM,EAAC8B,UAAQ,EAACwa,QAAM,GAC3B,kBAAC,IAAD,CAASnf,IAAK6K,EAAEtK,KAAMR,KAAK,UAC3B,kBAAC,IAAD,KAAW8K,EAAEjM,aAmB7B,kBAAC,IAAD,KACI,kBAAC,IAAD,uBACC8F,GAAUjC,KAAI,SAACoI,EAAG4H,GAAJ,OACX,kBAAC,IAAD,CAAelN,WAAYsF,EAAEzG,IAAKzB,IAAK8P,GACnC,kBAAC,IAAD,CAAS5P,QAAM,EAACsc,QAAM,EAACxa,SAAUkG,EAAElG,UAC/B,kBAAC,IAAD,CAAS3E,IAAK6K,EAAEtK,KAAMR,KAAK,UAC3B,kBAAC,IAAD,KAAW8K,EAAEjM,aAM7B,kBAAC,IAAD,KACI,kBAAC,IAAD,uBACA,kBAAC,IAAD,CAASiE,QAAM,EAAC1B,KAAMhB,EAAegf,QAAM,GACvC,kBAAC,IAAD,CAASnf,IAAKqf,KAAStf,KAAK,UAC5B,kBAAC,IAAD,iBAEJ,kBAAC,IAAD,CAAS8C,QAAM,EAAC1B,KAAMhB,EAAgBgf,QAAM,GACxC,kBAAC,IAAD,CAASnf,IAAKsf,KAAUvf,KAAK,UAC7B,kBAAC,IAAD,kBAEJ,kBAAC,IAAD,CAAS8C,QAAM,EAAC1B,KAAMhB,EAAegf,QAAM,GACvC,kBAAC,IAAD,CAASnf,IAAKuf,KAASxf,KAAK,UAC5B,kBAAC,IAAD,iBAEJ,kBAAC,IAAD,CAAS8C,QAAM,EAAC1B,KAAMhB,EAAcgf,QAAM,GACtC,kBAAC,IAAD,CAASnf,IAAKwf,KAAQzf,KAAK,UAC3B,kBAAC,IAAD,qBCvCb0f,GApBO,WAClB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAcP,UAAU,OAAOQ,KAAK,MAChC,kBAAC,GAAD,MAEA,kBAAC,IAAD,CAAiB7M,GAAG,OAAO8M,UAAQ,GAC/B,kBAAC,IAAD,CAAOC,OAAK,EAAClB,KAAK,aAAarc,UAAWgD,KAC1C,kBAAC,IAAD,CAAOqZ,KAAK,mBAAmBrc,UAAWya,KAC1C,kBAAC,IAAD,CAAO4B,KAAK,uBAAuBrc,UAAW2b,KAC9C,kBAAC,IAAD,CAAOU,KAAK,uBAAuBrc,UAAW6b,KAC9C,kBAAC,IAAD,CAAO0B,OAAK,EAAClB,KAAK,IAAImB,OAAQ,kBAAM,kBAAC,IAAD,CAAUhI,GAAG,uBC3BrDiI,QACa,cAA7BxX,OAAOqB,SAASoW,UAEiB,UAA7BzX,OAAOqB,SAASoW,UAEhBzX,OAAOqB,SAASoW,SAASC,MAAM,2D,yBCFvC1X,OAAOoJ,SAAWpJ,OAAOoJ,UAAY,GACrCpJ,OAAOE,KAAOF,OAAOE,MAAQ,GAE7B,IAAMxK,GAAQiiB,aAAe,CACzBzgB,WAAY,CACR0gB,WAAY,CACR,YACA,gBACA,qBACA,WACA,SACA,SACA,SACA,YACA,YACA,aACA,kBACFC,KAAK,MAEX/M,QAAS,CACLrQ,QAAS,CACLqd,KAAM,UACNC,MAAO,UACPC,KAAM,cAKlBC,IAASV,OACL,kBAAC,KAAD,CAAkB7hB,MAAOA,IACrB,kBAAC,GAAD,OAEJyL,SAAS+W,eAAe,SDkFpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MAAMpJ,MAAK,SAAAqJ,GAC/BA,EAAaC,iB,oBErIzBjjB,EAAOC,QAAU,IAA0B,0C,o48ECA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,kCCA3C,wFAiBO,SAAS0gB,IACZ,IAQI,OAPAC,IAAcsC,KAAK,CACfC,SAAU,CACNC,MAAO,sBACPC,OAAQ,gCAEZC,OAAO,KAEJ,EACT,MAAOhb,GAEL,OADAyC,QAAQC,IAAI1C,IACL,M,4CC7BftI,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,yC,iFCA3C,IAAI4E,EAAM,CACT,2CAA4C,CAC3C,KACA,IAED,kCAAmC,CAClC,KACA,IAED,iCAAkC,CACjC,KACA,IAED,2BAA4B,CAC3B,KACA,IAED,0BAA2B,CAC1B,KACA,IAED,2BAA4B,CAC3B,KACA,IAED,0BAA2B,CAC1B,KACA,IAED,8BAA+B,CAC9B,KACA,IAED,6BAA8B,CAC7B,KACA,IAED,iCAAkC,CACjC,KACA,IAED,gCAAiC,CAChC,KACA,IAED,8BAA+B,CAC9B,KACA,IAED,6BAA8B,CAC7B,KACA,IAED,8BAA+B,CAC9B,KACA,IAED,6BAA8B,CAC7B,KACA,IAED,4BAA6B,CAC5B,KACA,IAED,2BAA4B,CAC3B,KACA,IAED,8BAA+B,CAC9B,KACA,IAED,6BAA8B,CAC7B,KACA,IAED,0BAA2B,CAC1B,KACA,IAED,yBAA0B,CACzB,KACA,IAED,uBAAwB,CACvB,KACA,IAED,gCAAiC,CAChC,KACA,IAED,+BAAgC,CAC/B,KACA,IAED,2BAA4B,CAC3B,KACA,IAED,0BAA2B,CAC1B,KACA,IAED,qBAAsB,CACrB,KACA,IAED,uCAAwC,CACvC,KACA,IAED,sCAAuC,CACtC,KACA,IAED,2BAA4B,CAC3B,KACA,IAED,0BAA2B,CAC1B,KACA,IAED,mCAAoC,CACnC,KACA,IAED,kCAAmC,CAClC,KACA,IAED,4BAA6B,CAC5B,KACA,IAED,2BAA4B,CAC3B,KACA,IAED,6BAA8B,CAC7B,KACA,IAED,4BAA6B,CAC5B,KACA,IAED,4BAA6B,CAC5B,KACA,IAED,2BAA4B,CAC3B,KACA,IAED,2BAA4B,CAC3B,KACA,IAED,0BAA2B,CAC1B,KACA,IAED,uBAAwB,CACvB,KACA,IAED,6BAA8B,CAC7B,KACA,IAED,4BAA6B,CAC5B,KACA,IAED,kCAAmC,CAClC,KACA,IAED,iCAAkC,CACjC,KACA,IAED,6BAA8B,CAC7B,KACA,IAED,4BAA6B,CAC5B,KACA,IAED,2BAA4B,CAC3B,KACA,IAED,0BAA2B,CAC1B,KACA,IAED,iCAAkC,CACjC,KACA,IAED,gCAAiC,CAChC,KACA,IAED,+BAAgC,CAC/B,KACA,IAED,8BAA+B,CAC9B,KACA,IAED,+BAAgC,CAC/B,KACA,IAED,yBAA0B,CACzB,KACA,IAED,+BAAgC,CAC/B,KACA,IAED,8BAA+B,CAC9B,KACA,IAED,+BAAgC,CAC/B,KACA,IAED,8BAA+B,CAC9B,KACA,IAED,8BAA+B,CAC9B,KACA,IAED,6BAA8B,CAC7B,KACA,IAED,6BAA8B,CAC7B,KACA,IAED,4BAA6B,CAC5B,KACA,IAED,yBAA0B,CACzB,KACA,IAED,gCAAiC,CAChC,KACA,IAED,+BAAgC,CAC/B,KACA,IAED,+BAAgC,CAC/B,KACA,IAED,8BAA+B,CAC9B,KACA,IAED,uBAAwB,CACvB,KACA,IAED,sBAAuB,CACtB,KACA,IAED,8BAA+B,CAC9B,KACA,IAED,6BAA8B,CAC7B,KACA,IAED,2BAA4B,CAC3B,KACA,IAED,0BAA2B,CAC1B,KACA,IAED,4BAA6B,CAC5B,KACA,IAED,2BAA4B,CAC3B,KACA,IAED,gCAAiC,CAChC,KACA,KAGF,SAAS0e,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAE7e,EAAK2e,GAC9B,OAAOjY,QAAQC,UAAUmO,MAAK,WAC7B,IAAIrR,EAAI,IAAIqb,MAAM,uBAAyBH,EAAM,KAEjD,MADAlb,EAAEsb,KAAO,mBACHtb,KAIR,IAAIub,EAAMhf,EAAI2e,GAAMvO,EAAK4O,EAAI,GAC7B,OAAOJ,EAAoBnb,EAAEub,EAAI,IAAIlK,MAAK,WACzC,OAAO8J,EAAoBxO,MAG7BsO,EAAoBO,KAAO,WAC1B,OAAOC,OAAOD,KAAKjf,IAEpB0e,EAAoBtO,GAAK,IACzBjV,EAAOC,QAAUsjB,G,oBC5UjB,IAAI1e,EAAM,CACT,sBAAuB,CACtB,KACA,KAGF,SAAS0e,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAE7e,EAAK2e,GAC9B,OAAOjY,QAAQC,UAAUmO,MAAK,WAC7B,IAAIrR,EAAI,IAAIqb,MAAM,uBAAyBH,EAAM,KAEjD,MADAlb,EAAEsb,KAAO,mBACHtb,KAIR,IAAIub,EAAMhf,EAAI2e,GAAMvO,EAAK4O,EAAI,GAC7B,OAAOJ,EAAoBnb,EAAEub,EAAI,IAAIlK,MAAK,WACzC,OAAO8J,EAAoBxO,MAG7BsO,EAAoBO,KAAO,WAC1B,OAAOC,OAAOD,KAAKjf,IAEpB0e,EAAoBtO,GAAK,IACzBjV,EAAOC,QAAUsjB,G","file":"static/js/main.6d2c4c17.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ethereum_logo.802c6eac.svg\";","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { IonHeader, IonButtons, IonMenuButton, IonToolbar, IonTitle } from '@ionic/react';\nimport plasmLogo from '../resources/plasm-logo.png';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        grow: {\n            flexGrow: 1,\n        },\n        navbar: {\n            backgroundColor: 'black',\n        },\n        logoIcon: {\n            margin: theme.spacing(1),\n            maxHeight: 45,\n            height: '100%',\n            verticalAlign: 'middle',\n        },\n        title: {\n            color: 'white',\n        },\n        inputRoot: {\n            color: 'inherit',\n        },\n        sectionDesktop: {\n            display: 'none',\n            [theme.breakpoints.up('md')]: {\n                display: 'flex',\n            },\n        },\n        sectionMobile: {\n            display: 'flex',\n            [theme.breakpoints.up('md')]: {\n                display: 'none',\n            },\n        },\n        listItem: {\n            width: '100%',\n        },\n        heading: {\n            fontSize: theme.typography.pxToRem(15),\n            fontWeight: theme.typography.fontWeightRegular,\n        },\n    }),\n);\n\nexport default function Navbar() {\n    const classes = useStyles();\n\n    return (\n        <>\n            <IonHeader className={classes.navbar}>\n                <IonToolbar color=\"black\">\n                    <IonButtons slot=\"start\">\n                        <IonMenuButton className={classes.title} />\n                        <img className={classes.logoIcon} src={plasmLogo} alt=\"\" />\n                    </IonButtons>\n                    <IonTitle className={classes.title}>Plasm Network</IonTitle>\n                </IonToolbar>\n            </IonHeader>\n        </>\n    );\n}\n","export const Links = {\n    docs: 'https://docs.plasmnet.io',\n    blog: 'https://medium.com/stake-technologies',\n    twitter: 'https://twitter.com/Plasm_Network',\n    github: 'https://github.com/staketechnologies/Plasm',\n    telegram: 'https://t.me/PlasmOfficial',\n    discord: 'https://discordapp.com/invite/Dnfn5eT',\n    email: 'info@stake.co.jp',\n    home: 'https://stake.co.jp/',\n    plasmHome: 'https://plasmnet.io/',\n};\n\nexport const SponsorLinks = {\n    cryptoEconomicsLab: 'https://www.cryptoeconomicslab.com/',\n    parityTechnologies: 'https://www.parity.io/',\n    web3Foundation: 'https://web3.foundation/',\n    longhash: 'https://longhash.co.jp/en/',\n    universityOfTokyo: 'https://www.u-tokyo.ac.jp/en/index.html',\n    connect: 'https://www.blockchain.t.u-tokyo.ac.jp/',\n    parityBuilders: 'https://builders.parity.io/',\n    acala: 'https://acala.network/',\n};\n\nexport const BlogLinks = {\n    lockdropIntroduction: 'https://medium.com/stake-technologies/plasm-lockdrop-introduction-54614592a13',\n};\n\nexport const AppLinks = {\n    plasmnetIo: 'https://apps.plasmnet.io/',\n    polkadotNetwork: 'https://telemetry.polkadot.io/#list/Plasm%20Testnet%20v3',\n    joinLockdrop: 'https://lockdrop.plasmnet.io',\n    inkPlayground: 'https://ink-playground.com/',\n};\n\nexport const Whitepaper = [\n    {\n        description: 'English',\n        link: 'https://github.com/stakedtechnologies/plasmdocs/blob/master/wp/en.pdf',\n        icon: `sticky note outline`,\n    },\n    {\n        description: 'Japanese',\n        link: 'https://github.com/stakedtechnologies/plasmdocs/blob/master/wp/jp.pdf',\n        icon: `sticky note outline`,\n    },\n];\n\nexport const Community = [\n    {\n        description: 'Discord',\n        link: Links.discord,\n        icon: 'discord',\n    },\n    {\n        description: 'Telegram',\n        link: Links.telegram,\n        icon: 'telegram',\n    },\n];\n\nexport const Company = [\n    {\n        description: 'Home',\n        link: Links.home,\n    },\n    {\n        description: 'Contact us',\n        link: `mailto:${Links.email}`,\n    },\n];\n\nexport const Products = [\n    {\n        description: 'Plasm',\n        link: 'https://github.com/staketechnologies/Plasm',\n    },\n    {\n        description: 'Plasm Portal Sites',\n        link: 'https://github.com/staketechnologies/apps',\n    },\n    {\n        description: 'Plasm Lockdrop',\n        link: 'https://github.com/staketechnologies/lockdrop-ui',\n    },\n    {\n        description: 'Plasm documentations',\n        link: 'https://github.com/staketechnologies/plasmdocs',\n    },\n    {\n        description: 'Plasm homepage',\n        link: 'https://github.com/staketechnologies/plasmnet.io',\n    },\n];\n\nexport const Collaboration = [\n    {\n        description: 'Substrate Builders Program',\n        link: 'https://builders.parity.io/',\n    },\n    {\n        description: 'Web3 foundation grants program',\n        link: 'https://web3.foundation/',\n    },\n];\n\nexport const Blogs = [\n    {\n        description: 'Medium',\n        link: Links.blog,\n    },\n];\n\nexport const Discussions = [\n    {\n        link: Links.discord,\n        className: 'discord',\n    },\n    {\n        link: Links.telegram,\n        className: 'telegram',\n    },\n    {\n        link: Links.twitter,\n        className: 'twitter',\n    },\n    {\n        link: Links.github,\n        className: 'github',\n    },\n];\n","export const ThemeColors = {\n    darkGrey: '#383838',\n    lightGrey: '#999999',\n    white: '#ffffff',\n    black: '#000000',\n    darkBlue: '#2C3E50',\n    orange: '#FF5838',\n    darkRed: '#5c0f0f',\n    blue: '#4C8DFF',\n    lightBlue: '#56ccf2',\n};\n\nexport const ThemeFontFamily = {\n    logo: 'sans',\n    paragraph: 'not sans',\n};\n\nconst colors = {\n    transparent: 'rgba(0, 0, 0, 0)',\n    footerTransparent: 'rgba(0, 0, 0, 0.12)',\n    navy: '#1d417f',\n    ceruleanBlue: '#102e83',\n    blue: '#2179ee',\n    lightBlue: '#56ccf2',\n    periwinkle: '#D4D3E9',\n    teal: '#00FFD1',\n    green: '#28D24E',\n    crimson: '#DC143C',\n    red: '#D22828',\n    lightRed: '#ED0257',\n    coral: '#ff6759',\n    pink: '#FF17E8',\n    gold: '#f0b95b',\n    yellow: '#FFC700',\n    purple: '#7537ef',\n    lightPurple: '#56408B',\n    darkPurple: 'rgba(10, 7, 82, 0.75)',\n    softPurple: '#9795C5',\n    white: '#ffffff',\n    creamWhite: '#f4f5f7',\n    black: '#000000',\n    grey: '#333333',\n    lightGrey: 'grey',\n    softGrey: '#1D1B4D',\n    slaty: '#797992',\n    lavender: '#e5e5f8',\n    rat: '#cecddc',\n};\n\nconst secondaryColors = {\n    grey10: '#f3f4f8',\n    grey20: '#e1e5eb',\n    grey30: '#c2c6cc',\n    grey40: '#9ea2a8',\n    grey50: '#686c73',\n    grey60: '#30363d',\n    blue10: '#ade7ff',\n    blue20: '#61bcff',\n    blue30: '#2179ee',\n    blue40: '#1f4ab4',\n    blue50: '#1d2064',\n    green10: '#b5ffcb',\n    green20: '#5dffa3',\n    green30: '#00cc9a',\n    green40: '#219a8a',\n    green50: '#183f51',\n    purple10: '#dec7ff',\n    purple20: '#a673ff',\n    purple30: '#7537ef',\n    purple40: '#4e23b6',\n    purple50: '#2d1b64',\n    coral10: '#ffc6b3',\n    coral20: '#ff8e75',\n    coral30: '#ff6759',\n    coral40: '#eb312a',\n    coral50: '#7b1e30',\n    gold10: '#ffedc2',\n    gold20: '#ffda8b',\n    gold30: '#f0b95b',\n    gold40: '#e5a229',\n    gold50: '#6a4a24',\n};\n\nconst breakpoints = ['31.25em', '43.75em', '46.875em'];\nconst fontSizes = ['1.2rem', '1.4rem', '1.6rem', '1.8rem', '2.4rem', '2.8rem', '3.2rem', '4.0rem', '4.8rem', '6.4rem'];\nconst space = ['0', '.4rem', '.8rem', '1.2rem', '1.6rem', '2.0rem', '3.2rem', '4.8rem', '6.4rem', '9.6rem'];\n\nconst font =\n    'Work Sans, sans-serif, -apple-system, BlinkMacSystemFont,\"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\",\"Droid Sans\", \"Helvetica Neue\";-webkit-font-smoothing: antialiased;-moz-osx-font-smoothing: grayscale;';\n\nexport interface StyleClosetTheme {\n    breakpoints: string[];\n    fontSizes: string[];\n    space: string[];\n    colors: { [key in keyof typeof colors]: string };\n    secondaryColors: { [key in keyof typeof secondaryColors]: string };\n    font: string;\n}\n\nexport const theme: StyleClosetTheme = {\n    breakpoints,\n    fontSizes,\n    space,\n    colors,\n    secondaryColors,\n    font,\n};\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport { Company, Products, Collaboration, Blogs, Community } from '../data/links';\nimport Divider from '@material-ui/core/Divider';\nimport { ThemeColors } from '../theme/themes';\n\nfunction Copyright() {\n    return (\n        <>\n            <Typography variant=\"body2\">\n                {'© 2019-' + new Date().getFullYear() + ' '}\n                <Link color=\"inherit\" href=\"https://stake.co.jp/\" rel=\"noopener noreferrer\" target=\"_blank\">\n                    Stake Technologies, Inc.\n                </Link>{' '}\n                {'All Rights Reserved.'}\n            </Typography>\n        </>\n    );\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop: theme.spacing(10),\n    },\n    socialIcon: {\n        color: 'white',\n        fontSize: 60,\n        paddingLeft: theme.spacing(1),\n    },\n    footer: {\n        padding: theme.spacing(2),\n        backgroundColor: 'white',\n        color: 'black',\n    },\n    footerHeader: {\n        color: ThemeColors.darkBlue,\n    },\n    siteMap: {},\n}));\n\nexport default function StickyFooter() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <footer className={classes.footer}>\n                <Container maxWidth=\"lg\">\n                    <Grid container spacing={4} justify=\"center\" className={classes.siteMap}>\n                        <Grid item>\n                            <Typography variant=\"body1\" component=\"h1\" align=\"center\" className={classes.footerHeader}>\n                                Company\n                            </Typography>\n                            <Divider />\n\n                            <List component=\"nav\">\n                                {Company.map(company => (\n                                    <Link\n                                        color=\"inherit\"\n                                        href={company.link}\n                                        key={company.description}\n                                        rel=\"noopener noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        <ListItem button>\n                                            <ListItemText primary={company.description} />\n                                        </ListItem>\n                                    </Link>\n                                ))}\n                            </List>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"body1\" component=\"h1\" align=\"center\" className={classes.footerHeader}>\n                                Repositories\n                            </Typography>\n                            <Divider />\n                            <List component=\"nav\">\n                                {Products.map(product => (\n                                    <Link\n                                        color=\"inherit\"\n                                        href={product.link}\n                                        key={product.description}\n                                        rel=\"noopener noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        <ListItem button>\n                                            <ListItemText primary={product.description} />\n                                        </ListItem>\n                                    </Link>\n                                ))}\n                            </List>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"body1\" component=\"h1\" align=\"center\" className={classes.footerHeader}>\n                                Collaboration\n                            </Typography>\n                            <Divider />\n                            <List component=\"nav\">\n                                {Collaboration.map(collaboration => (\n                                    <Link\n                                        color=\"inherit\"\n                                        href={collaboration.link}\n                                        key={collaboration.description}\n                                        rel=\"noopener noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        <ListItem button>\n                                            <ListItemText primary={collaboration.description} />\n                                        </ListItem>\n                                    </Link>\n                                ))}\n                            </List>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"body1\" component=\"h1\" align=\"center\" className={classes.footerHeader}>\n                                Blog\n                            </Typography>\n                            <Divider />\n                            <List component=\"nav\">\n                                {Blogs.map(blog => (\n                                    <Link\n                                        color=\"inherit\"\n                                        href={blog.link}\n                                        key={blog.description}\n                                        rel=\"noopener noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        <ListItem button>\n                                            <ListItemText primary={blog.description} />\n                                        </ListItem>\n                                    </Link>\n                                ))}\n                            </List>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"body1\" component=\"h1\" align=\"center\" className={classes.footerHeader}>\n                                Community\n                            </Typography>\n                            <Divider />\n                            <List component=\"nav\">\n                                {Community.map(community => (\n                                    <Link\n                                        color=\"inherit\"\n                                        href={community.link}\n                                        key={community.description}\n                                        rel=\"noopener noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        <ListItem button>\n                                            <ListItemText primary={community.description} />\n                                        </ListItem>\n                                    </Link>\n                                ))}\n                            </List>\n                        </Grid>\n                    </Grid>\n                </Container>\n\n                <Container maxWidth=\"sm\">\n                    <Typography variant=\"body1\" component=\"h1\" align=\"center\" className={classes.footerHeader}>\n                        <Copyright />\n                    </Typography>\n                </Container>\n            </footer>\n        </div>\n    );\n}\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { ThemeColors } from '../theme/themes';\n\ninterface Props {\n    maxWidth: false | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | undefined;\n}\n\nconst SectionCard: React.FC<Props> = ({ maxWidth, children }) => {\n    const useStyles = makeStyles(theme => ({\n        paper: {\n            backgroundColor: ThemeColors.white,\n            padding: theme.spacing(4, 0, 4),\n            margin: theme.spacing(1),\n        },\n    }));\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Container maxWidth={maxWidth}>\n                <Paper elevation={5} className={classes.paper}>\n                    {children}\n                </Paper>\n            </Container>\n        </>\n    );\n};\n\nexport default SectionCard;\n","import { OptionItem, LockMenu } from '../models/LockdropModels';\nimport moment from 'moment';\nimport ethLogo from '../resources/ethereum_logo.svg';\nimport btcLogo from '../resources/bitcoin_logo.svg';\n\n// the time zone is set to UTC as default\n// lockdrop starts from 1584230400 epoch time\nexport const firstLockdropStart = moment.utc('2020-03-15 00:00:00');\n// the 1st lockdrop will last for 30 days\n// lockdrop ends in 1586822400\nexport const firstLockdropEnd = moment.utc('2020-04-14 00:00:00');\n\n// todo: the second lockdrop dates are just a temporary value\nexport const secondLockdropStart = moment.utc('2020-08-10 00:00:00');\n\nexport const secondLockdropEnd = moment.utc('2020-09-10 00:00:00');\n\n// used to define the content of the dropdown menu\nexport const durations: OptionItem[] = [\n    { label: '30 Days', value: 30 },\n    { label: '100 Days', value: 100 },\n    { label: '300 Days', value: 300 },\n    { label: '1000 Days', value: 1000 },\n];\n\n// the token increase rate for lock durations\nexport const rates = [\n    { key: 30, value: 24 },\n    { key: 100, value: 100 },\n    { key: 300, value: 360 },\n    { key: 1000, value: 1600 },\n];\n\nexport const firstLock: LockMenu[] = [\n    {\n        title: 'ETH Lock',\n        uri: '/lock-form/first',\n        icon: ethLogo,\n        startDate: firstLockdropStart,\n        endDate: firstLockdropEnd,\n    },\n];\n\nexport const secondLock: LockMenu[] = [\n    {\n        title: 'ETH Lock',\n        uri: '/lock-form/first',\n        icon: ethLogo,\n        startDate: secondLockdropStart,\n        endDate: secondLockdropEnd,\n    },\n    {\n        title: 'BTC Lock',\n        uri: '/lock-form/first',\n        icon: btcLogo,\n        startDate: secondLockdropStart,\n        endDate: secondLockdropEnd,\n    },\n];\n\nexport const dustyLock: LockMenu[] = [\n    {\n        title: 'ETH Lock',\n        uri: '/lock-form/dusty-eth',\n        icon: ethLogo,\n        startDate: firstLockdropStart,\n        endDate: firstLockdropEnd,\n        disabled: true,\n    },\n    {\n        title: 'BTC Lock',\n        uri: '/lock-form/dusty-btc',\n        icon: btcLogo,\n        startDate: firstLockdropStart,\n        endDate: firstLockdropEnd,\n        disabled: true,\n    },\n];\n","import React from 'react';\nimport {\n    IonContent,\n    IonPage,\n    IonCardHeader,\n    IonCardSubtitle,\n    IonCardTitle,\n    IonCardContent,\n    IonItem,\n    IonIcon,\n    IonLabel,\n    IonButton,\n    IonRouterLink,\n} from '@ionic/react';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport SectionCard from '../components/SectionCard';\nimport lockdropLogoA from '../resources/ld_logo_a.png';\nimport lockdropLogoB from '../resources/ld_logo_b.png';\nimport ethLogo from '../resources/ethereum_logo.svg';\nimport btcLogo from '../resources/bitcoin_logo.svg';\nimport { makeStyles } from '@material-ui/core';\nimport { firstLockdropStart, firstLockdropEnd } from '../data/lockInfo';\n\n// randomize the lockdrop logo\n// this is for AB testing the logo\nconst lockdropLogo = Math.floor(Math.random() * 10) > 5 ? lockdropLogoA : lockdropLogoB;\n\nconst useStyles = makeStyles(() => ({\n    logoImg: {\n        display: 'block',\n        maxWidth: '100%',\n        width: '20rem',\n        height: 'auto',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        //maxHeight: '500',\n    },\n}));\n\nexport const LandingPage: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <IonPage>\n            <Navbar />\n            <IonContent>\n                <SectionCard maxWidth=\"lg\">\n                    <img src={lockdropLogo} alt=\"\" className={classes.logoImg} />\n                    <IonCardHeader>\n                        <IonCardSubtitle>Plasm Network Lockdrop Web Application</IonCardSubtitle>\n                        <IonCardTitle>Plasm Network Lockdrop</IonCardTitle>\n                    </IonCardHeader>\n                    <IonCardContent>\n                        Lockdrop is a new token distribution mechanism that emphasizes on low risk and fairness to its\n                        users. For more details, checkout{' '}\n                        <a\n                            color=\"inherit\"\n                            href=\"https://medium.com/stake-technologies/what-is-and-how-to-join-the-plasm-network-lockdrop-the-ultimate-guide-e3f4bdec83de\"\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                        >\n                            this\n                        </a>{' '}\n                        article,\n                    </IonCardContent>\n                </SectionCard>\n\n                <SectionCard maxWidth=\"lg\">\n                    <IonCardHeader>\n                        <IonCardTitle>First Lockdrop</IonCardTitle>\n                    </IonCardHeader>\n                    <IonItem>\n                        <IonIcon src={ethLogo} slot=\"start\" />\n                        <IonLabel>Plasm ETH Lock</IonLabel>\n\n                        <IonButton fill=\"outline\" slot=\"end\">\n                            <IonRouterLink routerLink=\"/lock-form/first\">View</IonRouterLink>\n                        </IonButton>\n                    </IonItem>\n\n                    <IonCardContent>\n                        Lock Start: {firstLockdropStart.format('YYYY-MM-DD hh:mm').toString()} UTC\n                        <br />\n                        Lock End: {firstLockdropEnd.format('YYYY-MM-DD hh:mm').toString()} UTC\n                    </IonCardContent>\n                </SectionCard>\n\n                <SectionCard maxWidth=\"lg\">\n                    <IonCardHeader>\n                        <IonCardTitle>Second Lockdrop</IonCardTitle>\n                    </IonCardHeader>\n                    <IonItem>\n                        <IonIcon src={ethLogo} slot=\"start\" />\n                        <IonLabel>Plasm ETH Lock</IonLabel>\n                        <IonButton fill=\"outline\" slot=\"end\" disabled={true}>\n                            View\n                        </IonButton>\n                    </IonItem>\n\n                    <IonItem>\n                        <IonIcon src={btcLogo} slot=\"start\" />\n                        <IonLabel>Plasm BTC Lock</IonLabel>\n                        <IonButton fill=\"outline\" slot=\"end\" disabled={true}>\n                            View\n                        </IonButton>\n                    </IonItem>\n                    <IonCardContent>\n                        Lock Start: TBA\n                        <br />\n                        Lock End: TBA\n                    </IonCardContent>\n                </SectionCard>\n\n                <SectionCard maxWidth=\"lg\">\n                    <IonCardHeader>\n                        <IonCardTitle>Dusty Lockdrop</IonCardTitle>\n                    </IonCardHeader>\n                    <IonItem>\n                        <IonIcon src={ethLogo} slot=\"start\" />\n                        <IonLabel>Dusty ETH Lock</IonLabel>\n\n                        <IonButton fill=\"outline\" slot=\"end\" disabled>\n                            <IonRouterLink routerLink=\"/lock-form/dusty-eth\">View</IonRouterLink>\n                        </IonButton>\n                    </IonItem>\n                    <IonItem>\n                        <IonIcon src={btcLogo} slot=\"start\" />\n                        <IonLabel>Dusty BTC Lock</IonLabel>\n\n                        <IonButton fill=\"outline\" slot=\"end\" disabled>\n                            <IonRouterLink routerLink=\"/lock-form/dusty-btc\">View</IonRouterLink>\n                        </IonButton>\n                    </IonItem>\n                </SectionCard>\n                <Footer />\n            </IonContent>\n        </IonPage>\n    );\n};\n\nexport default LandingPage;\n","import { IonSelect, IonSelectOption } from '@ionic/react';\nimport React from 'react';\nimport { OptionData } from '../models/LockdropModels';\n\n// react function component for making dropdown with the given items\nexport const DropdownOption = (props: OptionData) => {\n    const items = props.dataSets.map(x => {\n        return (\n            <IonSelectOption className=\"dropdown-item\" key={props.dataSets.indexOf(x)} value={x.value}>\n                {x.label}\n            </IonSelectOption>\n        );\n    });\n\n    return (\n        <IonSelect interface=\"popover\" onIonChange={e => props.onChoose(e)}>\n            {items}\n        </IonSelect>\n    );\n};\n","import { IonLabel, IonButton, IonItem, IonInput, IonCard, IonCardContent, IonChip } from '@ionic/react';\nimport React, { useState } from 'react';\nimport { LockInput } from '../../models/LockdropModels';\nimport SectionCard from '../SectionCard';\nimport { DropdownOption } from '../DropdownOption';\nimport Container from '@material-ui/core/Container';\nimport BN from 'bn.js';\nimport { Typography } from '@material-ui/core';\nimport quantstampLogo from '../../resources/quantstamp-logo.png';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport parse from 'html-react-parser';\nimport { durations, rates } from '../../data/lockInfo';\n\ntype InputProps = {\n    token: string;\n    onSubmit: Function;\n    description?: string;\n    dusty?: boolean;\n};\n// the main component function\nconst LockdropForm = ({ token, onSubmit, description, dusty }: InputProps) => {\n    // states used in this component\n    const [lockAmount, setAmount] = useState<BN>(new BN(0));\n    const [lockDuration, setDuration] = useState(0);\n    const [affAccount, setAff] = useState('');\n\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            formRoot: {\n                padding: theme.spacing(4, 3, 0),\n            },\n            txButton: {\n                margin: theme.spacing(3),\n            },\n            formLabel: {\n                margin: theme.spacing(2),\n            },\n            quantLogo: {\n                marginRight: theme.spacing(2),\n                maxHeight: 20,\n                height: '100%',\n                verticalAlign: 'middle',\n            },\n            textBox: {\n                marginLeft: 'auto',\n                marginRight: 'auto',\n            },\n        }),\n    );\n\n    const classes = useStyles();\n\n    function getTokenRate() {\n        if (lockDuration) {\n            return rates.filter(x => x.key === lockDuration)[0].value;\n        }\n        return 0;\n    }\n\n    // the submit button function\n    function handleSubmit() {\n        const inputs: LockInput = {\n            duration: lockDuration,\n            amount: lockAmount,\n            affiliation: affAccount,\n            rate: getTokenRate(),\n        };\n        onSubmit(inputs);\n    }\n\n    // main render JSX\n    return (\n        <>\n            <SectionCard maxWidth=\"lg\">\n                <div className={classes.formRoot}>\n                    <Typography variant=\"h4\" component=\"h1\" align=\"center\">\n                        {dusty ? 'Dusty Plasm' : 'Plasm Main'} Network Ethereum Lockdrop\n                    </Typography>\n                    <Typography variant=\"body2\" component=\"h2\" align=\"center\">\n                        Audited by{' '}\n                        <Link\n                            color=\"inherit\"\n                            href=\"https://github.com/staketechnologies/lockdrop-ui/blob/16a2d495d85f2d311957b9cf366204fbfabadeaa/audit/quantstamp-audit.pdf\"\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                        >\n                            <img src={quantstampLogo} alt=\"\" className={classes.quantLogo} />\n                        </Link>\n                    </Typography>\n                    {/* <IonLabel className={classes.formLabel}>About</IonLabel> */}\n                    {description ? (\n                        <IonCard className={classes.textBox}>\n                            <IonCardContent>{parse(description)}</IonCardContent>\n                        </IonCard>\n                    ) : (\n                        <div></div>\n                    )}\n\n                    <IonItem>\n                        <IonLabel position=\"floating\">Number of {token}</IonLabel>\n                        <IonInput\n                            placeholder={'ex: 0.64646 ' + token}\n                            onIonInput={e => setAmount(((e.target as HTMLInputElement).value as unknown) as BN)}\n                        ></IonInput>\n                    </IonItem>\n                    <IonLabel className={classes.formLabel}>Lock Duration</IonLabel>\n                    <IonItem>\n                        <DropdownOption\n                            dataSets={durations}\n                            onChoose={(e: React.ChangeEvent<HTMLInputElement>) =>\n                                setDuration((e.target.value as unknown) as number)\n                            }\n                        ></DropdownOption>\n                        <IonChip>\n                            <IonLabel>\n                                {lockDuration ? 'The rate is ' + getTokenRate() + 'x' : 'Please choose the duration'}\n                            </IonLabel>\n                        </IonChip>\n                    </IonItem>\n\n                    <IonItem>\n                        <IonCard className={classes.textBox}>\n                            <IonCardContent>\n                                If you have a friend who is also participating in the lockdrop and is part of our\n                                affiliation program, please input the address. Both parties will be able to receive a\n                                bonus rate of 1% of what the friend is receiving. Checkout this{' '}\n                                <a href=\"https://medium.com/stake-technologies/lockdrop-with-friends-the-plasm-network-affiliation-program-b385c1cd800d\">\n                                    article\n                                </a>{' '}\n                                for details.\n                            </IonCardContent>\n                        </IonCard>\n                        <IonLabel position=\"floating\">Affiliation (optional)</IonLabel>\n\n                        <IonInput\n                            placeholder={'ex: 0x324632...'}\n                            onIonInput={e => setAff((e.target as HTMLInputElement).value)}\n                        ></IonInput>\n                    </IonItem>\n                    <Container>\n                        <IonButton expand=\"block\" onClick={() => handleSubmit()} className={classes.txButton}>\n                            Submit Transaction\n                        </IonButton>\n                    </Container>\n                </div>\n            </SectionCard>\n        </>\n    );\n};\n\nexport default LockdropForm;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Web3 from 'web3';\n\nasync function web3Listener() {\n    // Modern dapp browsers...\n    if ((window as any).ethereum) {\n        const web3 = new Web3((window as any).ethereum);\n        try {\n            // Request account access if needed\n            await (window as any).ethereum.enable();\n            console.log('Dapp browser detected');\n            // Accounts now exposed\n            return web3;\n        } catch (error) {\n            return error;\n        }\n    }\n    // Legacy dapp browsers...\n    else if ((window as any).web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = (window as any).web3;\n        console.log('Injected web3 detected.');\n        return web3;\n    }\n    // Fallback to localhost; use dev console port by default...\n    else {\n        const provider = new Web3.providers.HttpProvider('http://127.0.0.1:8545');\n        const web3 = new Web3(provider);\n        console.log('No web3 instance injected, using Local web3.');\n        return web3;\n    }\n}\n\n// const getWeb3 = () =>\n//     new Promise((resolve, reject) => {\n//         // Wait for loading completion to avoid race conditions with web3 injection timing.\n//         window.addEventListener('load', async () => {\n//             // Modern dapp browsers...\n//             if ((window as any).ethereum) {\n//                 const web3 = new Web3((window as any).ethereum);\n//                 try {\n//                     // Request account access if needed\n//                     await (window as any).ethereum.enable();\n//                     console.log('Dapp browser detected');\n//                     // Accounts now exposed\n//                     resolve(web3);\n//                 } catch (error) {\n//                     reject(error);\n//                 }\n//             }\n//             // Legacy dapp browsers...\n//             else if ((window as any).web3) {\n//                 // Use Mist/MetaMask's provider.\n//                 const web3 = (window as any).web3;\n//                 console.log('Injected web3 detected.');\n//                 resolve(web3);\n//             }\n//             // Fallback to localhost; use dev console port by default...\n//             else {\n//                 const provider = new Web3.providers.HttpProvider('http://127.0.0.1:8545');\n//                 const web3 = new Web3(provider);\n//                 console.log('No web3 instance injected, using Local web3.');\n//                 resolve(web3);\n//             }\n//         });\n//     });\n\nexport const removeWeb3Event = () => {\n    new Promise((resolve, reject) => {\n        try {\n            window.removeEventListener('load', () => resolve(web3Listener()));\n        } catch (error) {\n            reject(error);\n        }\n    });\n};\n\nconst getWeb3 = () =>\n    new Promise((resolve, reject) => {\n        // check if the event was already fired\n        if (document.readyState === 'complete') {\n            // reload page to reset the event\n            window.location.reload();\n        }\n\n        // Wait for loading completion to avoid race conditions with web3 injection timing.\n        try {\n            window.addEventListener('load', () => resolve(web3Listener()));\n        } catch (error) {\n            reject(error);\n        }\n    });\n\nexport default getWeb3;\n","import BN from 'bn.js';\nimport { Moment } from 'moment';\n\nexport interface LockInput {\n    duration: number;\n    amount: BN;\n    affiliation: string;\n    rate: number;\n}\n\nexport enum BtcWalletType {\n    Trezor,\n    Ledger,\n    Raw,\n    None,\n}\n\nexport interface UnspentTx {\n    value: number;\n    txId: string;\n    vout: number;\n    address?: string;\n    height?: number;\n}\n\nexport interface LockMenu {\n    uri: string;\n    icon: string;\n    title: string;\n    startDate: Moment;\n    endDate: Moment;\n    disabled?: boolean;\n}\n\nexport interface TimeFormat {\n    days: number;\n    hours: number;\n    minutes: number;\n    seconds: number;\n}\n\nexport enum LockSeason {\n    First,\n    Second,\n}\n\nexport interface LockEvent {\n    eth: BN; // this uses BN.js instead of BigNumber.js because that is what eth helper uses\n    duration: number;\n    lock: string; // lock address\n    introducer: string;\n    blockNo: number;\n    timestamp: string; // in Unix epoch\n    lockOwner: string; // locker's address\n}\n\n// option data is the type that is going to be passed to the component\nexport interface OptionData {\n    dataSets: OptionItem[];\n    onChoose: Function;\n}\n\n// option item type is used to provide the data for dropdown items\nexport interface OptionItem {\n    label: string; // the dropdown display label\n    value: number | string; // dropdown select return value\n}\n","// the default introducer address when none is provided by the user\nexport const defaultAddress = '0x0000000000000000000000000000000000000000';\n\nexport const affiliationRate = 0.01;\n\nconst firstEthIntroducer = [\n    '0xd8de1f6764e442b8763d313722e9eaee3779707e',\n    '0x1d32750e8a03443f008236f7c344fc84821cf690',\n    '0xa5a6d551ab33c3920848844b3fe3b27591df8f10',\n    '0xd8068f813c45c88cebb02cbc0f91f95626ec9a34',\n    '0x45ee0a0db0e775aecbebb300ccfc6486690b3287',\n    '0xd419d53817e1daa7b2f72e51707774f3ff0a54a3',\n    '0x1080355c93a1b4c0dd3c340eed4f7e514c583077',\n    '0x0013aa2fb5ec916660b38f1d53d4fc9bf8ef8a84',\n    '0x78ce6849d00c2f22aec93d29144fc68366cf0c62',\n    '0x60dc4b3d8e8d2c5449186270f385a56a21bb82c3',\n    '0x380566185c87ab93ca4edd474cf6998b5fc4153e',\n    '0x6a61dc52015945dfc6cd0c42f94a722d5022e3d1',\n    '0x520e74218a9fd5563855f11d204810281a833e0f',\n    '0x27c72e4bd23c910218d8f06c4a1742e06657c874',\n    '0xd307ff28710b7a4587200c5ba4c67648c1f24045',\n    '0x9498db340a3ecab7bb0973ee36e95e58c8e58a41',\n    '0xe552821ee85284249c71d4abfc4437992ed2fb93',\n    '0xc78a748dccbd806ae782eb3b8590ae7d162e5a90',\n    '0x20edd77ea8582f4a2400d3c0d53154a74a1ca887',\n    '0xeef2e4a5f6a01d5fb89f38211fb4e6a8702d33b6',\n    '0x531c2607862de00604f600cff6be9cb312467570',\n    '0xf22b286fda7369255376742f360ffcee4e1fbd42',\n    '0xb35e0bfec9facd8f2dcc0e43e68350d5e7baa82f',\n    '0x7b4d4ba1070c4562c568fed6280c800a68fa5427',\n    '0x81042f7f99a86d3981308e72feb36bd791c31920',\n    '0xb98df9f7cdc3a983081cefa1cd94aed4e936f1a9',\n    '0x5b6c1f8838b9abf16c0383b7e4f3c5a750707af2',\n    '0x711b3ca2cc9d5a827f83d5ceafcb0925f2fb82b3',\n    '0x8e7fcc7a17f00f0f5f85f2d5964a581d0813c8a6',\n    '0x6b5e2758bdb9ed798acbfd64104c1deaf09cd24b',\n    '0x55763d6db54736084c1b8d010aa1d99f0dc6d07c',\n    '0xfadf736b86f09f2d07d2b655cfc848fe215140d4',\n    '0x9f4f9e15a4a963a9a3885979cc64b326dcaa18a8',\n    '0x0def9b4811e4c4e9da5acf82d421c97b5e9c152f',\n];\n\nconst secondEthIntroducer = ['add Ethereum addresses'];\n\nexport const validEthAddressList = [...firstEthIntroducer, ...secondEthIntroducer, defaultAddress];\n\nexport function isRegisteredEthAddress(introducer: string) {\n    return validEthAddressList.includes(introducer.toLowerCase());\n}\n","import BigNumber from 'bignumber.js';\nimport { LockEvent } from './LockdropModels';\n\nexport class PlmDrop {\n    reciver: string;\n    basePlm: BigNumber;\n    introducerAndBonuses: [string, BigNumber][];\n    affiliationRefsBonuses: [string, BigNumber][];\n    locks: LockEvent[];\n\n    constructor(\n        reciver: string,\n        basePlm: BigNumber,\n        introducerAndBonuses: [string, BigNumber][],\n        affiliationRefsBonuses: [string, BigNumber][],\n        locks: LockEvent[],\n    ) {\n        this.reciver = reciver;\n        this.basePlm = basePlm;\n        this.introducerAndBonuses = introducerAndBonuses;\n        this.affiliationRefsBonuses = affiliationRefsBonuses;\n        this.locks = locks;\n    }\n\n    getTotal() {\n        let totalIntroBonuses = new BigNumber(0);\n\n        for (let i = 0; i < this.introducerAndBonuses.length; i++) {\n            totalIntroBonuses = totalIntroBonuses.plus(this.introducerAndBonuses[i][1]);\n        }\n\n        const affBonus = this.calculateAffBonus();\n\n        return this.basePlm\n            .plus(totalIntroBonuses)\n            .plus(affBonus)\n            .toFixed();\n    }\n\n    getTotalPlm() {\n        return new BigNumber(this.getTotal()).toFixed();\n    }\n\n    getAffBonus() {\n        return new BigNumber(this.calculateAffBonus()).toFormat(2);\n    }\n\n    getIntroBonus() {\n        return new BigNumber(this.calculateIntroBonus()).toFormat(2);\n    }\n\n    // calculate the number of PLM you get for being affiliated\n    calculateAffBonus() {\n        return this.affiliationRefsBonuses.reduce(\n            (sum: BigNumber, bonus: [string, BigNumber]): BigNumber => sum.plus(bonus[1]),\n            new BigNumber(0),\n        );\n    }\n\n    // the number of PLM you get for referencing an affiliate\n    calculateIntroBonus() {\n        return this.introducerAndBonuses.reduce(\n            (sum: BigNumber, bonus: [string, BigNumber]): BigNumber => sum.plus(bonus[1]),\n            new BigNumber(0),\n        );\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n// This module is used for communicating with the Ethereum smart contract\nimport Lockdrop from '../../contracts/Lockdrop.json';\n//todo: change this to the actual contract instance\nimport SecondLockdrop from '../../contracts/Lockdrop.json';\nimport getWeb3 from '../getWeb3';\nimport Web3 from 'web3';\nimport { Contract } from 'web3-eth-contract';\nimport { LockEvent, LockSeason, LockInput } from '../../models/LockdropModels';\nimport BN from 'bn.js';\nimport BigNumber from 'bignumber.js';\nimport { isRegisteredEthAddress, defaultAddress, affiliationRate } from '../../data/affiliationProgram';\nimport { lockDurationToRate } from '../plasmUtils';\nimport { PlmDrop } from '../../models/PlasmDrop';\nimport Web3Utils from 'web3-utils';\nimport EthCrypto from 'eth-crypto';\nimport * as polkadotUtil from '@polkadot/util-crypto';\nimport { ecrecover, fromRpcSig, toBuffer, bufferToHex } from 'ethereumjs-util';\nimport { Toast } from 'react-toastify';\n\n// exchange rate at the start of April 14 UTC (at the end of the lockdrop)\n// historical data was obtained from here https://coinmarketcap.com/currencies/ethereum/historical-data/\nexport const ethFinalExRate = 205.56;\n\n// the total amount of issueing PLMs at 1st Lockdrop.\nconst totalAmountOfPLMs = new BigNumber('500000000.000000000000000');\nconst totalAmountOfPLMsForLockdrop = totalAmountOfPLMs.times(new BigNumber('17').div(new BigNumber('20')));\n\n// generates a Plasm address with the given public key\nexport function generatePlmAddress(ethPubKey: string) {\n    // converts a given hex string into Uint8Array\n    const toByteArray = (hexString: string) => {\n        const result = [];\n        for (let i = 0; i < hexString.length; i += 2) {\n            result.push(parseInt(hexString.substr(i, 2), 16));\n        }\n        return new Uint8Array(result);\n    };\n\n    // compress 64byte key into 32+1 byte key\n    const compressedPubKey = EthCrypto.publicKey.compress(ethPubKey);\n    // hash to blake2\n    const plasmPubKey = polkadotUtil.blake2AsU8a(toByteArray(compressedPubKey), 256);\n    // encode address\n    const plmAccountId = polkadotUtil.encodeAddress(plasmPubKey, 5);\n    return plmAccountId;\n}\n\nexport async function getPubKey(web3: Web3) {\n    const msg = 'Please Sign this message to generate Plasm Network address';\n    const hash = web3.eth.accounts.hashMessage(msg);\n    try {\n        const addresses = await web3.eth.getAccounts();\n        // the password parameter is only used for minor cases\n        const sig = '0x' + (await web3.eth.personal.sign(msg, addresses[0], 'SecureP4ssW0rd')).slice(2);\n        const res = fromRpcSig(sig);\n\n        return bufferToHex(ecrecover(toBuffer(hash), res.v, res.r, res.s));\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n// returns an array of the entire list of locked events for the contract only once\nexport async function getAllLockEvents(web3: Web3, instance: Contract): Promise<LockEvent[]> {\n    // todo: set this value as the block number of where the contract was deployed for each network\n    const mainnetStartBlock = 0;\n    try {\n        const ev = await instance.getPastEvents('Locked', {\n            fromBlock: mainnetStartBlock,\n        });\n\n        const eventHashes = await Promise.all(\n            ev.map(async e => {\n                return Promise.all([Promise.resolve(e.returnValues), web3.eth.getTransaction(e.transactionHash)]);\n            }),\n        );\n\n        return Promise.all(\n            eventHashes.map(async e => {\n                // e[0] is lock event and e[1] is block hash\n                const blockHash = e[1];\n                const lockEvent = e[0];\n\n                const transactionString = await Promise.resolve(\n                    web3.eth.getBlock((blockHash.blockNumber as number).toString()),\n                );\n                const time = transactionString.timestamp.toString();\n                return {\n                    eth: lockEvent.eth as BN,\n                    duration: lockEvent.duration as number,\n                    lock: lockEvent.lock as string,\n                    introducer: lockEvent.introducer as string,\n                    blockNo: blockHash.blockNumber,\n                    timestamp: time,\n                    lockOwner: e[1]['from'],\n                } as LockEvent;\n            }),\n        );\n    } catch (error) {\n        console.log(error);\n        // return an empty array when failed\n        return [] as LockEvent[];\n    }\n}\n\nexport function defaultAffiliation(aff: string) {\n    // check if affiliation address is not empty and is not themselves\n    if (aff) {\n        // return itself when it is a valid address\n        return aff;\n    } else {\n        // if it is an invalid address, return the default affiliation address\n        return defaultAddress;\n    }\n}\n\nexport async function getEthUsdRate(endDate: string) {\n    // date format mm-DD-YYYY\n    const ethMarketApi = `https://api.coingecko.com/api/v3/coins/ethereum/history?date=${endDate}&localization=false`;\n    let usdRate = 0;\n    try {\n        const res = await fetch(ethMarketApi);\n        const data = await res.json();\n        usdRate = data.market_data.current_price.usd;\n    } catch (error) {\n        console.log(error);\n    }\n    return usdRate;\n}\n\nfunction plmBaseIssueRatio(lockData: LockEvent, ethExchangeRate: BigNumber): BigNumber {\n    // get lockTimeBonus * ethExRate\n    const bonusRate = new BigNumber(lockDurationToRate(lockData.duration)).times(ethExchangeRate);\n\n    // calculate issuingPLMRate = lockedEth([ETH]) * lockBonusRate * ethExRate\n    const issuingRatio: BigNumber = new BigNumber(Web3Utils.fromWei(lockData.eth.toString(), 'ether')).times(\n        new BigNumber(bonusRate),\n    );\n    return issuingRatio;\n}\n\nfunction totalPlmBaseIssuingRate(allLocks: LockEvent[], ethExchangeRate: BigNumber): BigNumber {\n    return allLocks.reduce(\n        (sum: BigNumber, value: LockEvent): BigNumber => sum.plus(plmBaseIssueRatio(value, ethExchangeRate)),\n        new BigNumber(0),\n    );\n}\n\nfunction plmBaseIssueAmountInLock(lock: LockEvent, totalPlmsRate: BigNumber, ethExchangeRate: BigNumber): BigNumber {\n    const currentIssue = plmBaseIssueRatio(lock, ethExchangeRate);\n    return totalAmountOfPLMsForLockdrop.times(currentIssue).div(totalPlmsRate);\n}\n\n// returns an array of addresses that referenced the given address for the affiliation program\nfunction getAllAffReferences(address: string, lockData: LockEvent[]) {\n    // check if there is\n    const results: LockEvent[] = [];\n    const refEvents = lockData.filter(e => e.introducer.toLowerCase() === address.toLowerCase());\n\n    for (let i = 0; i < refEvents.length; i++) {\n        results.push(refEvents[i]);\n    }\n\n    return results;\n}\n\nexport function calculateNetworkAlpha(allLocks: LockEvent[]): BigNumber {\n    const ethExchangeRate = new BigNumber(ethFinalExRate);\n\n    const totalPlmRate = totalPlmBaseIssuingRate(allLocks, ethExchangeRate);\n\n    // alpha_1 = totalAmountOfPLMsForLockdrop /totalPlmRate\n    const alpha1 = totalAmountOfPLMsForLockdrop.div(totalPlmRate);\n\n    return alpha1;\n}\n\n// calculate the total receiving PLMs from the lockdrop including the affiliation program bonus\n// in this function, affiliation means the current address being referenced by others\n// and introducer means this address referencing other affiliated addresses\nexport function calculateTotalPlm(address: string, lockData: LockEvent[]): PlmDrop {\n    const receivingPlm = new PlmDrop(address, new BigNumber(0), [], [], []);\n\n    const currentAddressLocks = lockData.filter(i => i.lockOwner.toLowerCase() === address.toLowerCase());\n\n    receivingPlm.locks = currentAddressLocks;\n\n    const ethExchangeRate = new BigNumber(ethFinalExRate);\n\n    // get total plm rate for calculating actual issuing PLMs.\n    const totalPlmRate = totalPlmBaseIssuingRate(lockData, ethExchangeRate);\n\n    for (let i = 0; i < currentAddressLocks.length; i++) {\n        // calculate total base issuing PLM tokens\n        const issuingPlm = plmBaseIssueAmountInLock(currentAddressLocks[i], totalPlmRate, ethExchangeRate);\n\n        // add value to the total amount\n        receivingPlm.basePlm = receivingPlm.basePlm.plus(issuingPlm);\n\n        // self -> introducer : bonus getting PLMs.\n        // check if this address has an introducer\n        if (\n            isRegisteredEthAddress(currentAddressLocks[i].introducer) &&\n            currentAddressLocks[i].introducer !== defaultAddress\n        ) {\n            receivingPlm.introducerAndBonuses.push([\n                currentAddressLocks[i].introducer,\n                issuingPlm.times(new BigNumber(affiliationRate)),\n            ]);\n        }\n    }\n\n    // someone -> self(introducer) : bonus getting PLMs.\n    // calculate affiliation bonus for this address\n    if (isRegisteredEthAddress(address)) {\n        const allRefs = getAllAffReferences(address, lockData);\n\n        for (let i = 0; i < allRefs.length; i++) {\n            // reference amount * 0.01\n            receivingPlm.affiliationRefsBonuses.push([\n                allRefs[i].lock,\n                plmBaseIssueAmountInLock(allRefs[i], totalPlmRate, ethExchangeRate).times(\n                    new BigNumber(affiliationRate),\n                ),\n            ]);\n        }\n    }\n    return receivingPlm;\n}\n\nexport function getTotalLockVal(locks: LockEvent[]): string {\n    let totalVal = new BigNumber(0);\n    if (locks.length > 0) {\n        for (let i = 0; i < locks.length; i++) {\n            const currentEth = new BigNumber(locks[i].eth.toString());\n            totalVal = totalVal.plus(currentEth);\n        }\n    }\n    return Web3Utils.fromWei(totalVal.toFixed(), 'ether');\n}\n\n// this function will authenticate if the client has metamask installed and can communicate with the blockchain\nexport async function connectWeb3(lockSeason: LockSeason) {\n    try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3();\n        //const web3 = getEthInst();\n\n        if (web3 instanceof Web3) {\n            // Use web3 to get the user's accounts.\n            const accounts = await web3.eth.getAccounts();\n\n            // Get the contract instance.\n            const networkId = await web3.eth.net.getId();\n            const deployedNetwork = (Lockdrop as any).networks[networkId];\n\n            // create an empty contract instance first\n            let instance = new web3.eth.Contract(\n                Lockdrop.abi as any,\n                deployedNetwork && deployedNetwork.address,\n            ) as Contract;\n\n            //todo: switch contract instance depending on lockdrop type\n            // assign different contract abi depending on the lockdrop type\n            switch (lockSeason) {\n                case LockSeason.First:\n                    instance = new web3.eth.Contract(\n                        Lockdrop.abi as any,\n                        deployedNetwork && deployedNetwork.address,\n                    ) as Contract;\n                    break;\n                case LockSeason.Second:\n                    instance = new web3.eth.Contract(\n                        SecondLockdrop.abi as any,\n                        deployedNetwork && deployedNetwork.address,\n                    ) as Contract;\n                    break;\n            }\n\n            // assign current web3 instance to window global var\n            // window.web3 = web3;\n            // window.contract = instance;\n\n            return {\n                web3: web3,\n                accounts: accounts,\n                contract: instance,\n            };\n        }\n    } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert('Failed to load web3, accounts, or contract. Check console for details.');\n        console.error(error);\n    }\n    // return an empty value\n    return {\n        web3: {} as Web3,\n        accounts: [''],\n        contract: {} as Contract,\n    };\n}\n\nexport async function submitLockTx(txInput: LockInput, address: string, contract: Contract, messageToast: Toast) {\n    // checks user input\n    if (txInput.amount > new BN(0) && txInput.duration) {\n        //console.log(formInputVal);\n        // return a default address if user input is empty\n        const introducer = defaultAffiliation(txInput.affiliation).toLowerCase();\n        try {\n            // check user input\n            if (introducer === address) {\n                messageToast.error('You cannot affiliate yourself');\n            } else if (introducer && !Web3.utils.isAddress(introducer)) {\n                messageToast.error('Please input a valid Ethereum address');\n            } else if (!isRegisteredEthAddress(introducer)) {\n                messageToast.error('The given introducer is not registered in the affiliation program!');\n            } else {\n                // convert user input to Wei\n                const amountToSend = Web3.utils.toWei(txInput.amount, 'ether');\n\n                // communicate with the smart contract\n                await contract.methods.lock(txInput.duration, introducer).send({\n                    from: address,\n                    value: amountToSend,\n                });\n\n                messageToast.success(`Successfully locked ${txInput.amount} ETH for ${txInput.duration} days!`);\n                return true;\n            }\n        } catch (error) {\n            messageToast.error('error!\\n' + error.message);\n        }\n    } else {\n        messageToast.error('You are missing an input!');\n    }\n    return false;\n}\n","import BigNumber from 'bignumber.js';\n\nexport function femtoToPlm(femto: BigNumber) {\n    const plmDenominator = new BigNumber(10).pow(-15);\n    return femto.times(plmDenominator);\n}\n\nexport function lockDurationToRate(duration: number) {\n    if (duration < 30) {\n        return 0;\n    } else if (duration < 100) {\n        return 24;\n    } else if (duration < 300) {\n        return 100;\n    } else if (duration < 1000) {\n        return 360;\n    } else {\n        return 1600;\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { getTotalLockVal } from '../../helpers/lockdrop/EthereumLockdrop';\n//import * as ethAddress from 'ethereum-address';\nimport Web3 from 'web3';\nimport { Contract } from 'web3-eth-contract';\nimport SectionCard from '../SectionCard';\nimport { LockEvent, TimeFormat } from '../../models/LockdropModels';\nimport { createStyles, Theme, makeStyles, useTheme } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { Divider, Grid, ListItemSecondaryAction, IconButton, LinearProgress } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SwipeableViews from 'react-swipeable-views';\nimport LockIcon from '@material-ui/icons/Lock';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { defaultAddress } from '../../data/affiliationProgram';\nimport Web3Utils from 'web3-utils';\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    dir?: string;\n    index: any;\n    value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nfunction a11yProps(index: any) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        listRoot: {\n            width: '100%',\n            maxWidth: 'auto',\n            backgroundColor: theme.palette.background.paper,\n            position: 'relative',\n            overflow: 'auto',\n            maxHeight: 360,\n        },\n        listSection: {\n            backgroundColor: 'inherit',\n        },\n        ul: {\n            backgroundColor: 'inherit',\n            padding: 0,\n        },\n        lockListPage: {\n            textAlign: 'center',\n        },\n        tabMenu: {\n            backgroundColor: theme.palette.background.paper,\n            width: 'auto',\n        },\n    }),\n);\n\ninterface LockHistoryProps {\n    web3: Web3;\n    contractInstance: Contract;\n    accounts: string[]; // this will be used to get locks for a certain account\n    lockData: LockEvent[];\n}\n// component that displays the number of tokens and the duration for the lock via Web3\nconst LockedEthList: React.FC<LockHistoryProps> = ({ web3, contractInstance, accounts, lockData }) => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (_event: React.ChangeEvent<{}>, newValue: number) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = (index: number) => {\n        setValue(index);\n    };\n\n    return (\n        <>\n            <SectionCard maxWidth=\"lg\">\n                <div className={classes.tabMenu}>\n                    <AppBar position=\"static\" color=\"inherit\">\n                        <Tabs\n                            value={value}\n                            onChange={handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"fullWidth\"\n                            aria-label=\"full width tabs\"\n                        >\n                            <Tab label=\"Locked Tokens\" {...a11yProps(0)} />\n                            <Tab label=\"Unlock Tokens\" {...a11yProps(1)} />\n                        </Tabs>\n                    </AppBar>\n                    <SwipeableViews\n                        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                        index={value}\n                        onChangeIndex={handleChangeIndex}\n                    >\n                        <TabPanel value={value} index={0} dir={theme.direction}>\n                            <GlobalLocks\n                                web3={web3}\n                                contractInstance={contractInstance}\n                                accounts={accounts}\n                                lockData={lockData}\n                            />\n                        </TabPanel>\n                        <TabPanel value={value} index={1} dir={theme.direction}>\n                            <CurrentLocks\n                                web3={web3}\n                                contractInstance={contractInstance}\n                                accounts={accounts}\n                                lockData={lockData}\n                            />\n                        </TabPanel>\n                    </SwipeableViews>\n                </div>\n            </SectionCard>\n        </>\n    );\n};\n\nexport default LockedEthList;\n\nconst GlobalLocks: React.FC<LockHistoryProps> = ({ lockData }) => {\n    const classes = useStyles();\n    const [lockEvents, setEvents] = useState<LockEvent[]>([]);\n    const [isLoadingComp, setLoadState] = useState(true);\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setEvents(lockData);\n        }, 1000);\n        // cleanup hook\n        return () => {\n            clearInterval(interval);\n        };\n    }, [lockData]);\n\n    useEffect(() => {\n        setEvents(lockData);\n        setLoadState(false);\n    }, [lockData]);\n\n    return (\n        <div className={classes.lockListPage}>\n            {isLoadingComp ? (\n                <CircularProgress />\n            ) : (\n                <>\n                    {lockEvents.length > 0 ? (\n                        <>\n                            <h1>Global Locks</h1>\n                            <h3>{getTotalLockVal(lockEvents)} ETH locked</h3>\n                            <List className={classes.listRoot} subheader={<li />}>\n                                <li className={classes.listSection}>\n                                    <ul className={classes.ul}>\n                                        <ListSubheader>There are {lockEvents.length} locks</ListSubheader>\n                                        <Divider />\n                                        {lockEvents.map(eventItem => (\n                                            <>\n                                                <ListItem key={eventItem.lock}>\n                                                    <ListItemText>\n                                                        <h4>Lock address: {eventItem.lock}</h4>\n                                                        <h5>Locked in block no. {eventItem.blockNo}</h5>\n                                                        <p>\n                                                            Locked {Web3Utils.fromWei(eventItem.eth, 'ether')} ETH for{' '}\n                                                            {eventItem.duration} days\n                                                        </p>\n                                                        {eventItem.introducer !== defaultAddress ? (\n                                                            <p>Introducer: {eventItem.introducer}</p>\n                                                        ) : (\n                                                            <p>No introducer</p>\n                                                        )}\n                                                    </ListItemText>\n                                                </ListItem>\n                                                <Divider />\n                                            </>\n                                        ))}\n                                    </ul>\n                                </li>\n                            </List>\n                        </>\n                    ) : (\n                        <>\n                            <h1>No Locks</h1>\n                            <h4>Please lock some ETH!</h4>\n                        </>\n                    )}\n                </>\n            )}\n        </div>\n    );\n};\n\nconst CurrentLocks: React.FC<LockHistoryProps> = ({ web3, accounts, lockData }) => {\n    const classes = useStyles();\n    const [lockEvents, setEvents] = useState<LockEvent[]>([]);\n    const [isLoadingComp, setLoadState] = useState(true);\n\n    const getUserLocks = () => {\n        return lockData.filter(i => i.lockOwner === accounts[0]);\n    };\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setEvents(getUserLocks);\n            setLoadState(false);\n        }, 1000);\n        // cleanup hook\n        return () => {\n            clearInterval(interval);\n        };\n    });\n\n    return (\n        <div className={classes.lockListPage}>\n            {isLoadingComp ? (\n                <CircularProgress />\n            ) : (\n                <>\n                    {lockEvents.length > 0 ? (\n                        <>\n                            <h1>Your Locks</h1>\n                            <h3>{getTotalLockVal(lockEvents)} ETH locked</h3>\n                            <List className={classes.listRoot} subheader={<li />}>\n                                <li className={classes.listSection}>\n                                    <ul className={classes.ul}>\n                                        <ListSubheader>You have {lockEvents.length} locks</ListSubheader>\n                                        <Divider />\n                                        {lockEvents.map(eventItem => (\n                                            <>\n                                                <UnlockInfo lockInfo={eventItem} web3={web3} address={accounts[0]} />\n                                                <Divider />\n                                            </>\n                                        ))}\n                                    </ul>\n                                </li>\n                            </List>\n                        </>\n                    ) : (\n                        <>\n                            <h1>No Locks</h1>\n                            <h4>Please lock some ETH!</h4>\n                        </>\n                    )}\n                </>\n            )}\n        </div>\n    );\n};\n\ninterface UnlockInfoProps {\n    lockInfo: LockEvent;\n    web3: Web3;\n    address: string;\n}\n\nconst UnlockInfo: React.FC<UnlockInfoProps> = ({ lockInfo, web3, address }) => {\n    // 24 hours in epoch date\n    const epochDayMil = 86400000;\n\n    const getUnlockDate = useCallback(() => {\n        // Ethereum timestamp is in seconds while JS Date is ms\n        const lockedDay = Number(lockInfo.timestamp) * 1000;\n\n        const unlockDate = lockedDay + lockInfo.duration * epochDayMil;\n\n        return unlockDate;\n    }, [lockInfo]);\n\n    const calculateTimeLeft = useCallback(() => {\n        // milliseconds left till unlock\n        const tillEnd = getUnlockDate() - +Date.now();\n        return {\n            days: Math.floor(tillEnd / (1000 * 60 * 60 * 24)),\n            hours: Math.floor((tillEnd / (1000 * 60 * 60)) % 24),\n            minutes: Math.floor((tillEnd / 1000 / 60) % 60),\n            seconds: Math.floor((tillEnd / 1000) % 60),\n        };\n    }, [getUnlockDate]);\n\n    const [canUnlock, setLockState] = useState(false);\n    const [tillUnlock, setUnlockDate] = useState<TimeFormat>(calculateTimeLeft());\n    const [lockIsClaimed, setLockClaim] = useState(false);\n    const [isLoading, setLoading] = useState(false);\n\n    const checkUnlock = useCallback(async () => {\n        // get today in UTC epoch seconds (js default is ms)\n        const today = Date.now();\n\n        // Ethereum timestamp is in seconds while JS Date is ms\n        const lockedDay = Number(lockInfo.timestamp) * 1000;\n\n        const unlockDate = lockedDay + lockInfo.duration * epochDayMil;\n\n        // get contract balance\n        const lockBalance = await web3.eth.getBalance(lockInfo.lock);\n        // check if the balance is 0 or not\n        const lockClaimState = lockBalance === '0';\n        // console.log(lockBalance);\n        setLockClaim(lockClaimState);\n        // manually change the loading state\n        setLoading(false);\n        return today > unlockDate;\n    }, [lockInfo, web3]);\n\n    // update time value every second\n    useEffect(() => {\n        //const abortController = new AbortController();\n\n        const interval = setInterval(async () => {\n            setUnlockDate(calculateTimeLeft());\n            setLockState(await checkUnlock());\n        }, 1000);\n        // cleanup async hook\n        return () => {\n            clearInterval(interval);\n        };\n    }, [calculateTimeLeft, checkUnlock]);\n\n    // initial update\n    useEffect(() => {\n        setUnlockDate(calculateTimeLeft());\n        checkUnlock().then(setLockState);\n    }, [calculateTimeLeft, checkUnlock]);\n\n    const handleClick = () => {\n        setLoading(true);\n        web3.eth\n            .sendTransaction({\n                from: address,\n                to: lockInfo.lock,\n                value: '0',\n            })\n            .then(\n                () => {\n                    setLoading(false);\n                },\n                error => {\n                    console.log(error);\n                    setLoading(false);\n                },\n            );\n    };\n\n    return (\n        <>\n            <ListItem key={lockInfo.lock}>\n                <ListItemText>\n                    <h4>Lock address: {lockInfo.lock}</h4>\n                    <h5>Locked in block no. {lockInfo.blockNo}</h5>\n                    <p>\n                        Locked {Web3Utils.fromWei(lockInfo.eth, 'ether')} ETH for {lockInfo.duration} days\n                    </p>\n                    {lockInfo.introducer !== defaultAddress ? (\n                        <p>Introducer: {lockInfo.introducer}</p>\n                    ) : (\n                        <p>No introducer</p>\n                    )}\n                    {isLoading ? (\n                        <>\n                            <LinearProgress />\n                        </>\n                    ) : (\n                        <>\n                            {!canUnlock ? (\n                                <Grid container spacing={1}>\n                                    <Grid item>\n                                        <p>{tillUnlock.days} Days </p>\n                                    </Grid>\n                                    <Grid item>\n                                        <p>{tillUnlock.hours} Hours </p>\n                                    </Grid>\n                                    <Grid item>\n                                        <p>{tillUnlock.minutes} Minutes </p>\n                                    </Grid>\n                                    <Grid item>\n                                        <p>{tillUnlock.seconds} Seconds </p>\n                                    </Grid>\n                                    <Grid item>\n                                        <p>Left</p>\n                                    </Grid>\n                                </Grid>\n                            ) : lockIsClaimed ? (\n                                <p>Lock already claimed!</p>\n                            ) : (\n                                <p>You can claim your lock!</p>\n                            )}\n                        </>\n                    )}\n                </ListItemText>\n\n                <ListItemSecondaryAction>\n                    {lockIsClaimed ? (\n                        <LockOpenIcon color=\"disabled\" />\n                    ) : canUnlock ? (\n                        <IconButton edge=\"end\" aria-label=\"unlock\" onClick={() => handleClick()} color=\"primary\">\n                            <LockOpenIcon />\n                        </IconButton>\n                    ) : (\n                        <LockIcon color=\"inherit\" />\n                    )}\n                </ListItemSecondaryAction>\n            </ListItem>\n        </>\n    );\n};\n","/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { TimeFormat, LockEvent } from '../models/LockdropModels';\nimport moment, { Moment, duration } from 'moment';\nimport { getTotalLockVal } from '../helpers/lockdrop/EthereumLockdrop';\n\ninterface Props {\n    startTime: Moment;\n    endTime: Moment;\n    lockData: LockEvent[];\n}\n\nenum LockState {\n    notStart,\n    start,\n    end,\n}\n\nconst LockdropCountdownPanel: React.FC<Props> = ({ startTime, endTime, lockData }) => {\n    const now = moment().utc();\n\n    const calculateTimeLeft = (): TimeFormat => {\n        const tillStart = moment(startTime).valueOf() - now.valueOf();\n\n        //let difference = tillStart;\n        let difference = duration(startTime.diff(now));\n\n        // if the lockdrop has already started\n        if (tillStart < 0) {\n            difference = duration(endTime.diff(now));\n        }\n\n        let timeLeft: TimeFormat = {\n            days: 0,\n            hours: 0,\n            minutes: 0,\n            seconds: 0,\n        };\n\n        const tillEnd = moment(endTime).valueOf() - now.valueOf();\n        // check if the duration has ended\n        if (tillEnd > 0) {\n            timeLeft = {\n                days: difference.days(),\n                hours: difference.hours(),\n                minutes: difference.minutes(),\n                seconds: difference.seconds(),\n            };\n        }\n        return timeLeft;\n    };\n\n    const getLockState = (): LockState => {\n        const tillStart = moment(startTime).valueOf() - now.valueOf();\n        if (tillStart > 0) {\n            return LockState.notStart;\n        } else if (tillStart <= 0 && !(moment(endTime).valueOf() - now.valueOf() < 0)) {\n            return LockState.start;\n        } else {\n            return LockState.end;\n        }\n    };\n\n    const [timeLeft, setTimeLeft] = useState<TimeFormat>(calculateTimeLeft());\n    const [lockState, setLockState] = useState(getLockState());\n    const [totalLockVal, setTotalLockVal] = useState('0');\n\n    const getLockValue = async (): Promise<void> => {\n        try {\n            const totalLockVal = getTotalLockVal(lockData);\n            setTotalLockVal(totalLockVal);\n        } catch (err) {\n            console.error(err);\n        }\n    };\n    // update time value every second\n    // useEffect(() => {\n    //     setTimeout(() => {\n    //         setTimeLeft(calculateTimeLeft());\n    //         setLockState(getLockState());\n    //     }, 1000);\n\n    //     setTimeout(async () => {\n    //         await getLockValue();\n    //     }, 1000);\n    // });\n\n    useEffect(() => {\n        const interval = setInterval(async () => {\n            setTimeLeft(calculateTimeLeft());\n            setLockState(getLockState());\n            await getLockValue();\n        }, 1000);\n        // cleanup hook\n        return () => {\n            clearInterval(interval);\n        };\n    });\n\n    if (lockState !== LockState.end) {\n        return (\n            <>\n                <PanelWrapper>\n                    <div className=\"time\">\n                        <Grid container spacing={2} justify=\"center\">\n                            <Grid item>\n                                {lockState === LockState.notStart ? (\n                                    <Typography variant=\"h4\" component=\"h2\">\n                                        Main Network Lockdrop Starting in:\n                                    </Typography>\n                                ) : (\n                                    <Typography variant=\"h4\" component=\"h2\">\n                                        Lockdrop Ending in:\n                                    </Typography>\n                                )}\n                            </Grid>\n                            <Grid item>\n                                <h3>{timeLeft.days}</h3>\n                                <p>Days</p>\n                            </Grid>\n                            <Grid item>\n                                <h3>{timeLeft.hours}</h3>\n                                <p>Hours</p>\n                            </Grid>\n                            <Grid item>\n                                <h3>{timeLeft.minutes}</h3>\n                                <p>Minutes</p>\n                            </Grid>\n                            <Grid item>\n                                <h3>{timeLeft.seconds}</h3>\n                                <p>Seconds</p>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </PanelWrapper>\n            </>\n        );\n    } else {\n        return (\n            <>\n                <PanelWrapper>\n                    <Typography variant=\"h2\" component=\"h1\" align=\"center\">\n                        Main Network Lockdrop has ended\n                    </Typography>\n                    <Typography variant=\"h3\" component=\"h3\" align=\"center\">\n                        Total Locked Value: {totalLockVal} ETH\n                    </Typography>\n                </PanelWrapper>\n            </>\n        );\n    }\n};\n\nexport default LockdropCountdownPanel;\n\nconst PanelWrapper: React.FC = ({ children }) => {\n    const useStyles = makeStyles(theme => ({\n        container: {\n            padding: theme.spacing(5, 2, 0),\n            margin: theme.spacing(1),\n        },\n    }));\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Container maxWidth=\"lg\" className={classes.container}>\n                {children}\n            </Container>\n        </>\n    );\n};\n","/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport {\n    makeStyles,\n    createStyles,\n    Theme,\n    CircularProgress,\n    Divider,\n    Link,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Collapse,\n    Typography,\n} from '@material-ui/core';\nimport {\n    calculateTotalPlm,\n    ethFinalExRate,\n    getPubKey,\n    generatePlmAddress,\n} from '../../helpers/lockdrop/EthereumLockdrop';\nimport { PlmDrop } from '../../models/PlasmDrop';\nimport BigNumber from 'bignumber.js';\nimport CountUp from 'react-countup';\nimport { ThemeColors } from '../../theme/themes';\nimport { IonPopover, IonList, IonListHeader, IonItem, IonLabel, IonChip, IonButton, IonLoading } from '@ionic/react';\nimport { LockEvent } from '../../models/LockdropModels';\nimport Web3 from 'web3';\nimport SectionCard from '../SectionCard';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\n\nconst etherScanSearch = 'https://etherscan.io/address/';\n\ninterface ResultProps {\n    lockData: LockEvent[];\n    web3: Web3;\n}\n\nconst LockdropResult: React.FC<ResultProps> = ({ lockData, web3 }) => {\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            pageContent: {\n                textAlign: 'center',\n                padding: theme.spacing(4, 2, 0),\n            },\n            header: {\n                color: ThemeColors.blue,\n            },\n            claimButton: {\n                padding: theme.spacing(4, 2, 0),\n            },\n        }),\n    );\n\n    const classes = useStyles();\n    const [totalPlm, setTotalPlm] = useState<PlmDrop>(new PlmDrop('', new BigNumber(0), [], [], []));\n    const [exRate, setExRate] = useState(0);\n    const [isLoading, setLoadState] = useState(true);\n    const [showIntoRefPopover, setShowIntroRefPopover] = useState(false);\n    const [showIntoPopover, setShowIntroPopover] = useState(false);\n\n    useEffect(() => {\n        const interval = setInterval(async () => {\n            setExRate(ethFinalExRate);\n            const accounts = await web3.eth.getAccounts();\n            const totalIssue = calculateTotalPlm(accounts[0], lockData);\n            setTotalPlm(totalIssue);\n\n            setLoadState(false);\n        }, 1000);\n        // cleanup hook\n        return () => {\n            clearInterval(interval);\n        };\n    });\n\n    const countupTotalPlmVal: JSX.Element = (\n        <CountUp\n            start={0}\n            end={new BigNumber(totalPlm.getTotalPlm()).toNumber()}\n            decimals={2}\n            duration={1}\n            separator=\",\"\n        />\n    );\n\n    return (\n        <div className={classes.pageContent}>\n            <h1>Lockdrop Result</h1>\n            {isLoading ? (\n                <>\n                    <CircularProgress />\n                </>\n            ) : totalPlm.locks.length > 0 || totalPlm.affiliationRefsBonuses.length > 0 ? (\n                <>\n                    <h2 className={classes.header}>{countupTotalPlmVal} PLM in total</h2>\n                    <p>You have locked {totalPlm.locks.length} time(s)</p>\n                    <p>\n                        ETH exchange rate at the end of the lockdrop: {exRate} USD(\n                        <a href=\"https://api.coingecko.com/api/v3/coins/ethereum/history?date=01-05-2020&localization=false\">\n                            ref\n                        </a>\n                        )\n                    </p>\n                    <p>You have received around {totalPlm.basePlm.toFormat(2)} PLM from locking</p>\n                    <Divider />\n                    <h2>Affiliation Program</h2>\n                    <IonChip color=\"primary\" onClick={() => setShowIntroRefPopover(true)}>\n                        <IonLabel>{totalPlm.affiliationRefsBonuses.length} locks</IonLabel>\n                    </IonChip>\n                    <IonLabel>referenced your address as a introducer: {totalPlm.getAffBonus()} PLM</IonLabel>\n\n                    <IonPopover isOpen={showIntoRefPopover} onDidDismiss={() => setShowIntroRefPopover(false)}>\n                        <IntoRefItems data={totalPlm} />\n                    </IonPopover>\n                    <br />\n                    <IonLabel>You have referenced </IonLabel>\n                    <IonChip color=\"primary\" onClick={() => setShowIntroPopover(true)}>\n                        <IonLabel>{totalPlm.introducerAndBonuses.length} introducers</IonLabel>\n                    </IonChip>\n                    <IonLabel>: {totalPlm.getIntroBonus()} PLM</IonLabel>\n\n                    <IonPopover isOpen={showIntoPopover} onDidDismiss={() => setShowIntroPopover(false)}>\n                        <IntoAffItems data={totalPlm} />\n                    </IonPopover>\n                    <br />\n                    <ClaimPlm web3={web3} />\n                </>\n            ) : (\n                <h2 className={classes.header}>No Locks found for your address!</h2>\n            )}\n        </div>\n    );\n};\n\nexport default LockdropResult;\n\ninterface IntroRefProps {\n    data: PlmDrop;\n}\nconst IntoRefItems: React.FC<IntroRefProps> = ({ data }) => {\n    return (\n        <>\n            <IonList>\n                {data.affiliationRefsBonuses.length > 0 ? (\n                    <>\n                        <IonListHeader>References</IonListHeader>\n                        {data.affiliationRefsBonuses.map((i: [string, BigNumber]) => (\n                            <IonItem key={i[0]} href={etherScanSearch + i[0]} rel=\"noopener noreferrer\" target=\"_blank\">\n                                {i[0]}\n                            </IonItem>\n                        ))}\n                    </>\n                ) : (\n                    <IonListHeader>No References</IonListHeader>\n                )}\n            </IonList>\n        </>\n    );\n};\n\nconst IntoAffItems: React.FC<IntroRefProps> = ({ data }) => {\n    return (\n        <>\n            <IonList>\n                {data.introducerAndBonuses.length > 0 ? (\n                    <>\n                        <IonListHeader>Introducers</IonListHeader>\n                        {data.introducerAndBonuses.map((i: [string, BigNumber]) => (\n                            <IonItem key={i[0]} href={etherScanSearch + i[0]} rel=\"noopener noreferrer\" target=\"_blank\">\n                                {i[0]}\n                            </IonItem>\n                        ))}\n                    </>\n                ) : (\n                    <IonListHeader>No Introducers</IonListHeader>\n                )}\n            </IonList>\n        </>\n    );\n};\n\ninterface ClaimProps {\n    web3: Web3;\n}\nconst ClaimPlm: React.FC<ClaimProps> = ({ web3 }) => {\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            header: {\n                color: ThemeColors.blue,\n            },\n            claimButton: {\n                paddingTop: theme.spacing(2),\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                maxWidth: '100%',\n            },\n            addressPanel: {\n                padding: theme.spacing(3, 3, 0),\n            },\n            root: {\n                width: '100%',\n                alignContent: 'center',\n                backgroundColor: theme.palette.background.paper,\n            },\n            nested: {\n                paddingLeft: theme.spacing(4),\n            },\n        }),\n    );\n\n    const [isLoading, setLoadState] = useState(false);\n    const [plmAddress, setPlmAddress] = useState('');\n    const [ethPubkey, setEthPubkey] = useState('');\n    const [open, setOpen] = useState(false);\n\n    const getPlasmAddress = async () => {\n        const pubKey = await getPubKey(web3);\n        let result = '';\n        if (typeof pubKey === 'string') {\n            setEthPubkey(pubKey);\n            // remove the 0x prefix before passing the value\n            const plmAddress = generatePlmAddress(pubKey.replace('0x', ''));\n            result = plmAddress;\n        }\n        setLoadState(false);\n        return result;\n    };\n    const ExpandItem = () => {\n        setOpen(!open);\n    };\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <IonLoading isOpen={isLoading} message={'Verifying user...'} />\n            <IonButton\n                color=\"primary\"\n                size=\"large\"\n                className={classes.claimButton}\n                onClick={async () => {\n                    setLoadState(true);\n                    setPlmAddress(await getPlasmAddress());\n                }}\n            >\n                Get Plasm Address\n            </IonButton>\n            {plmAddress ? (\n                <>\n                    <SectionCard maxWidth=\"md\">\n                        <div className={classes.addressPanel}>\n                            <p>Your Plasm Network address with the lockdrop rewards:</p>\n                            <Link\n                                color=\"inherit\"\n                                href={'https://plasm.subscan.io/account/' + plmAddress}\n                                rel=\"noopener noreferrer\"\n                                target=\"_blank\"\n                            >\n                                <h2 className={classes.header}>{plmAddress}</h2>\n                            </Link>\n                            <List component=\"nav\" className={classes.root}>\n                                <ListItem button onClick={ExpandItem}>\n                                    <ListItemIcon>\n                                        <VpnKeyIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"View Eth Public Key\" />\n                                    {open ? <ExpandLess /> : <ExpandMore />}\n                                </ListItem>\n                                <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                                    <Typography className={classes.header}>{ethPubkey}</Typography>\n                                </Collapse>\n                            </List>\n                        </div>\n                    </SectionCard>\n                </>\n            ) : (\n                <></>\n            )}\n        </>\n    );\n};\n","/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport { validEthAddressList, defaultAddress } from '../data/affiliationProgram';\nimport { LockEvent } from '../models/LockdropModels';\nimport { PlmDrop } from '../models/PlasmDrop';\nimport { calculateTotalPlm } from '../helpers/lockdrop/EthereumLockdrop';\nimport {\n    List,\n    ListItemText,\n    ListSubheader,\n    Divider,\n    ListItem,\n    makeStyles,\n    createStyles,\n    Theme,\n    Typography,\n} from '@material-ui/core';\nimport SectionCard from './SectionCard';\n\ninterface Props {\n    lockData: LockEvent[];\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        listRoot: {\n            width: '100%',\n            maxWidth: 'auto',\n            backgroundColor: theme.palette.background.paper,\n            position: 'relative',\n            overflow: 'auto',\n            maxHeight: 360,\n        },\n        listSection: {\n            backgroundColor: 'inherit',\n        },\n        ul: {\n            backgroundColor: 'inherit',\n            padding: 0,\n        },\n        title: {\n            textAlign: 'center',\n            padding: theme.spacing(4, 2, 0),\n        },\n    }),\n);\n\nconst AffiliationList: React.FC<Props> = ({ lockData }) => {\n    const classes = useStyles();\n    const [lockdropResult, setLockdropResult] = useState<PlmDrop[]>([]);\n\n    function getAffliationResults(lockData: LockEvent[]) {\n        // filter out the 0x00 address from the list\n        const validAddresses = validEthAddressList.filter(address => address !== defaultAddress);\n\n        // get the lockdrop result infromation\n        const lockResults = validAddresses.map(i => {\n            return calculateTotalPlm(i, lockData);\n        });\n\n        // sort the array by the number of referencers\n        return lockResults.sort((a, b) =>\n            a.affiliationRefsBonuses.length > b.affiliationRefsBonuses.length\n                ? -1\n                : a.affiliationRefsBonuses.length < b.affiliationRefsBonuses.length\n                ? 1\n                : 0,\n        );\n    }\n\n    useEffect(() => {\n        setLockdropResult(getAffliationResults(lockData));\n    }, [lockData]);\n\n    return (\n        <>\n            <SectionCard maxWidth=\"lg\">\n                <Typography className={classes.title} variant=\"h3\">\n                    Affiliation Leaderboard\n                </Typography>\n                <List component=\"nav\" className={classes.listRoot} subheader={<li />}>\n                    <li className={classes.listSection}>\n                        <ul className={classes.ul}>\n                            <ListSubheader>There are {validEthAddressList.length - 1} affiliators</ListSubheader>\n                            <Divider />\n                            {lockdropResult.map(i => (\n                                <IntroducerBonusesItems key={i.reciver} lockResult={i} />\n                            ))}\n                        </ul>\n                    </li>\n                </List>\n            </SectionCard>\n        </>\n    );\n};\n\ninterface IntroducerPlanelProps {\n    lockResult: PlmDrop;\n}\n\nconst IntroducerBonusesItems: React.FC<IntroducerPlanelProps> = ({ lockResult }) => {\n    return (\n        <>\n            <ListItem>\n                <ListItemText>\n                    <h2>{lockResult.reciver}</h2>\n                    <p>{lockResult.affiliationRefsBonuses.length} lock(s) referenced this address</p>\n                    <p>{lockResult.getAffBonus()} PLMs gained from this</p>\n                </ListItemText>\n            </ListItem>\n            <Divider />\n        </>\n    );\n};\n\nexport default AffiliationList;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable react/prop-types */\nimport { IonContent, IonPage, IonLoading } from '@ionic/react';\nimport React from 'react';\nimport LockdropForm from '../components/EthLock/LockdropForm';\nimport { connectWeb3, getAllLockEvents, submitLockTx } from '../helpers/lockdrop/EthereumLockdrop';\nimport Web3 from 'web3';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport { Contract } from 'web3-eth-contract';\nimport { LockInput, LockEvent, LockSeason } from '../models/LockdropModels';\nimport LockedEthList from '../components/EthLock/LockedEthList';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport SectionCard from '../components/SectionCard';\nimport LockdropCountdownPanel from '../components/LockdropCountdownPanel';\nimport { firstLockdropEnd, firstLockdropStart } from '../data/lockInfo';\nimport moment from 'moment';\nimport LockdropResult from '../components/EthLock/LockdropResult';\nimport { Divider } from '@material-ui/core';\nimport AffiliationList from '../components/AffiliationList';\nimport { removeWeb3Event } from '../helpers/getWeb3';\n\nconst formInfo = `This is the lockdrop form for Ethereum.\nThis uses Web3 injection so you must have Metamask (or other Web3-enabled wallet) installed in order for this to work properly.\nIf you find any errors or find issues with this form, please contact the Plasm team.\nRegarding the audit by Quantstamp, click <a\n                            color=\"inherit\"\n                            href=\"https://github.com/staketechnologies/lockdrop-ui/blob/16a2d495d85f2d311957b9cf366204fbfabadeaa/audit/quantstamp-audit.pdf\"\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                        >\n                            here\n                        </a> for more details`;\n\ninterface PageStates {\n    web3: Web3;\n    accounts: string[];\n    contract: Contract;\n    isLoading: boolean;\n    networkType: string;\n    isProcessing: boolean;\n    allLockEvents: LockEvent[];\n    error: null;\n    fetchingLockData: boolean;\n}\n\n// need an empty interface to use states (React's generic positioning)\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface PageProps {}\n\ntoast.configure({\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n});\n\nconst hasFirstLockdropStarted = () => {\n    const now = moment()\n        .utc()\n        .valueOf();\n    const start = firstLockdropStart.valueOf();\n    //const end = firstLockdropEnd.valueOf();\n    return start <= now;\n};\n\nconst hasFirstLockdropEnded = () => {\n    const now = moment()\n        .utc()\n        .valueOf();\n    const end = firstLockdropEnd.valueOf();\n    return end <= now;\n};\n\nclass EthLockdropPage extends React.Component<PageProps, PageStates> {\n    constructor(props: PageProps) {\n        super(props);\n        // initialize with null values\n        this.state = {\n            web3: {} as Web3,\n            accounts: [''],\n            contract: {} as Contract,\n            isLoading: true,\n            networkType: '',\n            isProcessing: false,\n            allLockEvents: [],\n            error: null,\n            fetchingLockData: true,\n        };\n    }\n    // used for fetching data periodically\n    timerInterval: any;\n\n    // get and set the web3 state when the component is mounted\n    componentDidMount = async () => {\n        const web3State = await connectWeb3(LockSeason.First);\n        this.setState(web3State);\n\n        // checks if account has changed in MetaMask\n        if ((window as any).ethereum.on) {\n            (window as any).ethereum.on('accountsChanged', this.handleAccountChange);\n        }\n\n        this.setState({ networkType: await this.state.web3.eth.net.getNetworkType() });\n\n        //this.state.web3.eth.net.getNetworkType().then(i => this.setState({ networkType: i }));\n\n        this.timerInterval = setInterval(() => {\n            this.getLockData().then(() => {\n                this.setState({ isLoading: false });\n            });\n        }, 1000);\n    };\n\n    componentWillUnmount = () => {\n        clearInterval(this.timerInterval);\n        removeWeb3Event();\n    };\n\n    // called when the user changes MetaMask account\n    handleAccountChange = () => {\n        // refresh the page\n        window.location.reload(false);\n    };\n\n    getLockData = async () => {\n        try {\n            // get all the lock events from the chain\n            const allLocks = await getAllLockEvents(this.state.web3, this.state.contract);\n\n            this.setState({ allLockEvents: allLocks });\n        } catch (error) {\n            this.setState({ error });\n        }\n    };\n\n    handleSubmit = async (formInputVal: LockInput) => {\n        this.setState({ isProcessing: true });\n\n        await submitLockTx(formInputVal, this.state.accounts[0], this.state.contract, toast);\n\n        this.setState({ isProcessing: false });\n    };\n\n    render() {\n        return (\n            <IonPage>\n                <Navbar />\n                <IonContent>\n                    {hasFirstLockdropStarted() ? (\n                        this.state.isLoading ? (\n                            <IonLoading isOpen={true} message={'Connecting to Wallet and fetching chain data...'} />\n                        ) : (\n                            <>\n                                {this.state.isProcessing ? (\n                                    <IonLoading\n                                        isOpen={this.state.isProcessing}\n                                        message={'Processing Transaction...'}\n                                    />\n                                ) : (\n                                    <></>\n                                )}\n\n                                <SectionCard maxWidth=\"lg\">\n                                    <LockdropCountdownPanel\n                                        endTime={firstLockdropEnd}\n                                        startTime={firstLockdropStart}\n                                        lockData={this.state.allLockEvents}\n                                    />\n                                    {hasFirstLockdropEnded() ? (\n                                        <>\n                                            <Divider />\n                                            <LockdropResult\n                                                lockData={this.state.allLockEvents}\n                                                web3={this.state.web3}\n                                            />\n                                        </>\n                                    ) : (\n                                        <></>\n                                    )}\n                                </SectionCard>\n                                <AffiliationList lockData={this.state.allLockEvents} />\n                                {hasFirstLockdropEnded() ? (\n                                    <></>\n                                ) : (\n                                    <LockdropForm token=\"ETH\" onSubmit={this.handleSubmit} description={formInfo} />\n                                )}\n\n                                <LockedEthList\n                                    web3={this.state.web3}\n                                    contractInstance={this.state.contract}\n                                    accounts={this.state.accounts}\n                                    lockData={this.state.allLockEvents}\n                                />\n                            </>\n                        )\n                    ) : (\n                        <>\n                            <SectionCard maxWidth=\"lg\">\n                                <LockdropCountdownPanel\n                                    endTime={firstLockdropEnd}\n                                    startTime={firstLockdropStart}\n                                    lockData={this.state.allLockEvents}\n                                />\n                            </SectionCard>\n                        </>\n                    )}\n                    <Footer />\n                </IonContent>\n            </IonPage>\n        );\n    }\n}\nexport default EthLockdropPage;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable react/prop-types */\nimport { IonContent, IonPage, IonLoading } from '@ionic/react';\nimport React from 'react';\nimport LockdropForm from '../components/EthLock/LockdropForm';\nimport { connectWeb3, getAllLockEvents, submitLockTx } from '../helpers/lockdrop/EthereumLockdrop';\nimport Web3 from 'web3';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport { Contract } from 'web3-eth-contract';\nimport { LockInput, LockEvent, LockSeason } from '../models/LockdropModels';\nimport LockedEthList from '../components/EthLock/LockedEthList';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { removeWeb3Event } from '../helpers/getWeb3';\nimport SectionCard from '../components/SectionCard';\nimport { Typography } from '@material-ui/core';\n\nconst formInfo = `This is the lockdrop form for Ethereum.\nThis uses Web3 injection so you must have Metamask (or other Web3-enabled wallet) installed in order for this to work properly.\nIf you find any errors or find issues with this form, please contact the Plasm team.\nRegarding the audit by Quantstamp, click <a\n                            color=\"inherit\"\n                            href=\"https://github.com/staketechnologies/lockdrop-ui/blob/16a2d495d85f2d311957b9cf366204fbfabadeaa/audit/quantstamp-audit.pdf\"\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                        >\n                            here\n                        </a> for more details`;\n\ninterface PageStates {\n    web3: Web3;\n    accounts: string[];\n    contract: Contract;\n    isLoading: boolean;\n    networkType: string;\n    isProcessing: boolean;\n    allLockEvents: LockEvent[];\n    error: null;\n    fetchingLockData: boolean;\n}\n\n// need an empty interface to use states (React's generic positioning)\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface PageProps {}\n\ntoast.configure({\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n});\n\nclass DustyEthLockPage extends React.Component<PageProps, PageStates> {\n    constructor(props: PageProps) {\n        super(props);\n        // initialize with null values\n        this.state = {\n            web3: {} as Web3,\n            accounts: [''],\n            contract: {} as Contract,\n            isLoading: true,\n            networkType: '',\n            isProcessing: false,\n            allLockEvents: [],\n            error: null,\n            fetchingLockData: true,\n        };\n    }\n\n    // used for fetching data periodically\n    timerInterval: any;\n\n    // get and set the web3 state when the component is mounted\n    componentDidMount = async () => {\n        const web3State = await connectWeb3(LockSeason.First);\n        this.setState(web3State);\n\n        // checks if account has changed in MetaMask\n        if ((window as any).ethereum.on) {\n            (window as any).ethereum.on('accountsChanged', this.handleAccountChange);\n        }\n\n        this.setState({ networkType: await this.state.web3.eth.net.getNetworkType() });\n\n        this.timerInterval = setInterval(() => {\n            this.getLockData().then(() => {\n                this.setState({ isLoading: false });\n            });\n        }, 1000);\n    };\n\n    isMainnet = () => {\n        return this.state.networkType === 'main';\n    };\n\n    componentWillUnmount = () => {\n        clearInterval(this.timerInterval);\n        removeWeb3Event();\n    };\n\n    // called when the user changes MetaMask account\n    handleAccountChange = () => {\n        // refresh the page\n        window.location.reload(false);\n    };\n\n    getLockData = async () => {\n        try {\n            // get all the lock events from the chain\n            const allLocks = await getAllLockEvents(this.state.web3, this.state.contract);\n\n            this.setState({ allLockEvents: allLocks });\n        } catch (error) {\n            this.setState({ error });\n        }\n    };\n\n    handleSubmit = async (formInputVal: LockInput) => {\n        this.setState({ isProcessing: true });\n\n        await submitLockTx(formInputVal, this.state.accounts[0], this.state.contract, toast);\n\n        this.setState({ isProcessing: false });\n    };\n\n    render() {\n        return (\n            <IonPage>\n                <Navbar />\n                <IonContent>\n                    <>\n                        {this.state.isLoading ? (\n                            <IonLoading isOpen={true} message={'Connecting to Wallet and fetching chain data...'} />\n                        ) : (\n                            <>\n                                {this.state.isProcessing ? (\n                                    <IonLoading\n                                        isOpen={this.state.isProcessing}\n                                        message={'Processing Transaction...'}\n                                    />\n                                ) : (\n                                    <></>\n                                )}\n\n                                <>\n                                    {this.isMainnet() ? (\n                                        <>\n                                            <SectionCard maxWidth=\"lg\">\n                                                <Typography variant=\"h2\" component=\"h4\" align=\"center\">\n                                                    Please access this page with a Ethereum testnet wallet\n                                                </Typography>\n                                            </SectionCard>\n                                        </>\n                                    ) : (\n                                        <>\n                                            <LockdropForm\n                                                token=\"ETH\"\n                                                onSubmit={this.handleSubmit}\n                                                description={formInfo}\n                                                dusty\n                                            />\n\n                                            <LockedEthList\n                                                web3={this.state.web3}\n                                                contractInstance={this.state.contract}\n                                                accounts={this.state.accounts}\n                                                lockData={this.state.allLockEvents}\n                                            />\n                                        </>\n                                    )}\n                                </>\n                            </>\n                        )}\n                    </>\n                    <Footer />\n                </IonContent>\n            </IonPage>\n        );\n    }\n}\nexport default DustyEthLockPage;\n","import React, { useState } from 'react';\nimport {\n    IonContent,\n    IonPage,\n    IonCard,\n    IonCardHeader,\n    IonCardSubtitle,\n    IonCardTitle,\n    IonCardContent,\n    IonItem,\n    IonIcon,\n    IonLabel,\n} from '@ionic/react';\nimport { warning } from 'ionicons/icons';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport SectionCard from '../components/SectionCard';\nimport { Typography, Link, makeStyles, createStyles } from '@material-ui/core';\nimport quantstampLogo from '../resources/quantstamp-logo.png';\nimport trezorLogo from '../resources/trezor_logo.svg';\nimport ledgerLogo from '../resources/ledger_logo.svg';\nimport TrezorConnect from 'trezor-connect';\nimport { initTrezor } from '../helpers/lockdrop/BitcoinLockdrop';\nimport { BtcWalletType } from '../models/LockdropModels';\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        formRoot: {\n            padding: theme.spacing(4, 3, 0),\n        },\n        txButton: {\n            margin: theme.spacing(3),\n        },\n        formLabel: {\n            margin: theme.spacing(2),\n        },\n        quantLogo: {\n            marginRight: theme.spacing(2),\n            maxHeight: 20,\n            height: '100%',\n            verticalAlign: 'middle',\n        },\n        textBox: {\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    }),\n);\n\nexport default function DustyBtcLockPage() {\n    const classes = useStyles();\n\n    const [walletType, setWalletType] = useState<BtcWalletType>(BtcWalletType.None);\n\n    const handleTrezor = async () => {\n        if (initTrezor()) {\n            const address = await TrezorConnect.getAddress({ path: \"m/49'/0/'0'\" });\n            console.log('logging in to trezor' + address.success + walletType);\n            setWalletType(BtcWalletType.Trezor);\n        } else {\n            console.log('failed to login to trezor');\n        }\n    };\n    const handleLedger = () => {\n        console.log('logging in to Ledger');\n        setWalletType(BtcWalletType.Ledger);\n    };\n    const handleRawTx = () => {\n        console.log('logging in to raw transaction');\n        setWalletType(BtcWalletType.Raw);\n    };\n\n    return (\n        <>\n            <IonPage>\n                <Navbar />\n                <IonContent>\n                    <SectionCard maxWidth=\"md\">\n                        <div>\n                            <Typography variant=\"h4\" component=\"h1\" align=\"center\">\n                                Dusty Plasm Network BTC Lockdrop\n                            </Typography>\n                            <Typography variant=\"body2\" component=\"h2\" align=\"center\">\n                                Audited by{' '}\n                                <Link\n                                    color=\"inherit\"\n                                    href=\"https://github.com/staketechnologies/lockdrop-ui/blob/16a2d495d85f2d311957b9cf366204fbfabadeaa/audit/quantstamp-audit.pdf\"\n                                    rel=\"noopener noreferrer\"\n                                    target=\"_blank\"\n                                >\n                                    <img src={quantstampLogo} alt=\"\" className={classes.quantLogo} />\n                                    {/*todo: This is a placeholder auditor, please change this to the actual one after the audit*/}\n                                </Link>\n                            </Typography>\n                        </div>\n                        <IonCard>\n                            <IonCardHeader>\n                                <IonCardSubtitle>Choose your message signing method</IonCardSubtitle>\n                                <IonCardTitle>Sign in</IonCardTitle>\n                            </IonCardHeader>\n\n                            <IonCardContent>\n                                <IonItem button onClick={() => handleTrezor()} disabled>\n                                    <IonIcon icon={trezorLogo} slot=\"start\" />\n                                    <IonLabel>Sign in with Trezor</IonLabel>\n                                </IonItem>\n\n                                <IonItem button onClick={() => handleLedger()} disabled>\n                                    <IonIcon icon={ledgerLogo} slot=\"start\" />\n                                    <IonLabel>Sign in with Ledger</IonLabel>\n                                </IonItem>\n\n                                <IonItem button onClick={() => handleRawTx()}>\n                                    <IonIcon icon={warning} slot=\"start\" />\n                                    <IonLabel>Direct import (Unsafe)</IonLabel>\n                                </IonItem>\n                            </IonCardContent>\n                        </IonCard>\n                    </SectionCard>\n                    <Footer />\n                </IonContent>\n            </IonPage>\n        </>\n    );\n}\n","import React from 'react';\nimport { IonMenu, IonListHeader, IonContent, IonList, IonItem, IonIcon, IonLabel, IonRouterLink } from '@ionic/react';\nimport { Links } from '../data/links';\nimport homeIcon from '../resources/home-outline.svg';\nimport twitter from '../resources/logo-twitter.svg';\nimport discord from '../resources/logo-discord.svg';\nimport telegram from '../resources/logo-telegram.svg';\nimport github from '../resources/logo-github.svg';\nimport { firstLock, secondLock, dustyLock } from '../data/lockInfo';\n\nconst SideMenu: React.FC = () => {\n    return (\n        <>\n            <IonMenu contentId=\"main\">\n                <IonListHeader>Sitemap</IonListHeader>\n                <IonContent>\n                    <IonList>\n                        <IonRouterLink routerLink=\"/lock-form\">\n                            <IonItem button detail>\n                                <IonIcon src={homeIcon} slot=\"start\" />\n                                <IonLabel>Home</IonLabel>\n                            </IonItem>\n                        </IonRouterLink>\n                    </IonList>\n                    <IonList>\n                        <IonListHeader>First Lockdrop</IonListHeader>\n                        {firstLock.map((i, index) => (\n                            <IonRouterLink routerLink={i.uri} key={index}>\n                                <IonItem button detail>\n                                    <IonIcon src={i.icon} slot=\"start\" />\n                                    <IonLabel>{i.title}</IonLabel>\n                                </IonItem>\n                            </IonRouterLink>\n                        ))}\n                    </IonList>\n                    <IonList>\n                        <IonListHeader>Second Lockdrop</IonListHeader>\n                        {secondLock.map((i, index) => (\n                            <IonRouterLink routerLink={i.uri} key={index}>\n                                <IonItem button disabled detail>\n                                    <IonIcon src={i.icon} slot=\"start\" />\n                                    <IonLabel>{i.title}</IonLabel>\n                                </IonItem>\n                            </IonRouterLink>\n                        ))}\n\n                        {/* <IonRouterLink routerLink=\"/lock-form/first\">\n                            <IonItem button disabled detail>\n                                <IonIcon src={ethLogo} slot=\"start\" />\n                                <IonLabel>ETH Lock</IonLabel>\n                            </IonItem>\n                        </IonRouterLink>\n                        <IonRouterLink routerLink=\"/lock-form/first\">\n                            <IonItem button disabled detail>\n                                <IonIcon src={btcLogo} slot=\"start\" />\n                                <IonLabel>BTC Lock</IonLabel>\n                            </IonItem>\n                        </IonRouterLink> */}\n                    </IonList>\n\n                    <IonList>\n                        <IonListHeader>Dusty Lockdrop</IonListHeader>\n                        {dustyLock.map((i, index) => (\n                            <IonRouterLink routerLink={i.uri} key={index}>\n                                <IonItem button detail disabled={i.disabled}>\n                                    <IonIcon src={i.icon} slot=\"start\" />\n                                    <IonLabel>{i.title}</IonLabel>\n                                </IonItem>\n                            </IonRouterLink>\n                        ))}\n                    </IonList>\n\n                    <IonList>\n                        <IonListHeader>External Links</IonListHeader>\n                        <IonItem button href={Links.discord} detail>\n                            <IonIcon src={discord} slot=\"start\" />\n                            <IonLabel>Discord</IonLabel>\n                        </IonItem>\n                        <IonItem button href={Links.telegram} detail>\n                            <IonIcon src={telegram} slot=\"start\" />\n                            <IonLabel>Telegram</IonLabel>\n                        </IonItem>\n                        <IonItem button href={Links.twitter} detail>\n                            <IonIcon src={twitter} slot=\"start\" />\n                            <IonLabel>Twitter</IonLabel>\n                        </IonItem>\n                        <IonItem button href={Links.github} detail>\n                            <IonIcon src={github} slot=\"start\" />\n                            <IonLabel>Github</IonLabel>\n                        </IonItem>\n                    </IonList>\n                </IonContent>\n            </IonMenu>\n        </>\n    );\n};\n\nexport default SideMenu;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { IonApp, IonRouterOutlet, IonSplitPane } from '@ionic/react';\nimport { IonReactHashRouter } from '@ionic/react-router';\nimport LandingPage from './pages/LandingPage';\nimport EthLockdropPage from './pages/EthLockdropPage';\nimport DustyEthLockPage from './pages/DustyEthLockPage';\nimport DustyBtcLockPage from './pages/DustyBtcLockPage';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\nimport SideMenu from './components/SideMenu';\n\nconst App: React.FC = () => {\n    return (\n        <IonApp>\n            <IonReactHashRouter>\n                <IonSplitPane contentId=\"main\" when=\"lg\">\n                    <SideMenu />\n\n                    <IonRouterOutlet id=\"main\" animated>\n                        <Route exact path=\"/lock-form\" component={LandingPage} />\n                        <Route path=\"/lock-form/first\" component={EthLockdropPage} />\n                        <Route path=\"/lock-form/dusty-eth\" component={DustyEthLockPage} />\n                        <Route path=\"/lock-form/dusty-btc\" component={DustyBtcLockPage} />\n                        <Route exact path=\"/\" render={() => <Redirect to=\"/lock-form\" />} />\n                    </IonRouterOutlet>\n                </IonSplitPane>\n            </IonReactHashRouter>\n        </IonApp>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n/* eslint-disable-line  no-use-before-define */\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport Web3 from 'web3';\nimport { Contract } from 'web3-eth-contract';\n\n// define web3 instance as a global variable\ndeclare global {\n    interface Window {\n        web3: Web3;\n        contract: Contract;\n    }\n}\nwindow.contract = window.contract || {};\nwindow.web3 = window.web3 || {};\n\nconst theme = createMuiTheme({\n    typography: {\n        fontFamily: [\n            'Work Sans',\n            '-apple-system',\n            'BlinkMacSystemFont',\n            'Segoe UI',\n            'Roboto',\n            'Oxygen',\n            'Ubuntu',\n            'Cantarell',\n            'Fira Sans',\n            'Droid Sans',\n            'Helvetica Neue',\n        ].join(','),\n    },\n    palette: {\n        primary: {\n            main: '#4791db',\n            light: '#1976d2',\n            dark: '#115293',\n        },\n    },\n});\n\nReactDOM.render(\n    <MuiThemeProvider theme={theme}>\n        <App />\n    </MuiThemeProvider>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/bitcoin_logo.c200e932.svg\";","module.exports = __webpack_public_path__ + \"static/media/quantstamp-logo.a01ad5b8.png\";","module.exports = __webpack_public_path__ + \"static/media/plasm-logo.e814f1e5.png\";","module.exports = __webpack_public_path__ + \"static/media/ld_logo_a.c31d8b0a.png\";","module.exports = __webpack_public_path__ + \"static/media/ld_logo_b.5a855f2c.png\";","module.exports = __webpack_public_path__ + \"static/media/trezor_logo.a777e1f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/ledger_logo.ed75ad32.svg\";","import { Message } from 'bitcore-lib';\nimport * as bitcoin from 'bitcoinjs-lib';\nimport bip68 from 'bip68';\nimport { UnspentTx } from '../../models/LockdropModels';\nimport { Transaction, Signer, Network } from 'bitcoinjs-lib';\nimport TrezorConnect from 'trezor-connect';\n\n//const BTC_TX_API_TESTNET = 'https://api.blockcypher.com/v1/btc/test3/txs/';\n//const BTC_ADDR_API_TESTNET = 'https://api.blockcypher.com/v1/btc/test3/addrs/';\n\n//const BTC_TX_API_MAINNET = 'https://api.blockcypher.com/v1/btc/main/txs/';\n//const BTC_ADDR_API_MAINNET = 'https://api.blockcypher.com/v1/btc/main/addrs/';\n//const QR_GEN_API = 'https://chart.googleapis.com/chart?chs=250x250&cht=qr&chl=';\n\nexport const MESSAGE = 'plasm network btc lock';\n\n// initialize Trezor instance. This will return true if successful\nexport function initTrezor() {\n    try {\n        TrezorConnect.init({\n            manifest: {\n                email: 'hoonkim@stake.co.jp',\n                appUrl: 'https://lockdrop.plasmnet.io',\n            },\n            debug: true,\n        });\n        return true;\n    } catch (e) {\n        console.log(e);\n        return false;\n    }\n}\n\n// used for CHECKSEQUENCEVERIFY relative time lock. converts days to bip68 encoded block number\nexport function daysToBlocks(days: number) {\n    const blocksPerDay = 144; //10 min per block. day = 6 * 24\n    return bip68.encode({ blocks: days * blocksPerDay });\n}\n\nexport function btcLockScript(publicKeyHex: string, blocks: number): Buffer {\n    return bitcoin.script.fromASM(\n        `\n        ${bitcoin.script.number.encode(bip68.encode({ blocks })).toString('hex')}\n        OP_CHECKSEQUENCEVERIFY\n        OP_DROP\n        ${publicKeyHex}\n        OP_CHECKSIG\n        `\n            .trim()\n            .replace(/\\s+/g, ' '),\n    );\n}\n\nexport function getPublicKey(address: string, signature: string) {\n    return new Message(MESSAGE).recoverPublicKey(address, signature);\n}\n\nexport function btcUnlockTx(\n    signer: Signer,\n    network: Network,\n    lockTx: UnspentTx,\n    lockScript: Buffer,\n    lockBlocks: number,\n    recipient: string,\n    fee: number, // satoshis\n): Transaction {\n    function idToHash(txid: string): Buffer {\n        return Buffer.from(txid, 'hex').reverse();\n    }\n    function toOutputScript(address: string): Buffer {\n        return bitcoin.address.toOutputScript(address, network);\n    }\n\n    const sequence = bip68.encode({ blocks: lockBlocks });\n    const tx = new bitcoin.Transaction();\n    tx.version = 2;\n    tx.addInput(idToHash(lockTx.txId), lockTx.vout, sequence);\n    tx.addOutput(toOutputScript(recipient), lockTx.value - fee);\n\n    const hashType = bitcoin.Transaction.SIGHASH_ALL;\n    const signatureHash = tx.hashForSignature(0, lockScript, hashType);\n    const signature = bitcoin.script.signature.encode(signer.sign(signatureHash), hashType);\n\n    const redeemScriptSig = bitcoin.payments.p2sh({\n        network,\n        redeem: {\n            network,\n            output: lockScript,\n            input: bitcoin.script.compile([signature]),\n        },\n    }).input;\n    if (redeemScriptSig instanceof Buffer) {\n        tx.setInputScript(0, redeemScriptSig);\n    } else {\n        throw new Error('Transaction is invalid');\n    }\n\n    return tx;\n}\n","module.exports = __webpack_public_path__ + \"static/media/home-outline.5d4dea4a.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-twitter.27ff8f62.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-discord.fee2b0c7.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-telegram.ed1ca736.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-github.01fb3515.svg\";","var map = {\n\t\"./ion-action-sheet-controller_8.entry.js\": [\n\t\t1144,\n\t\t43\n\t],\n\t\"./ion-action-sheet-ios.entry.js\": [\n\t\t1145,\n\t\t44\n\t],\n\t\"./ion-action-sheet-md.entry.js\": [\n\t\t1146,\n\t\t45\n\t],\n\t\"./ion-alert-ios.entry.js\": [\n\t\t1147,\n\t\t24\n\t],\n\t\"./ion-alert-md.entry.js\": [\n\t\t1148,\n\t\t25\n\t],\n\t\"./ion-app_8-ios.entry.js\": [\n\t\t1149,\n\t\t11\n\t],\n\t\"./ion-app_8-md.entry.js\": [\n\t\t1150,\n\t\t12\n\t],\n\t\"./ion-avatar_3-ios.entry.js\": [\n\t\t1151,\n\t\t46\n\t],\n\t\"./ion-avatar_3-md.entry.js\": [\n\t\t1152,\n\t\t47\n\t],\n\t\"./ion-back-button-ios.entry.js\": [\n\t\t1153,\n\t\t48\n\t],\n\t\"./ion-back-button-md.entry.js\": [\n\t\t1154,\n\t\t49\n\t],\n\t\"./ion-backdrop-ios.entry.js\": [\n\t\t1155,\n\t\t81\n\t],\n\t\"./ion-backdrop-md.entry.js\": [\n\t\t1156,\n\t\t82\n\t],\n\t\"./ion-button_2-ios.entry.js\": [\n\t\t1157,\n\t\t50\n\t],\n\t\"./ion-button_2-md.entry.js\": [\n\t\t1158,\n\t\t51\n\t],\n\t\"./ion-card_5-ios.entry.js\": [\n\t\t1159,\n\t\t52\n\t],\n\t\"./ion-card_5-md.entry.js\": [\n\t\t1160,\n\t\t53\n\t],\n\t\"./ion-checkbox-ios.entry.js\": [\n\t\t1161,\n\t\t54\n\t],\n\t\"./ion-checkbox-md.entry.js\": [\n\t\t1162,\n\t\t55\n\t],\n\t\"./ion-chip-ios.entry.js\": [\n\t\t1163,\n\t\t56\n\t],\n\t\"./ion-chip-md.entry.js\": [\n\t\t1164,\n\t\t57\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t1165,\n\t\t83\n\t],\n\t\"./ion-datetime_3-ios.entry.js\": [\n\t\t1166,\n\t\t20\n\t],\n\t\"./ion-datetime_3-md.entry.js\": [\n\t\t1167,\n\t\t21\n\t],\n\t\"./ion-fab_3-ios.entry.js\": [\n\t\t1168,\n\t\t58\n\t],\n\t\"./ion-fab_3-md.entry.js\": [\n\t\t1169,\n\t\t59\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t1170,\n\t\t84\n\t],\n\t\"./ion-infinite-scroll_2-ios.entry.js\": [\n\t\t1171,\n\t\t39\n\t],\n\t\"./ion-infinite-scroll_2-md.entry.js\": [\n\t\t1172,\n\t\t40\n\t],\n\t\"./ion-input-ios.entry.js\": [\n\t\t1173,\n\t\t60\n\t],\n\t\"./ion-input-md.entry.js\": [\n\t\t1174,\n\t\t61\n\t],\n\t\"./ion-item-option_3-ios.entry.js\": [\n\t\t1175,\n\t\t62\n\t],\n\t\"./ion-item-option_3-md.entry.js\": [\n\t\t1176,\n\t\t63\n\t],\n\t\"./ion-item_8-ios.entry.js\": [\n\t\t1177,\n\t\t64\n\t],\n\t\"./ion-item_8-md.entry.js\": [\n\t\t1178,\n\t\t65\n\t],\n\t\"./ion-loading-ios.entry.js\": [\n\t\t1179,\n\t\t26\n\t],\n\t\"./ion-loading-md.entry.js\": [\n\t\t1180,\n\t\t27\n\t],\n\t\"./ion-menu_4-ios.entry.js\": [\n\t\t1181,\n\t\t18\n\t],\n\t\"./ion-menu_4-md.entry.js\": [\n\t\t1182,\n\t\t19\n\t],\n\t\"./ion-modal-ios.entry.js\": [\n\t\t1183,\n\t\t14\n\t],\n\t\"./ion-modal-md.entry.js\": [\n\t\t1184,\n\t\t15\n\t],\n\t\"./ion-nav_5.entry.js\": [\n\t\t1185,\n\t\t13\n\t],\n\t\"./ion-popover-ios.entry.js\": [\n\t\t1186,\n\t\t16\n\t],\n\t\"./ion-popover-md.entry.js\": [\n\t\t1187,\n\t\t17\n\t],\n\t\"./ion-progress-bar-ios.entry.js\": [\n\t\t1188,\n\t\t66\n\t],\n\t\"./ion-progress-bar-md.entry.js\": [\n\t\t1189,\n\t\t67\n\t],\n\t\"./ion-radio_2-ios.entry.js\": [\n\t\t1190,\n\t\t32\n\t],\n\t\"./ion-radio_2-md.entry.js\": [\n\t\t1191,\n\t\t33\n\t],\n\t\"./ion-range-ios.entry.js\": [\n\t\t1192,\n\t\t68\n\t],\n\t\"./ion-range-md.entry.js\": [\n\t\t1193,\n\t\t69\n\t],\n\t\"./ion-refresher_2-ios.entry.js\": [\n\t\t1194,\n\t\t41\n\t],\n\t\"./ion-refresher_2-md.entry.js\": [\n\t\t1195,\n\t\t42\n\t],\n\t\"./ion-reorder_2-ios.entry.js\": [\n\t\t1196,\n\t\t37\n\t],\n\t\"./ion-reorder_2-md.entry.js\": [\n\t\t1197,\n\t\t38\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t1198,\n\t\t85\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t1199,\n\t\t70\n\t],\n\t\"./ion-searchbar-ios.entry.js\": [\n\t\t1200,\n\t\t28\n\t],\n\t\"./ion-searchbar-md.entry.js\": [\n\t\t1201,\n\t\t29\n\t],\n\t\"./ion-segment_2-ios.entry.js\": [\n\t\t1202,\n\t\t71\n\t],\n\t\"./ion-segment_2-md.entry.js\": [\n\t\t1203,\n\t\t72\n\t],\n\t\"./ion-select_3-ios.entry.js\": [\n\t\t1204,\n\t\t34\n\t],\n\t\"./ion-select_3-md.entry.js\": [\n\t\t1205,\n\t\t35\n\t],\n\t\"./ion-slide_2-ios.entry.js\": [\n\t\t1206,\n\t\t86\n\t],\n\t\"./ion-slide_2-md.entry.js\": [\n\t\t1207,\n\t\t87\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t1208,\n\t\t73\n\t],\n\t\"./ion-split-pane-ios.entry.js\": [\n\t\t1209,\n\t\t88\n\t],\n\t\"./ion-split-pane-md.entry.js\": [\n\t\t1210,\n\t\t89\n\t],\n\t\"./ion-tab-bar_2-ios.entry.js\": [\n\t\t1211,\n\t\t74\n\t],\n\t\"./ion-tab-bar_2-md.entry.js\": [\n\t\t1212,\n\t\t75\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t1213,\n\t\t36\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t1214,\n\t\t76\n\t],\n\t\"./ion-textarea-ios.entry.js\": [\n\t\t1215,\n\t\t77\n\t],\n\t\"./ion-textarea-md.entry.js\": [\n\t\t1216,\n\t\t78\n\t],\n\t\"./ion-toast-ios.entry.js\": [\n\t\t1217,\n\t\t30\n\t],\n\t\"./ion-toast-md.entry.js\": [\n\t\t1218,\n\t\t31\n\t],\n\t\"./ion-toggle-ios.entry.js\": [\n\t\t1219,\n\t\t22\n\t],\n\t\"./ion-toggle-md.entry.js\": [\n\t\t1220,\n\t\t23\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t1221,\n\t\t90\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 559;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t1225,\n\t\t98\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 561;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}