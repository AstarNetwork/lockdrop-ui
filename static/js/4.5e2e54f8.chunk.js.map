{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/input-shims-a4fc53ac.js"],"names":["cloneMap","WeakMap","relocateInput","componentEl","inputEl","shouldRelocate","inputRelativeY","has","addClone","removeClone","isFocused","input","getRootNode","activeElement","parentEl","parentNode","clonedEl","cloneNode","classList","add","tabIndex","appendChild","set","tx","ownerDocument","dir","style","pointerEvents","transform","clone","get","delete","remove","SKIP_SELECTOR","calcScrollData","inputRect","contentRect","keyboardHeight","platformHeight","inputTop","top","inputBottom","bottom","visibleAreaTop","safeAreaTop","distanceToBottom","Math","min","distanceToTop","desiredScrollAmount","round","scrollAmount","duration","abs","scrollDuration","max","scrollPadding","inputSafeY","jsSetFocus","contentEl","scrollData","itemEl","closest","getBoundingClientRect","defaultView","innerHeight","getScrollData","focus","scrollByPoint","then","hasPointerMoved","threshold","startCoord","endCoord","deltaX","x","deltaY","y","setScrollPadding","tagName","parentElement","el","timer","clearTimeout","setProperty","setTimeout","startInputShims","config","doc","document","getNumber","scrollAssist","getBoolean","hideCaret","inputBlurring","inputs","Array","from","querySelectorAll","hideCaretMap","scrollAssistMap","registerInput","shadowRoot","querySelector","scrollEl","rmFn","scrollHideCaret","shouldHideCaret","onBlur","showCaret","addEventListener","removeEventListener","enableHideCaretOnScroll","coord","touchStart","ev","pointerCoord","touchEnd","preventDefault","stopPropagation","enableScrollAssist","focused","didScroll","onScroll","onFocusin","onTouchend","active","matches","tapped","target","blur","enableInputBlurring","onFocusout","enableScrollPadding","_i","inputs_1","length","detail","fn","unregisterInput"],"mappings":"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","file":"static/js/4.5e2e54f8.chunk.js","sourcesContent":["import { p as pointerCoord } from './helpers-46f4a262.js';\nvar cloneMap = new WeakMap();\nvar relocateInput = function (componentEl, inputEl, shouldRelocate, inputRelativeY) {\n    if (inputRelativeY === void 0) { inputRelativeY = 0; }\n    if (cloneMap.has(componentEl) === shouldRelocate) {\n        return;\n    }\n    if (shouldRelocate) {\n        addClone(componentEl, inputEl, inputRelativeY);\n    }\n    else {\n        removeClone(componentEl, inputEl);\n    }\n};\nvar isFocused = function (input) {\n    return input === input.getRootNode().activeElement;\n};\nvar addClone = function (componentEl, inputEl, inputRelativeY) {\n    // this allows for the actual input to receive the focus from\n    // the user's touch event, but before it receives focus, it\n    // moves the actual input to a location that will not screw\n    // up the app's layout, and does not allow the native browser\n    // to attempt to scroll the input into place (messing up headers/footers)\n    // the cloned input fills the area of where native input should be\n    // while the native input fakes out the browser by relocating itself\n    // before it receives the actual focus event\n    // We hide the focused input (with the visible caret) invisible by making it scale(0),\n    var parentEl = inputEl.parentNode;\n    // DOM WRITES\n    var clonedEl = inputEl.cloneNode(false);\n    clonedEl.classList.add('cloned-input');\n    clonedEl.tabIndex = -1;\n    parentEl.appendChild(clonedEl);\n    cloneMap.set(componentEl, clonedEl);\n    var doc = componentEl.ownerDocument;\n    var tx = doc.dir === 'rtl' ? 9999 : -9999;\n    componentEl.style.pointerEvents = 'none';\n    inputEl.style.transform = \"translate3d(\" + tx + \"px,\" + inputRelativeY + \"px,0) scale(0)\";\n};\nvar removeClone = function (componentEl, inputEl) {\n    var clone = cloneMap.get(componentEl);\n    if (clone) {\n        cloneMap.delete(componentEl);\n        clone.remove();\n    }\n    componentEl.style.pointerEvents = '';\n    inputEl.style.transform = '';\n};\nvar enableHideCaretOnScroll = function (componentEl, inputEl, scrollEl) {\n    if (!scrollEl || !inputEl) {\n        return function () { return; };\n    }\n    var scrollHideCaret = function (shouldHideCaret) {\n        if (isFocused(inputEl)) {\n            relocateInput(componentEl, inputEl, shouldHideCaret);\n        }\n    };\n    var onBlur = function () { return relocateInput(componentEl, inputEl, false); };\n    var hideCaret = function () { return scrollHideCaret(true); };\n    var showCaret = function () { return scrollHideCaret(false); };\n    scrollEl.addEventListener('ionScrollStart', hideCaret);\n    scrollEl.addEventListener('ionScrollEnd', showCaret);\n    inputEl.addEventListener('blur', onBlur);\n    return function () {\n        scrollEl.removeEventListener('ionScrollStart', hideCaret);\n        scrollEl.removeEventListener('ionScrollEnd', showCaret);\n        inputEl.addEventListener('ionBlur', onBlur);\n    };\n};\nvar SKIP_SELECTOR = 'input, textarea, [no-blur]';\nvar enableInputBlurring = function () {\n    var focused = true;\n    var didScroll = false;\n    var doc = document;\n    var onScroll = function () {\n        didScroll = true;\n    };\n    var onFocusin = function () {\n        focused = true;\n    };\n    var onTouchend = function (ev) {\n        // if app did scroll return early\n        if (didScroll) {\n            didScroll = false;\n            return;\n        }\n        var active = doc.activeElement;\n        if (!active) {\n            return;\n        }\n        // only blur if the active element is a text-input or a textarea\n        if (active.matches(SKIP_SELECTOR)) {\n            return;\n        }\n        // if the selected target is the active element, do not blur\n        var tapped = ev.target;\n        if (tapped === active) {\n            return;\n        }\n        if (tapped.matches(SKIP_SELECTOR) || tapped.closest(SKIP_SELECTOR)) {\n            return;\n        }\n        focused = false;\n        // TODO: find a better way, why 50ms?\n        setTimeout(function () {\n            if (!focused) {\n                active.blur();\n            }\n        }, 50);\n    };\n    doc.addEventListener('ionScrollStart', onScroll);\n    doc.addEventListener('focusin', onFocusin, true);\n    doc.addEventListener('touchend', onTouchend, false);\n    return function () {\n        doc.removeEventListener('ionScrollStart', onScroll, true);\n        doc.removeEventListener('focusin', onFocusin, true);\n        doc.removeEventListener('touchend', onTouchend, false);\n    };\n};\nvar SCROLL_ASSIST_SPEED = 0.3;\nvar getScrollData = function (componentEl, contentEl, keyboardHeight) {\n    var itemEl = componentEl.closest('ion-item,[ion-item]') || componentEl;\n    return calcScrollData(itemEl.getBoundingClientRect(), contentEl.getBoundingClientRect(), keyboardHeight, componentEl.ownerDocument.defaultView.innerHeight);\n};\nvar calcScrollData = function (inputRect, contentRect, keyboardHeight, platformHeight) {\n    // compute input's Y values relative to the body\n    var inputTop = inputRect.top;\n    var inputBottom = inputRect.bottom;\n    // compute visible area\n    var visibleAreaTop = contentRect.top;\n    var visibleAreaBottom = Math.min(contentRect.bottom, platformHeight - keyboardHeight);\n    // compute safe area\n    var safeAreaTop = visibleAreaTop + 15;\n    var safeAreaBottom = visibleAreaBottom * 0.5;\n    // figure out if each edge of the input is within the safe area\n    var distanceToBottom = safeAreaBottom - inputBottom;\n    var distanceToTop = safeAreaTop - inputTop;\n    // desiredScrollAmount is the negated distance to the safe area according to our calculations.\n    var desiredScrollAmount = Math.round((distanceToBottom < 0)\n        ? -distanceToBottom\n        : (distanceToTop > 0)\n            ? -distanceToTop\n            : 0);\n    // our calculations make some assumptions that aren't always true, like the keyboard being closed when an input\n    // gets focus, so make sure we don't scroll the input above the visible area\n    var scrollAmount = Math.min(desiredScrollAmount, inputTop - visibleAreaTop);\n    var distance = Math.abs(scrollAmount);\n    var duration = distance / SCROLL_ASSIST_SPEED;\n    var scrollDuration = Math.min(400, Math.max(150, duration));\n    return {\n        scrollAmount: scrollAmount,\n        scrollDuration: scrollDuration,\n        scrollPadding: keyboardHeight,\n        inputSafeY: -(inputTop - safeAreaTop) + 4\n    };\n};\nvar enableScrollAssist = function (componentEl, inputEl, contentEl, keyboardHeight) {\n    var coord;\n    var touchStart = function (ev) {\n        coord = pointerCoord(ev);\n    };\n    var touchEnd = function (ev) {\n        // input cover touchend/mouseup\n        if (!coord) {\n            return;\n        }\n        // get where the touchend/mouseup ended\n        var endCoord = pointerCoord(ev);\n        // focus this input if the pointer hasn't moved XX pixels\n        // and the input doesn't already have focus\n        if (!hasPointerMoved(6, coord, endCoord) && !isFocused(inputEl)) {\n            ev.preventDefault();\n            ev.stopPropagation();\n            // begin the input focus process\n            jsSetFocus(componentEl, inputEl, contentEl, keyboardHeight);\n        }\n    };\n    componentEl.addEventListener('touchstart', touchStart, true);\n    componentEl.addEventListener('touchend', touchEnd, true);\n    return function () {\n        componentEl.removeEventListener('touchstart', touchStart, true);\n        componentEl.removeEventListener('touchend', touchEnd, true);\n    };\n};\nvar jsSetFocus = function (componentEl, inputEl, contentEl, keyboardHeight) {\n    var scrollData = getScrollData(componentEl, contentEl, keyboardHeight);\n    if (Math.abs(scrollData.scrollAmount) < 4) {\n        // the text input is in a safe position that doesn't\n        // require it to be scrolled into view, just set focus now\n        inputEl.focus();\n        return;\n    }\n    // temporarily move the focus to the focus holder so the browser\n    // doesn't freak out while it's trying to get the input in place\n    // at this point the native text input still does not have focus\n    relocateInput(componentEl, inputEl, true, scrollData.inputSafeY);\n    inputEl.focus();\n    // scroll the input into place\n    contentEl.scrollByPoint(0, scrollData.scrollAmount, scrollData.scrollDuration).then(function () {\n        // the scroll view is in the correct position now\n        // give the native text input focus\n        relocateInput(componentEl, inputEl, false, scrollData.inputSafeY);\n        // ensure this is the focused input\n        inputEl.focus();\n    });\n};\nvar hasPointerMoved = function (threshold, startCoord, endCoord) {\n    if (startCoord && endCoord) {\n        var deltaX = (startCoord.x - endCoord.x);\n        var deltaY = (startCoord.y - endCoord.y);\n        var distance = deltaX * deltaX + deltaY * deltaY;\n        return distance > (threshold * threshold);\n    }\n    return false;\n};\nvar PADDING_TIMER_KEY = '$ionPaddingTimer';\nvar enableScrollPadding = function (keyboardHeight) {\n    var doc = document;\n    var onFocusin = function (ev) {\n        setScrollPadding(ev.target, keyboardHeight);\n    };\n    var onFocusout = function (ev) {\n        setScrollPadding(ev.target, 0);\n    };\n    doc.addEventListener('focusin', onFocusin);\n    doc.addEventListener('focusout', onFocusout);\n    return function () {\n        doc.removeEventListener('focusin', onFocusin);\n        doc.removeEventListener('focusout', onFocusout);\n    };\n};\nvar setScrollPadding = function (input, keyboardHeight) {\n    if (input.tagName !== 'INPUT') {\n        return;\n    }\n    if (input.parentElement && input.parentElement.tagName === 'ION-INPUT') {\n        return;\n    }\n    if (input.parentElement &&\n        input.parentElement.parentElement &&\n        input.parentElement.parentElement.tagName === 'ION-SEARCHBAR') {\n        return;\n    }\n    var el = input.closest('ion-content');\n    if (el === null) {\n        return;\n    }\n    var timer = el[PADDING_TIMER_KEY];\n    if (timer) {\n        clearTimeout(timer);\n    }\n    if (keyboardHeight > 0) {\n        el.style.setProperty('--keyboard-offset', keyboardHeight + \"px\");\n    }\n    else {\n        el[PADDING_TIMER_KEY] = setTimeout(function () {\n            el.style.setProperty('--keyboard-offset', '0px');\n        }, 120);\n    }\n};\nvar INPUT_BLURRING = true;\nvar SCROLL_PADDING = true;\nvar startInputShims = function (config) {\n    var doc = document;\n    var keyboardHeight = config.getNumber('keyboardHeight', 290);\n    var scrollAssist = config.getBoolean('scrollAssist', true);\n    var hideCaret = config.getBoolean('hideCaretOnScroll', true);\n    var inputBlurring = config.getBoolean('inputBlurring', true);\n    var scrollPadding = config.getBoolean('scrollPadding', true);\n    var inputs = Array.from(doc.querySelectorAll('ion-input, ion-textarea'));\n    var hideCaretMap = new WeakMap();\n    var scrollAssistMap = new WeakMap();\n    var registerInput = function (componentEl) {\n        var inputEl = (componentEl.shadowRoot || componentEl).querySelector('input') || (componentEl.shadowRoot || componentEl).querySelector('textarea');\n        var scrollEl = componentEl.closest('ion-content');\n        if (!inputEl) {\n            return;\n        }\n        if (!!scrollEl && hideCaret && !hideCaretMap.has(componentEl)) {\n            var rmFn = enableHideCaretOnScroll(componentEl, inputEl, scrollEl);\n            hideCaretMap.set(componentEl, rmFn);\n        }\n        if (!!scrollEl && scrollAssist && !scrollAssistMap.has(componentEl)) {\n            var rmFn = enableScrollAssist(componentEl, inputEl, scrollEl, keyboardHeight);\n            scrollAssistMap.set(componentEl, rmFn);\n        }\n    };\n    var unregisterInput = function (componentEl) {\n        if (hideCaret) {\n            var fn = hideCaretMap.get(componentEl);\n            if (fn) {\n                fn();\n            }\n            hideCaretMap.delete(componentEl);\n        }\n        if (scrollAssist) {\n            var fn = scrollAssistMap.get(componentEl);\n            if (fn) {\n                fn();\n            }\n            scrollAssistMap.delete(componentEl);\n        }\n    };\n    if (inputBlurring && INPUT_BLURRING) {\n        enableInputBlurring();\n    }\n    if (scrollPadding && SCROLL_PADDING) {\n        enableScrollPadding(keyboardHeight);\n    }\n    // Input might be already loaded in the DOM before ion-device-hacks did.\n    // At this point we need to look for all of the inputs not registered yet\n    // and register them.\n    for (var _i = 0, inputs_1 = inputs; _i < inputs_1.length; _i++) {\n        var input = inputs_1[_i];\n        registerInput(input);\n    }\n    doc.addEventListener('ionInputDidLoad', (function (ev) {\n        registerInput(ev.detail);\n    }));\n    doc.addEventListener('ionInputDidUnload', (function (ev) {\n        unregisterInput(ev.detail);\n    }));\n};\nexport { startInputShims };\n"],"sourceRoot":""}