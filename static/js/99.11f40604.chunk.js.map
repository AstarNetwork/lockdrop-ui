{"version":3,"sources":["../node_modules/ionicons/dist/esm/legacy/shadow-css-984bac74-549b16dd.js"],"names":["scopeCss","cssText","scopeId","commentOriginalSelector","ShadowCss","shimCssText","this","strictStyling","prototype","hostScopeId","slotScopeId","commentsWithHash","match","_commentWithHashRe","input","replace","_commentRe","stripComments","orgSelectors","processCommentedSelector_1","rule","placeholder","length","comment","selector","push","processRules","startsWith","content","scopedCssText","_scopeCssText","concat","join","forEach","_a","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertColonSlotted","_convertShadowDOMSelectors","_scopeSelectors","trim","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","slotAttr","regExp","_cssColonSlottedRe","m","_i","arguments","compound","suffix","sel","_polyfillHostNoCombinator","_cssColonHostContextRe","_colonHostContextPartReplacer","partReplacer","parts","split","r","i","p","host","part","indexOf","_polyfillHost","_shadowDOMSelectorsRe","reduce","result","pattern","scopeSelector","hostSelector","slotSelector","_this","_scopeSelector","CssRule","strict","map","shallowPart","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","_makeScopeMatcher","test","RegExp","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","lastIndex","replaceBy_1","_polyfillHostNoCombinatorRe","_","before","colon","after","res","className","_scopeSelectorPart","scopedP","t","matches","safeContent","SafeSelector","scopedSelector","startIndex","sep","shouldScope","exec","separator","part_1","slice","index","substring","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","_colonSlottedRe","_polyfillSlotted","placeholders","keep","replaceBy","_content","pseudo","exp","_parenSuffix","_ruleRe","_curlyRe","BLOCK_PLACEHOLDER","ruleCallback","inputWithEscapedBlocks","inputParts","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","StringWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","contentPrefix","blocks"],"mappings":"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","file":"static/js/99.11f40604.chunk.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n *\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\n */\nfunction scopeCss(cssText, scopeId, commentOriginalSelector) {\n    var sc = new ShadowCss();\n    return sc.shimCssText(cssText, scopeId, scopeId + '-h', scopeId + '-s', commentOriginalSelector);\n}\nvar ShadowCss = /** @class */ (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    ShadowCss.prototype.shimCssText = function (cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) {\n        if (hostScopeId === void 0) { hostScopeId = ''; }\n        if (slotScopeId === void 0) { slotScopeId = ''; }\n        if (commentOriginalSelector === void 0) { commentOriginalSelector = false; }\n        var commentsWithHash = extractCommentsWithHash(cssText);\n        cssText = stripComments(cssText);\n        var orgSelectors = [];\n        if (commentOriginalSelector) {\n            var processCommentedSelector_1 = function (rule) {\n                var placeholder = \"/*!@___\" + orgSelectors.length + \"___*/\";\n                var comment = \"/*!@\" + rule.selector + \"*/\";\n                orgSelectors.push({ placeholder: placeholder, comment: comment });\n                rule.selector = placeholder + rule.selector;\n                return rule;\n            };\n            cssText = processRules(cssText, function (rule) {\n                if (rule.selector[0] !== '@') {\n                    return processCommentedSelector_1(rule);\n                }\n                else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                    rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                    rule.content = processRules(rule.content, processCommentedSelector_1);\n                    return rule;\n                }\n                return rule;\n            });\n        }\n        var scopedCssText = this._scopeCssText(cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector);\n        cssText = [scopedCssText].concat(commentsWithHash).join('\\n');\n        if (commentOriginalSelector) {\n            orgSelectors.forEach(function (_a) {\n                var placeholder = _a.placeholder, comment = _a.comment;\n                cssText = cssText.replace(placeholder, comment);\n            });\n        }\n        return cssText;\n    };\n    ShadowCss.prototype._scopeCssText = function (cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) {\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertColonSlotted(cssText, slotScopeId);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeId) {\n            cssText = this._scopeSelectors(cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector);\n        }\n        cssText = cssText.replace(/-shadowcsshost-no-combinator/g, \".\" + hostScopeId);\n        cssText = cssText.replace(/>\\s*\\*\\s+([^{, ]+)/gm, ' $1 ');\n        return cssText.trim();\n    };\n    /*\n     * convert a rule like :host(.foo) > .bar { }\n     *\n     * to\n     *\n     * .foo<scopeName> > .bar\n    */\n    ShadowCss.prototype._convertColonHost = function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /*\n   * convert a rule like ::slotted(.foo) { }\n  */\n    ShadowCss.prototype._convertColonSlotted = function (cssText, slotAttr) {\n        var regExp = _cssColonSlottedRe;\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var compound = m[2].trim();\n                var suffix = m[3];\n                var sel = '.' + slotAttr + ' > ' + compound + suffix;\n                return sel;\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /*\n     * convert a rule like :host-context(.foo) > .bar { }\n     *\n     * to\n     *\n     * .foo<scopeName> > .bar, .foo scopeName > .bar { }\n     *\n     * and\n     *\n     * :host-context(.foo:host) .bar { ... }\n     *\n     * to\n     *\n     * .foo<scopeName> .bar { ... }\n    */\n    ShadowCss.prototype._convertColonHostContext = function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    ShadowCss.prototype._convertColonRule = function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var parts = m[2].split(',');\n                var r = [];\n                for (var i = 0; i < parts.length; i++) {\n                    var p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    ShadowCss.prototype._colonHostContextPartReplacer = function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    ShadowCss.prototype._colonHostPartReplacer = function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /*\n     * Convert combinators like ::shadow and pseudo-elements like ::content\n     * by replacing with space.\n    */\n    ShadowCss.prototype._convertShadowDOMSelectors = function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    // change a selector like 'div' to 'name div'\n    ShadowCss.prototype._scopeSelectors = function (cssText, scopeSelector, hostSelector, slotSelector, commentOriginalSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var selector = rule.selector;\n            var content = rule.content;\n            if (rule.selector[0] !== '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, slotSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector, slotSelector, commentOriginalSelector);\n            }\n            selector = selector.replace(/\\s{2,}/g, ' ').trim();\n            return new CssRule(selector, content);\n        });\n    };\n    ShadowCss.prototype._scopeSelector = function (selector, scopeSelector, hostSelector, slotSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (shallowPart) {\n            if (slotSelector && shallowPart.indexOf('.' + slotSelector) > -1) {\n                return shallowPart.trim();\n            }\n            if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                return strict ?\n                    _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector).trim() :\n                    _this._applySelectorScope(shallowPart, scopeSelector, hostSelector).trim();\n            }\n            else {\n                return shallowPart.trim();\n            }\n        })\n            .join(', ');\n    };\n    ShadowCss.prototype._selectorNeedsScoping = function (selector, scopeSelector) {\n        var re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    ShadowCss.prototype._makeScopeMatcher = function (scopeSelector) {\n        var lre = /\\[/g;\n        var rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    ShadowCss.prototype._applySelectorScope = function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    // scope via name and [is=name]\n    ShadowCss.prototype._applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var replaceBy_1 = this.strictStyling ? \".\" + hostSelector : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (_, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    ShadowCss.prototype._applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var className = '.' + scopeSelector;\n        var _scopeSelectorPart = function (p) {\n            var scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + className + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var scopedSelector = '';\n        var startIndex = 0;\n        var res;\n        var sep = /( |>|\\+|~(?!=))\\s*/g;\n        // If a selector appears before :host it should not be shimmed as it\n        // matches on ancestor elements and not on elements in the host's shadow\n        // `:host-context(div)` is transformed to\n        // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n        // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n        // Historically `component-tag:host` was matching the component so we also want to preserve\n        // this behavior to avoid breaking legacy apps (it should not match).\n        // The behavior should be:\n        // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n        // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n        //   `:host-context(tag)`)\n        var hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n        // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n        var shouldScope = !hasHost;\n        while ((res = sep.exec(selector)) !== null) {\n            var separator = res[1];\n            var part_1 = selector.slice(startIndex, res.index).trim();\n            shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n            var scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        var part = selector.substring(startIndex);\n        shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n        scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    ShadowCss.prototype._insertPolyfillHostInCssText = function (selector) {\n        selector = selector\n            .replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost)\n            .replace(_colonSlottedRe, _polyfillSlotted);\n        return selector;\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = /** @class */ (function () {\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    SafeSelector.prototype.restore = function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (_, index) { return _this.placeholders[+index]; });\n    };\n    SafeSelector.prototype.content = function () { return this._content; };\n    return SafeSelector;\n}());\nvar _polyfillHost = '-shadowcsshost';\nvar _polyfillSlotted = '-shadowcssslotted';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _cssColonSlottedRe = new RegExp('(' + _polyfillSlotted + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g\n];\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonSlottedRe = /::slotted/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\nvar _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\nfunction extractCommentsWithHash(input) {\n    return input.match(_commentWithHashRe) || [];\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = /** @class */ (function () {\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\nfunction processRules(input, ruleCallback) {\n    var inputWithEscapedBlocks = escapeBlocks(input);\n    var nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var selector = m[2];\n        var content = '';\n        var suffix = m[4];\n        var contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = /** @class */ (function () {\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\nfunction escapeBlocks(input) {\n    var inputParts = input.split(_curlyRe);\n    var resultParts = [];\n    var escapedBlocks = [];\n    var bracketCount = 0;\n    var currentBlockParts = [];\n    for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var part = inputParts[partIndex];\n        if (part === CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part === OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\nexport { ShadowCss, scopeCss };\n"],"sourceRoot":""}