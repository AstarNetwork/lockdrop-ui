{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/ion-action-sheet-controller_8.entry.js","../node_modules/@ionic/core/dist/esm-es5/theme-18cbe2cc.js"],"names":["ActionSheetController","class_1","hostRef","registerInstance","this","prototype","create","options","createOverlay","dismiss","data","role","id","dismissOverlay","document","getTop","__awaiter","__generator","_a","getOverlay","AlertController","class_2","Anchor","_this","routerDirection","onClick","ev","openURL","href","componentDidLoad","console","warn","render","mode","getIonMode","attrs","rel","h","Host","class","Object","assign","createColorClasses","color","defineProperty","get","enumerable","configurable","LoadingController","class_3","ModalController","class_4","PickerController","class_5","PopoverController","class_6","ToastController","class_7","hostContext","selector","el","closest","length","undefined","getClassMap","classes","map","Array","isArray","split","filter","c","trim","getClassList","forEach","SCHEME","url","direction","router","test","querySelector","preventDefault","push"],"mappings":"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","file":"static/js/43.4e34575c.chunk.js","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nimport { r as registerInstance, d as getIonMode, h, H as Host } from './core-ca0488fc.js';\nimport './config-3c7f3790.js';\nimport { h as createOverlay, j as dismissOverlay, k as getOverlay } from './overlays-10640d86.js';\nimport { o as openURL, c as createColorClasses } from './theme-18cbe2cc.js';\nvar ActionSheetController = /** @class */ (function () {\n    function class_1(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create an action sheet overlay with action sheet options.\n     *\n     * @param options The options to use to create the action sheet.\n     */\n    class_1.prototype.create = function (options) {\n        return createOverlay('ion-action-sheet', options);\n    };\n    /**\n     * Dismiss the open action sheet overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the action sheet.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the action sheet.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     * @param id The id of the action sheet to dismiss. If an id is not provided, it will dismiss the most recently opened action sheet.\n     */\n    class_1.prototype.dismiss = function (data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-action-sheet', id);\n    };\n    /**\n     * Get the most recently opened action sheet overlay.\n     */\n    class_1.prototype.getTop = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, getOverlay(document, 'ion-action-sheet')];\n            });\n        });\n    };\n    return class_1;\n}());\nvar AlertController = /** @class */ (function () {\n    function class_2(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create an alert overlay with alert options.\n     *\n     * @param options The options to use to create the alert.\n     */\n    class_2.prototype.create = function (options) {\n        return createOverlay('ion-alert', options);\n    };\n    /**\n     * Dismiss the open alert overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the alert.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the alert.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     * @param id The id of the alert to dismiss. If an id is not provided, it will dismiss the most recently opened alert.\n     */\n    class_2.prototype.dismiss = function (data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-alert', id);\n    };\n    /**\n     * Get the most recently opened alert overlay.\n     */\n    class_2.prototype.getTop = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, getOverlay(document, 'ion-alert')];\n            });\n        });\n    };\n    return class_2;\n}());\nvar Anchor = /** @class */ (function () {\n    function Anchor(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        /**\n         * When using a router, it specifies the transition direction when navigating to\n         * another page using `href`.\n         */\n        this.routerDirection = 'forward';\n        this.onClick = function (ev) {\n            openURL(_this.href, ev, _this.routerDirection);\n        };\n    }\n    Anchor.prototype.componentDidLoad = function () {\n        console.warn('[DEPRECATED][ion-anchor] The <ion-anchor> component has been deprecated. Please use an <ion-router-link> if you are using a vanilla JS or Stencil project or an <a> with the Angular router.');\n    };\n    Anchor.prototype.render = function () {\n        var _a;\n        var mode = getIonMode(this);\n        var attrs = {\n            href: this.href,\n            rel: this.rel\n        };\n        return (h(Host, { onClick: this.onClick, class: Object.assign(Object.assign({}, createColorClasses(this.color)), (_a = {}, _a[mode] = true, _a['ion-activatable'] = true, _a)) }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null))));\n    };\n    Object.defineProperty(Anchor, \"style\", {\n        get: function () { return \":host{--background:transparent;--color:var(--ion-color-primary,#3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return Anchor;\n}());\nvar LoadingController = /** @class */ (function () {\n    function class_3(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create a loading overlay with loading options.\n     *\n     * @param options The options to use to create the loading.\n     */\n    class_3.prototype.create = function (options) {\n        return createOverlay('ion-loading', options);\n    };\n    /**\n     * Dismiss the open loading overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the loading.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the loading.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     * @param id The id of the loading to dismiss. If an id is not provided, it will dismiss the most recently opened loading.\n     */\n    class_3.prototype.dismiss = function (data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-loading', id);\n    };\n    /**\n     * Get the most recently opened loading overlay.\n     */\n    class_3.prototype.getTop = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, getOverlay(document, 'ion-loading')];\n            });\n        });\n    };\n    return class_3;\n}());\nvar ModalController = /** @class */ (function () {\n    function class_4(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create a modal overlay with modal options.\n     *\n     * @param options The options to use to create the modal.\n     */\n    class_4.prototype.create = function (options) {\n        return createOverlay('ion-modal', options);\n    };\n    /**\n     * Dismiss the open modal overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the modal.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the modal.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     * @param id The id of the modal to dismiss. If an id is not provided, it will dismiss the most recently opened modal.\n     */\n    class_4.prototype.dismiss = function (data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-modal', id);\n    };\n    /**\n     * Get the most recently opened modal overlay.\n     */\n    class_4.prototype.getTop = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, getOverlay(document, 'ion-modal')];\n            });\n        });\n    };\n    return class_4;\n}());\nvar PickerController = /** @class */ (function () {\n    function class_5(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create a picker overlay with picker options.\n     *\n     * @param options The options to use to create the picker.\n     */\n    class_5.prototype.create = function (options) {\n        return createOverlay('ion-picker', options);\n    };\n    /**\n     * Dismiss the open picker overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the picker.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the picker.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     * @param id The id of the picker to dismiss. If an id is not provided, it will dismiss the most recently opened picker.\n     */\n    class_5.prototype.dismiss = function (data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-picker', id);\n    };\n    /**\n     * Get the most recently opened picker overlay.\n     */\n    class_5.prototype.getTop = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, getOverlay(document, 'ion-picker')];\n            });\n        });\n    };\n    return class_5;\n}());\nvar PopoverController = /** @class */ (function () {\n    function class_6(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create a popover overlay with popover options.\n     *\n     * @param options The options to use to create the popover.\n     */\n    class_6.prototype.create = function (options) {\n        return createOverlay('ion-popover', options);\n    };\n    /**\n     * Dismiss the open popover overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the popover.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the popover.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     * @param id The id of the popover to dismiss. If an id is not provided, it will dismiss the most recently opened popover.\n     */\n    class_6.prototype.dismiss = function (data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-popover', id);\n    };\n    /**\n     * Get the most recently opened popover overlay.\n     */\n    class_6.prototype.getTop = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, getOverlay(document, 'ion-popover')];\n            });\n        });\n    };\n    return class_6;\n}());\nvar ToastController = /** @class */ (function () {\n    function class_7(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create a toast overlay with toast options.\n     *\n     * @param options The options to use to create the toast.\n     */\n    class_7.prototype.create = function (options) {\n        return createOverlay('ion-toast', options);\n    };\n    /**\n     * Dismiss the open toast overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the toast. For example, 'cancel' or 'backdrop'.\n     * @param id The id of the toast to dismiss. If an id is not provided, it will dismiss the most recently opened toast.\n     */\n    class_7.prototype.dismiss = function (data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-toast', id);\n    };\n    /**\n     * Get the most recently opened toast overlay.\n     */\n    class_7.prototype.getTop = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, getOverlay(document, 'ion-toast')];\n            });\n        });\n    };\n    return class_7;\n}());\nexport { ActionSheetController as ion_action_sheet_controller, AlertController as ion_alert_controller, Anchor as ion_anchor, LoadingController as ion_loading_controller, ModalController as ion_modal_controller, PickerController as ion_picker_controller, PopoverController as ion_popover_controller, ToastController as ion_toast_controller };\n","import { __awaiter, __generator } from \"tslib\";\nvar hostContext = function (selector, el) {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nvar createColorClasses = function (color) {\n    var _a;\n    return (typeof color === 'string' && color.length > 0) ? (_a = {\n            'ion-color': true\n        },\n        _a[\"ion-color-\" + color] = true,\n        _a) : undefined;\n};\nvar getClassList = function (classes) {\n    if (classes !== undefined) {\n        var array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(function (c) { return c != null; })\n            .map(function (c) { return c.trim(); })\n            .filter(function (c) { return c !== ''; });\n    }\n    return [];\n};\nvar getClassMap = function (classes) {\n    var map = {};\n    getClassList(classes).forEach(function (c) { return map[c] = true; });\n    return map;\n};\nvar SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nvar openURL = function (url, ev, direction) { return __awaiter(void 0, void 0, void 0, function () {\n    var router;\n    return __generator(this, function (_a) {\n        if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n            router = document.querySelector('ion-router');\n            if (router) {\n                if (ev != null) {\n                    ev.preventDefault();\n                }\n                return [2 /*return*/, router.push(url, direction)];\n            }\n        }\n        return [2 /*return*/, false];\n    });\n}); };\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"sourceRoot":""}